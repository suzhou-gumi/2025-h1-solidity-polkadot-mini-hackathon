{"id":"f67b9ac207c50835d96af485a46a3ccb","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/ContractVerifier.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"./interfaces/IContractVerifier.sol\";\n\n// 定义合约验证器合约，继承自IContractVerifier接口\ncontract ContractVerifier is IContractVerifier {\n\n    address public owner;\n\n    mapping(address => UserInfo) private _userInfos;\n    mapping(uint256 => ContractVersion[]) private _contractHistory;\n    mapping(uint256 => ContractMeta) private _contractMetas;\n    mapping(bytes32 => bool) private _hashExists;\n    mapping(address => uint256[]) private _uploaderToContracts;\n    mapping(uint256 => mapping(address => bool)) private _contractAccess;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function assignUserRole(address user) external override onlyOwner {\n    _userInfos[user] = UserInfo(\"Uploader\", \"DPT\");\n    emit RoleAssigned(user, \"Uploader\", \"DPT\");\n}\n\n\n    function getUserInfo(address user) external view override returns (UserInfo memory) {\n        return _userInfos[user];\n    }\n\n    function uploadContract(\n        uint256 contractId,\n        bytes32 fileHash,\n        string calldata remark,\n        string calldata contractType\n    ) external override onlyUploader {\n        ContractVersion memory version = ContractVersion({\n            fileHash: fileHash,\n            uploader: msg.sender,\n            timestamp: block.timestamp,\n            remark: remark\n        });\n\n        _contractHistory[contractId].push(version);\n        if (_contractHistory[contractId].length == 1) {\n            _contractMetas[contractId].contractType = contractType;\n        }\n\n        _hashExists[fileHash] = true;\n        _uploaderToContracts[msg.sender].push(contractId);\n\n        emit ContractUploaded(contractId, fileHash, msg.sender);\n    }\n\n    function grantAccessToContract(uint256 contractId, address user) external override onlyOwner {\n        require(!_contractAccess[contractId][user], \"Already granted\");\n        _contractAccess[contractId][user] = true;\n        _contractMetas[contractId].allowedViewers.push(user);\n        emit ContractAccessGranted(contractId, user);\n    }\n\n    function revokeAccessFromContract(uint256 contractId, address user) external override onlyOwner {\n        require(_contractAccess[contractId][user], \"Not granted\");\n        _contractAccess[contractId][user] = false;\n        emit ContractAccessRevoked(contractId, user);\n    }\n\n    function canAccessContract(uint256 contractId, address user) external view override returns (bool) {\n        return _contractAccess[contractId][user];\n    }\n\n    function getLatestHash(uint256 contractId) external view override returns (bytes32) {\n        uint len = _contractHistory[contractId].length;\n        require(len > 0, \"No contract uploaded\");\n        return _contractHistory[contractId][len - 1].fileHash;\n    }\n\n    function getHistoryCount(uint256 contractId) external view override returns (uint256) {\n        return _contractHistory[contractId].length;\n    }\n\n    function getHistory(uint256 contractId, uint256 version) external view override returns (ContractVersion memory) {\n        require(version < _contractHistory[contractId].length, \"Invalid version\");\n        return _contractHistory[contractId][version];\n    }\n\n    function getContractMeta(uint256 contractId) external view override returns (ContractMeta memory) {\n        return _contractMetas[contractId];\n    }\n\n    function isHashExists(bytes32 fileHash) external view override returns (bool) {\n        return _hashExists[fileHash];\n    }\n\n    function getUploaderHistory(address uploader) external view override returns (uint256[] memory) {\n        return _uploaderToContracts[uploader];\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        _;\n    }\n\n    modifier onlyUploader() {\n        require(keccak256(bytes(_userInfos[msg.sender].role)) == keccak256(\"Uploader\"), \"Not uploader\");\n        _;\n    }\n}\n"},"contracts/interfaces/IContractVerifier.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IContractVerifier{\n    struct ContractVersion {\n        bytes32 fileHash;\n        address uploader;\n        uint256 timestamp;\n        string remark;\n    }\n\n    struct ContractMeta {\n        string contractType; // 如“采购类”、“销售类”等\n        address[] allowedViewers; // 允许访问该合约的地址列表\n    }\n\n    struct UserInfo {\n        string role; // 如 \"Uploader\", \"Business\", \"Auditor\"\n        string departmentId;\n    }\n\n    // === 事件 ===\n    event ContractUploaded(uint256 indexed contractId, bytes32 fileHash, address indexed uploader);\n    event ContractAccessGranted(uint256 indexed contractId, address indexed user);\n    event ContractAccessRevoked(uint256 indexed contractId, address indexed user);\n    event RoleAssigned(address indexed user, string role, string departmentId);\n\n    // === 权限管理 ===\n    function assignUserRole(address user) external;\n    function getUserInfo(address user) external view returns (UserInfo memory);\n\n    // === 合同上传与访问控制 ===\n    function uploadContract(\n        uint256 contractId,\n        bytes32 fileHash,\n        string calldata remark,\n        string calldata contractType\n    ) external;\n\n    function grantAccessToContract(uint256 contractId, address user) external;\n    function revokeAccessFromContract(uint256 contractId, address user) external;\n    function canAccessContract(uint256 contractId, address user) external view returns (bool);\n\n    // === 查询接口 ===\n    function getLatestHash(uint256 contractId) external view returns (bytes32);\n    function getHistoryCount(uint256 contractId) external view returns (uint256);\n    function getHistory(uint256 contractId, uint256 version) external view returns (ContractVersion memory);\n    function getContractMeta(uint256 contractId) external view returns (ContractMeta memory);\n    function isHashExists(bytes32 fileHash) external view returns (bool);\n\n    // === 可选辅助 ===\n    function getUploaderHistory(address uploader) external view returns (uint256[] memory contractIds);\n}\n"},"contracts/Lock.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Lock {\n    uint public unlockTime;\n    address payable public owner;\n\n    event Withdrawal(uint amount, uint when);\n\n    constructor(uint _unlockTime) payable {\n        require(\n            block.timestamp < _unlockTime,\n            \"Unlock time should be in the future\"\n        );\n\n        unlockTime = _unlockTime;\n        owner = payable(msg.sender);\n    }\n\n    function withdraw() public {\n        // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n        // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n\n        require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n        require(msg.sender == owner, \"You aren't the owner\");\n\n        emit Withdrawal(address(this).balance, block.timestamp);\n\n        owner.transfer(address(this).balance);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"z","fallback_to_optimizing_for_size":true,"runs":400},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/Lock.sol\n","message":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n","severity":"warning","sourceLocation":{"file":"1","start":961,"end":998},"type":"Warning"}],"version":"0.8.28","long_version":"0.8.28+commit.7893614a.Darwin.appleclang","revive_version":"0.1.0-dev.13+commit.ad33153.llvm-18.1.8","sources":{"contracts/ContractVerifier.sol":{"id":0,"ast":{"absolutePath":"contracts/ContractVerifier.sol","exportedSymbols":{"ContractVerifier":[396],"IContractVerifier":[620]},"id":397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"contracts/interfaces/IContractVerifier.sol","file":"./interfaces/IContractVerifier.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":397,"sourceUnit":621,"src":"57:44:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3,"name":"IContractVerifier","nameLocations":["198:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":620,"src":"198:17:0"},"id":4,"nodeType":"InheritanceSpecifier","src":"198:17:0"}],"canonicalName":"ContractVerifier","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":396,"linearizedBaseContracts":[396,620],"name":"ContractVerifier","nameLocation":"178:16:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":6,"mutability":"mutable","name":"owner","nameLocation":"238:5:0","nodeType":"VariableDeclaration","scope":396,"src":"223:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":11,"mutability":"mutable","name":"_userInfos","nameLocation":"287:10:0","nodeType":"VariableDeclaration","scope":396,"src":"250:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$497_storage_$","typeString":"mapping(address => struct IContractVerifier.UserInfo)"},"typeName":{"id":10,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"258:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"250:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$497_storage_$","typeString":"mapping(address => struct IContractVerifier.UserInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9,"nodeType":"UserDefinedTypeName","pathNode":{"id":8,"name":"UserInfo","nameLocations":["269:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":497,"src":"269:8:0"},"referencedDeclaration":497,"src":"269:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_storage_ptr","typeString":"struct IContractVerifier.UserInfo"}}},"visibility":"private"},{"constant":false,"id":17,"mutability":"mutable","name":"_contractHistory","nameLocation":"349:16:0","nodeType":"VariableDeclaration","scope":396,"src":"303:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion[])"},"typeName":{"id":16,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"303:37:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":14,"nodeType":"UserDefinedTypeName","pathNode":{"id":13,"name":"ContractVersion","nameLocations":["322:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"322:15:0"},"referencedDeclaration":486,"src":"322:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_storage_ptr","typeString":"struct IContractVerifier.ContractVersion"}},"id":15,"nodeType":"ArrayTypeName","src":"322:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_ptr","typeString":"struct IContractVerifier.ContractVersion[]"}}},"visibility":"private"},{"constant":false,"id":22,"mutability":"mutable","name":"_contractMetas","nameLocation":"412:14:0","nodeType":"VariableDeclaration","scope":396,"src":"371:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContractMeta_$492_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractMeta)"},"typeName":{"id":21,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"371:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContractMeta_$492_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractMeta)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"ContractMeta","nameLocations":["390:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":492,"src":"390:12:0"},"referencedDeclaration":492,"src":"390:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_storage_ptr","typeString":"struct IContractVerifier.ContractMeta"}}},"visibility":"private"},{"constant":false,"id":26,"mutability":"mutable","name":"_hashExists","nameLocation":"465:11:0","nodeType":"VariableDeclaration","scope":396,"src":"432:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":25,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"432:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"name":"bool","nodeType":"ElementaryTypeName","src":"451:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":31,"mutability":"mutable","name":"_uploaderToContracts","nameLocation":"520:20:0","nodeType":"VariableDeclaration","scope":396,"src":"482:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":30,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"490:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"482:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":28,"name":"uint256","nodeType":"ElementaryTypeName","src":"501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29,"nodeType":"ArrayTypeName","src":"501:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"id":37,"mutability":"mutable","name":"_contractAccess","nameLocation":"599:15:0","nodeType":"VariableDeclaration","scope":396,"src":"546:68:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":36,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"546:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":35,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"565:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":34,"name":"bool","nodeType":"ElementaryTypeName","src":"584:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"635:35:0","statements":[{"expression":{"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"645:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":41,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"653:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"657:6:0","memberName":"sender","nodeType":"MemberAccess","src":"653:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"645:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":44,"nodeType":"ExpressionStatement","src":"645:18:0"}]},"id":46,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"632:2:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"635:0:0"},"scope":396,"src":"621:49:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[530],"body":{"id":69,"nodeType":"Block","src":"742:103:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":54,"name":"_userInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"748:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$497_storage_$","typeString":"mapping(address => struct IContractVerifier.UserInfo storage ref)"}},"id":56,"indexExpression":{"id":55,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"759:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"748:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_storage","typeString":"struct IContractVerifier.UserInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"55706c6f61646572","id":58,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"776:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_35381eefa9dbd87bb7976eea5b33f7df38a53bffa748fffdf317fc5a4b1b1dbf","typeString":"literal_string \"Uploader\""},"value":"Uploader"},{"hexValue":"445054","id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"788:5:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a763c9f0ef5e4ae61e7ee2c0184dc633775aecd4360730cf6cf3fcfde00a2b0e","typeString":"literal_string \"DPT\""},"value":"DPT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_35381eefa9dbd87bb7976eea5b33f7df38a53bffa748fffdf317fc5a4b1b1dbf","typeString":"literal_string \"Uploader\""},{"typeIdentifier":"t_stringliteral_a763c9f0ef5e4ae61e7ee2c0184dc633775aecd4360730cf6cf3fcfde00a2b0e","typeString":"literal_string \"DPT\""}],"id":57,"name":"UserInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"767:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserInfo_$497_storage_ptr_$","typeString":"type(struct IContractVerifier.UserInfo storage pointer)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"767:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_memory_ptr","typeString":"struct IContractVerifier.UserInfo memory"}},"src":"748:46:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_storage","typeString":"struct IContractVerifier.UserInfo storage ref"}},"id":62,"nodeType":"ExpressionStatement","src":"748:46:0"},{"eventCall":{"arguments":[{"id":64,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"818:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"55706c6f61646572","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"824:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_35381eefa9dbd87bb7976eea5b33f7df38a53bffa748fffdf317fc5a4b1b1dbf","typeString":"literal_string \"Uploader\""},"value":"Uploader"},{"hexValue":"445054","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"836:5:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a763c9f0ef5e4ae61e7ee2c0184dc633775aecd4360730cf6cf3fcfde00a2b0e","typeString":"literal_string \"DPT\""},"value":"DPT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_35381eefa9dbd87bb7976eea5b33f7df38a53bffa748fffdf317fc5a4b1b1dbf","typeString":"literal_string \"Uploader\""},{"typeIdentifier":"t_stringliteral_a763c9f0ef5e4ae61e7ee2c0184dc633775aecd4360730cf6cf3fcfde00a2b0e","typeString":"literal_string \"DPT\""}],"id":63,"name":"RoleAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"805:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"805:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":68,"nodeType":"EmitStatement","src":"800:42:0"}]},"functionSelector":"859c62bd","id":70,"implemented":true,"kind":"function","modifiers":[{"id":52,"kind":"modifierInvocation","modifierName":{"id":51,"name":"onlyOwner","nameLocations":["732:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"732:9:0"},"nodeType":"ModifierInvocation","src":"732:9:0"}],"name":"assignUserRole","nameLocation":"685:14:0","nodeType":"FunctionDefinition","overrides":{"id":50,"nodeType":"OverrideSpecifier","overrides":[],"src":"723:8:0"},"parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"user","nameLocation":"708:4:0","nodeType":"VariableDeclaration","scope":70,"src":"700:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"699:14:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"742:0:0"},"scope":396,"src":"676:169:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[538],"body":{"id":83,"nodeType":"Block","src":"936:40:0","statements":[{"expression":{"baseExpression":{"id":79,"name":"_userInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"953:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$497_storage_$","typeString":"mapping(address => struct IContractVerifier.UserInfo storage ref)"}},"id":81,"indexExpression":{"id":80,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"964:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"953:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_storage","typeString":"struct IContractVerifier.UserInfo storage ref"}},"functionReturnParameters":78,"id":82,"nodeType":"Return","src":"946:23:0"}]},"functionSelector":"6386c1c7","id":84,"implemented":true,"kind":"function","modifiers":[],"name":"getUserInfo","nameLocation":"861:11:0","nodeType":"FunctionDefinition","overrides":{"id":74,"nodeType":"OverrideSpecifier","overrides":[],"src":"901:8:0"},"parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"user","nameLocation":"881:4:0","nodeType":"VariableDeclaration","scope":84,"src":"873:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"872:14:0"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"919:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_memory_ptr","typeString":"struct IContractVerifier.UserInfo"},"typeName":{"id":76,"nodeType":"UserDefinedTypeName","pathNode":{"id":75,"name":"UserInfo","nameLocations":["919:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":497,"src":"919:8:0"},"referencedDeclaration":497,"src":"919:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_storage_ptr","typeString":"struct IContractVerifier.UserInfo"}},"visibility":"internal"}],"src":"918:17:0"},"scope":396,"src":"852:124:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[549],"body":{"id":153,"nodeType":"Block","src":"1167:562:0","statements":[{"assignments":[100],"declarations":[{"constant":false,"id":100,"mutability":"mutable","name":"version","nameLocation":"1200:7:0","nodeType":"VariableDeclaration","scope":153,"src":"1177:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_memory_ptr","typeString":"struct IContractVerifier.ContractVersion"},"typeName":{"id":99,"nodeType":"UserDefinedTypeName","pathNode":{"id":98,"name":"ContractVersion","nameLocations":["1177:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"1177:15:0"},"referencedDeclaration":486,"src":"1177:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_storage_ptr","typeString":"struct IContractVerifier.ContractVersion"}},"visibility":"internal"}],"id":109,"initialValue":{"arguments":[{"id":102,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1250:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1282:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1286:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1282:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":105,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1317:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1323:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"1317:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":107,"name":"remark","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"1354:6:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":101,"name":"ContractVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1210:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ContractVersion_$486_storage_ptr_$","typeString":"type(struct IContractVerifier.ContractVersion storage pointer)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1240:8:0","1272:8:0","1306:9:0","1346:6:0"],"names":["fileHash","uploader","timestamp","remark"],"nodeType":"FunctionCall","src":"1210:161:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_memory_ptr","typeString":"struct IContractVerifier.ContractVersion memory"}},"nodeType":"VariableDeclarationStatement","src":"1177:194:0"},{"expression":{"arguments":[{"id":114,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1416:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_memory_ptr","typeString":"struct IContractVerifier.ContractVersion memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ContractVersion_$486_memory_ptr","typeString":"struct IContractVerifier.ContractVersion memory"}],"expression":{"baseExpression":{"id":110,"name":"_contractHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1382:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion storage ref[] storage ref)"}},"id":112,"indexExpression":{"id":111,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1399:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1382:28:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage","typeString":"struct IContractVerifier.ContractVersion storage ref[] storage ref"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1411:4:0","memberName":"push","nodeType":"MemberAccess","src":"1382:33:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_ptr_$_t_struct$_ContractVersion_$486_storage_$returns$__$attached_to$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_ptr_$","typeString":"function (struct IContractVerifier.ContractVersion storage ref[] storage pointer,struct IContractVerifier.ContractVersion storage ref)"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1382:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":116,"nodeType":"ExpressionStatement","src":"1382:42:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":117,"name":"_contractHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1438:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion storage ref[] storage ref)"}},"id":119,"indexExpression":{"id":118,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1455:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1438:28:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage","typeString":"struct IContractVerifier.ContractVersion storage ref[] storage ref"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1467:6:0","memberName":"length","nodeType":"MemberAccess","src":"1438:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1438:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":131,"nodeType":"IfStatement","src":"1434:125:0","trueBody":{"id":130,"nodeType":"Block","src":"1480:79:0","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":123,"name":"_contractMetas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"1494:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContractMeta_$492_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractMeta storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1509:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1494:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_storage","typeString":"struct IContractVerifier.ContractMeta storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1521:12:0","memberName":"contractType","nodeType":"MemberAccess","referencedDeclaration":488,"src":"1494:39:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"contractType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1536:12:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"1494:54:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":129,"nodeType":"ExpressionStatement","src":"1494:54:0"}]}},{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":132,"name":"_hashExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1569:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":134,"indexExpression":{"id":133,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1581:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1569:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1569:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"1569:28:0"},{"expression":{"arguments":[{"id":143,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1645:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":138,"name":"_uploaderToContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1607:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":141,"indexExpression":{"expression":{"id":139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1628:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1632:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1628:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1607:32:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1640:4:0","memberName":"push","nodeType":"MemberAccess","src":"1607:37:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"ExpressionStatement","src":"1607:49:0"},{"eventCall":{"arguments":[{"id":147,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1689:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":148,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1701:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1711:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1711:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":146,"name":"ContractUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"1672:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,address)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"EmitStatement","src":"1667:55:0"}]},"functionSelector":"010f4549","id":154,"implemented":true,"kind":"function","modifiers":[{"id":96,"kind":"modifierInvocation","modifierName":{"id":95,"name":"onlyUploader","nameLocations":["1154:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":395,"src":"1154:12:0"},"nodeType":"ModifierInvocation","src":"1154:12:0"}],"name":"uploadContract","nameLocation":"991:14:0","nodeType":"FunctionDefinition","overrides":{"id":94,"nodeType":"OverrideSpecifier","overrides":[],"src":"1145:8:0"},"parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"contractId","nameLocation":"1023:10:0","nodeType":"VariableDeclaration","scope":154,"src":"1015:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"fileHash","nameLocation":"1051:8:0","nodeType":"VariableDeclaration","scope":154,"src":"1043:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":87,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1043:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"remark","nameLocation":"1085:6:0","nodeType":"VariableDeclaration","scope":154,"src":"1069:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":89,"name":"string","nodeType":"ElementaryTypeName","src":"1069:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"contractType","nameLocation":"1117:12:0","nodeType":"VariableDeclaration","scope":154,"src":"1101:28:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"1101:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1005:130:0"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[],"src":"1167:0:0"},"scope":396,"src":"982:747:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[556],"body":{"id":195,"nodeType":"Block","src":"1828:245:0","statements":[{"expression":{"arguments":[{"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1846:34:0","subExpression":{"baseExpression":{"baseExpression":{"id":165,"name":"_contractAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1847:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":167,"indexExpression":{"id":166,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1863:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1847:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":169,"indexExpression":{"id":168,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1875:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1847:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206772616e746564","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1882:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eeac9f51dc9b7610f38c2d2bcf5d422542fb4439e997468efa7700c17d41a07","typeString":"literal_string \"Already granted\""},"value":"Already granted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eeac9f51dc9b7610f38c2d2bcf5d422542fb4439e997468efa7700c17d41a07","typeString":"literal_string \"Already granted\""}],"id":164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1838:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":173,"nodeType":"ExpressionStatement","src":"1838:62:0"},{"expression":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":174,"name":"_contractAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1910:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":177,"indexExpression":{"id":175,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1926:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1910:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":178,"indexExpression":{"id":176,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1938:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1910:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1946:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1910:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":181,"nodeType":"ExpressionStatement","src":"1910:40:0"},{"expression":{"arguments":[{"id":187,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"2007:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":182,"name":"_contractMetas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"1960:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContractMeta_$492_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractMeta storage ref)"}},"id":184,"indexExpression":{"id":183,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1975:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1960:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_storage","typeString":"struct IContractVerifier.ContractMeta storage ref"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1987:14:0","memberName":"allowedViewers","nodeType":"MemberAccess","referencedDeclaration":491,"src":"1960:41:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2002:4:0","memberName":"push","nodeType":"MemberAccess","src":"1960:46:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1960:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"1960:52:0"},{"eventCall":{"arguments":[{"id":191,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2049:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":192,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"2061:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":190,"name":"ContractAccessGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2027:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2027:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":194,"nodeType":"EmitStatement","src":"2022:44:0"}]},"functionSelector":"cc826a1d","id":196,"implemented":true,"kind":"function","modifiers":[{"id":162,"kind":"modifierInvocation","modifierName":{"id":161,"name":"onlyOwner","nameLocations":["1818:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"1818:9:0"},"nodeType":"ModifierInvocation","src":"1818:9:0"}],"name":"grantAccessToContract","nameLocation":"1744:21:0","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"1809:8:0"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"contractId","nameLocation":"1774:10:0","nodeType":"VariableDeclaration","scope":196,"src":"1766:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"user","nameLocation":"1794:4:0","nodeType":"VariableDeclaration","scope":196,"src":"1786:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1765:34:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"1828:0:0"},"scope":396,"src":"1735:338:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[563],"body":{"id":228,"nodeType":"Block","src":"2175:179:0","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":207,"name":"_contractAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2193:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":209,"indexExpression":{"id":208,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2209:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2193:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":211,"indexExpression":{"id":210,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"2221:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2193:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206772616e746564","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2228:13:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_73b952ddf27457ea9a78e0190eccb5af6b42db3e503fef0de87387139fbba949","typeString":"literal_string \"Not granted\""},"value":"Not granted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73b952ddf27457ea9a78e0190eccb5af6b42db3e503fef0de87387139fbba949","typeString":"literal_string \"Not granted\""}],"id":206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2185:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2185:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"2185:57:0"},{"expression":{"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":215,"name":"_contractAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2252:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":218,"indexExpression":{"id":216,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2268:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2252:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":219,"indexExpression":{"id":217,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"2280:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2252:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2288:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2252:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":222,"nodeType":"ExpressionStatement","src":"2252:41:0"},{"eventCall":{"arguments":[{"id":224,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2330:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":225,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":223,"name":"ContractAccessRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2308:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":227,"nodeType":"EmitStatement","src":"2303:44:0"}]},"functionSelector":"a125d423","id":229,"implemented":true,"kind":"function","modifiers":[{"id":204,"kind":"modifierInvocation","modifierName":{"id":203,"name":"onlyOwner","nameLocations":["2165:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":373,"src":"2165:9:0"},"nodeType":"ModifierInvocation","src":"2165:9:0"}],"name":"revokeAccessFromContract","nameLocation":"2088:24:0","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"2156:8:0"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"contractId","nameLocation":"2121:10:0","nodeType":"VariableDeclaration","scope":229,"src":"2113:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"user","nameLocation":"2141:4:0","nodeType":"VariableDeclaration","scope":229,"src":"2133:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"2133:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2112:34:0"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2175:0:0"},"scope":396,"src":"2079:275:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[572],"body":{"id":245,"nodeType":"Block","src":"2459:57:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":239,"name":"_contractAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2476:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":241,"indexExpression":{"id":240,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2492:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2476:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":243,"indexExpression":{"id":242,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2504:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2476:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":238,"id":244,"nodeType":"Return","src":"2469:40:0"}]},"functionSelector":"d17fb93e","id":246,"implemented":true,"kind":"function","modifiers":[],"name":"canAccessContract","nameLocation":"2369:17:0","nodeType":"FunctionDefinition","overrides":{"id":235,"nodeType":"OverrideSpecifier","overrides":[],"src":"2435:8:0"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"contractId","nameLocation":"2395:10:0","nodeType":"VariableDeclaration","scope":246,"src":"2387:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2387:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"user","nameLocation":"2415:4:0","nodeType":"VariableDeclaration","scope":246,"src":"2407:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2386:34:0"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"2453:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":236,"name":"bool","nodeType":"ElementaryTypeName","src":"2453:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2452:6:0"},"scope":396,"src":"2360:156:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[579],"body":{"id":277,"nodeType":"Block","src":"2606:176:0","statements":[{"assignments":[255],"declarations":[{"constant":false,"id":255,"mutability":"mutable","name":"len","nameLocation":"2621:3:0","nodeType":"VariableDeclaration","scope":277,"src":"2616:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint","nodeType":"ElementaryTypeName","src":"2616:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":260,"initialValue":{"expression":{"baseExpression":{"id":256,"name":"_contractHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2627:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion storage ref[] storage ref)"}},"id":258,"indexExpression":{"id":257,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2644:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2627:28:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage","typeString":"struct IContractVerifier.ContractVersion storage ref[] storage ref"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2656:6:0","memberName":"length","nodeType":"MemberAccess","src":"2627:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:46:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":262,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2680:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2686:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2680:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20636f6e74726163742075706c6f61646564","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2689:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_058380b6606ca9df8208a6837497e05464dc72a975b31c875309746c56b114c0","typeString":"literal_string \"No contract uploaded\""},"value":"No contract uploaded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_058380b6606ca9df8208a6837497e05464dc72a975b31c875309746c56b114c0","typeString":"literal_string \"No contract uploaded\""}],"id":261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2672:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":267,"nodeType":"ExpressionStatement","src":"2672:40:0"},{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":268,"name":"_contractHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2729:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion storage ref[] storage ref)"}},"id":270,"indexExpression":{"id":269,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2746:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2729:28:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage","typeString":"struct IContractVerifier.ContractVersion storage ref[] storage ref"}},"id":274,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":271,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2758:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2758:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2729:37:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_storage","typeString":"struct IContractVerifier.ContractVersion storage ref"}},"id":275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2767:8:0","memberName":"fileHash","nodeType":"MemberAccess","referencedDeclaration":479,"src":"2729:46:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":253,"id":276,"nodeType":"Return","src":"2722:53:0"}]},"functionSelector":"7c71654a","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestHash","nameLocation":"2531:13:0","nodeType":"FunctionDefinition","overrides":{"id":250,"nodeType":"OverrideSpecifier","overrides":[],"src":"2579:8:0"},"parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"contractId","nameLocation":"2553:10:0","nodeType":"VariableDeclaration","scope":278,"src":"2545:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2544:20:0"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"2597:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2597:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2596:9:0"},"scope":396,"src":"2522:260:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[586],"body":{"id":291,"nodeType":"Block","src":"2874:59:0","statements":[{"expression":{"expression":{"baseExpression":{"id":286,"name":"_contractHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2891:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion storage ref[] storage ref)"}},"id":288,"indexExpression":{"id":287,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2908:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2891:28:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage","typeString":"struct IContractVerifier.ContractVersion storage ref[] storage ref"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2920:6:0","memberName":"length","nodeType":"MemberAccess","src":"2891:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":285,"id":290,"nodeType":"Return","src":"2884:42:0"}]},"functionSelector":"afa8880e","id":292,"implemented":true,"kind":"function","modifiers":[],"name":"getHistoryCount","nameLocation":"2797:15:0","nodeType":"FunctionDefinition","overrides":{"id":282,"nodeType":"OverrideSpecifier","overrides":[],"src":"2847:8:0"},"parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"contractId","nameLocation":"2821:10:0","nodeType":"VariableDeclaration","scope":292,"src":"2813:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:20:0"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"2865:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2865:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2864:9:0"},"scope":396,"src":"2788:145:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[596],"body":{"id":319,"nodeType":"Block","src":"3052:144:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"3070:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":305,"name":"_contractHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"3080:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion storage ref[] storage ref)"}},"id":307,"indexExpression":{"id":306,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3097:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3080:28:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage","typeString":"struct IContractVerifier.ContractVersion storage ref[] storage ref"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3109:6:0","memberName":"length","nodeType":"MemberAccess","src":"3080:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642076657273696f6e","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3117:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cd926449a570322ed72fecad8122a5404b7c3b36f015cf23223a70e0da23e60","typeString":"literal_string \"Invalid version\""},"value":"Invalid version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cd926449a570322ed72fecad8122a5404b7c3b36f015cf23223a70e0da23e60","typeString":"literal_string \"Invalid version\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3062:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"3062:73:0"},{"expression":{"baseExpression":{"baseExpression":{"id":313,"name":"_contractHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"3152:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractVersion storage ref[] storage ref)"}},"id":315,"indexExpression":{"id":314,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3169:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3152:28:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ContractVersion_$486_storage_$dyn_storage","typeString":"struct IContractVerifier.ContractVersion storage ref[] storage ref"}},"id":317,"indexExpression":{"id":316,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"3181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3152:37:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_storage","typeString":"struct IContractVerifier.ContractVersion storage ref"}},"functionReturnParameters":302,"id":318,"nodeType":"Return","src":"3145:44:0"}]},"functionSelector":"6906679b","id":320,"implemented":true,"kind":"function","modifiers":[],"name":"getHistory","nameLocation":"2948:10:0","nodeType":"FunctionDefinition","overrides":{"id":298,"nodeType":"OverrideSpecifier","overrides":[],"src":"3010:8:0"},"parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"contractId","nameLocation":"2967:10:0","nodeType":"VariableDeclaration","scope":320,"src":"2959:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2959:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"version","nameLocation":"2987:7:0","nodeType":"VariableDeclaration","scope":320,"src":"2979:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2958:37:0"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":320,"src":"3028:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_memory_ptr","typeString":"struct IContractVerifier.ContractVersion"},"typeName":{"id":300,"nodeType":"UserDefinedTypeName","pathNode":{"id":299,"name":"ContractVersion","nameLocations":["3028:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"3028:15:0"},"referencedDeclaration":486,"src":"3028:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_storage_ptr","typeString":"struct IContractVerifier.ContractVersion"}},"visibility":"internal"}],"src":"3027:24:0"},"scope":396,"src":"2939:257:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[604],"body":{"id":333,"nodeType":"Block","src":"3300:50:0","statements":[{"expression":{"baseExpression":{"id":329,"name":"_contractMetas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"3317:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContractMeta_$492_storage_$","typeString":"mapping(uint256 => struct IContractVerifier.ContractMeta storage ref)"}},"id":331,"indexExpression":{"id":330,"name":"contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3332:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_storage","typeString":"struct IContractVerifier.ContractMeta storage ref"}},"functionReturnParameters":328,"id":332,"nodeType":"Return","src":"3310:33:0"}]},"functionSelector":"4f8ff2ba","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"getContractMeta","nameLocation":"3211:15:0","nodeType":"FunctionDefinition","overrides":{"id":324,"nodeType":"OverrideSpecifier","overrides":[],"src":"3261:8:0"},"parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"contractId","nameLocation":"3235:10:0","nodeType":"VariableDeclaration","scope":334,"src":"3227:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3227:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3226:20:0"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3279:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_memory_ptr","typeString":"struct IContractVerifier.ContractMeta"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"ContractMeta","nameLocations":["3279:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":492,"src":"3279:12:0"},"referencedDeclaration":492,"src":"3279:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_storage_ptr","typeString":"struct IContractVerifier.ContractMeta"}},"visibility":"internal"}],"src":"3278:21:0"},"scope":396,"src":"3202:148:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[611],"body":{"id":346,"nodeType":"Block","src":"3434:45:0","statements":[{"expression":{"baseExpression":{"id":342,"name":"_hashExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3451:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":344,"indexExpression":{"id":343,"name":"fileHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3463:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3451:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":341,"id":345,"nodeType":"Return","src":"3444:28:0"}]},"functionSelector":"3bd4c457","id":347,"implemented":true,"kind":"function","modifiers":[],"name":"isHashExists","nameLocation":"3365:12:0","nodeType":"FunctionDefinition","overrides":{"id":338,"nodeType":"OverrideSpecifier","overrides":[],"src":"3410:8:0"},"parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"fileHash","nameLocation":"3386:8:0","nodeType":"VariableDeclaration","scope":347,"src":"3378:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:18:0"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":347,"src":"3428:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":339,"name":"bool","nodeType":"ElementaryTypeName","src":"3428:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3427:6:0"},"scope":396,"src":"3356:123:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[619],"body":{"id":360,"nodeType":"Block","src":"3581:54:0","statements":[{"expression":{"baseExpression":{"id":356,"name":"_uploaderToContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"3598:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":358,"indexExpression":{"id":357,"name":"uploader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"3619:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3598:30:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":355,"id":359,"nodeType":"Return","src":"3591:37:0"}]},"functionSelector":"4a971cf7","id":361,"implemented":true,"kind":"function","modifiers":[],"name":"getUploaderHistory","nameLocation":"3494:18:0","nodeType":"FunctionDefinition","overrides":{"id":351,"nodeType":"OverrideSpecifier","overrides":[],"src":"3545:8:0"},"parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"uploader","nameLocation":"3521:8:0","nodeType":"VariableDeclaration","scope":361,"src":"3513:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"3513:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3512:18:0"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"3563:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":353,"nodeType":"ArrayTypeName","src":"3563:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3562:18:0"},"scope":396,"src":"3485:150:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":372,"nodeType":"Block","src":"3662:69:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":364,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3680:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3684:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3680:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":366,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3694:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3680:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3701:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""},"value":"Not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""}],"id":363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3672:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"3672:41:0"},{"id":371,"nodeType":"PlaceholderStatement","src":"3723:1:0"}]},"id":373,"name":"onlyOwner","nameLocation":"3650:9:0","nodeType":"ModifierDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"3659:2:0"},"src":"3641:90:0","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"3761:123:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":379,"name":"_userInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3795:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$497_storage_$","typeString":"mapping(address => struct IContractVerifier.UserInfo storage ref)"}},"id":382,"indexExpression":{"expression":{"id":380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3806:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3810:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3806:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3795:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_storage","typeString":"struct IContractVerifier.UserInfo storage ref"}},"id":383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3818:4:0","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":494,"src":"3795:27:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3789:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":377,"name":"bytes","nodeType":"ElementaryTypeName","src":"3789:5:0","typeDescriptions":{}}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3789:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":376,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3779:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3779:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"55706c6f61646572","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_35381eefa9dbd87bb7976eea5b33f7df38a53bffa748fffdf317fc5a4b1b1dbf","typeString":"literal_string \"Uploader\""},"value":"Uploader"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_35381eefa9dbd87bb7976eea5b33f7df38a53bffa748fffdf317fc5a4b1b1dbf","typeString":"literal_string \"Uploader\""}],"id":386,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3828:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3828:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3779:70:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742075706c6f61646572","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3851:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_37c9912523e886e7cb7a7ac25135b58fc0f9ba32d0107363c27b783fa001bac4","typeString":"literal_string \"Not uploader\""},"value":"Not uploader"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37c9912523e886e7cb7a7ac25135b58fc0f9ba32d0107363c27b783fa001bac4","typeString":"literal_string \"Not uploader\""}],"id":375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3771:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:95:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"ExpressionStatement","src":"3771:95:0"},{"id":393,"nodeType":"PlaceholderStatement","src":"3876:1:0"}]},"id":395,"name":"onlyUploader","nameLocation":"3746:12:0","nodeType":"ModifierDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"3758:2:0"},"src":"3737:147:0","virtual":false,"visibility":"internal"}],"scope":397,"src":"169:3717:0","usedErrors":[],"usedEvents":[505,511,517,525]}],"src":"32:3855:0"}},"contracts/Lock.sol":{"id":1,"ast":{"absolutePath":"contracts/Lock.sol","exportedSymbols":{"Lock":[475]},"id":476,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":398,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"39:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"Lock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":475,"linearizedBaseContracts":[475],"name":"Lock","nameLocation":"150:4:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"251c1aa3","id":400,"mutability":"mutable","name":"unlockTime","nameLocation":"173:10:1","nodeType":"VariableDeclaration","scope":475,"src":"161:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint","nodeType":"ElementaryTypeName","src":"161:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":402,"mutability":"mutable","name":"owner","nameLocation":"212:5:1","nodeType":"VariableDeclaration","scope":475,"src":"189:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"189:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93","id":408,"name":"Withdrawal","nameLocation":"230:10:1","nodeType":"EventDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"246:6:1","nodeType":"VariableDeclaration","scope":408,"src":"241:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint","nodeType":"ElementaryTypeName","src":"241:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":406,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"259:4:1","nodeType":"VariableDeclaration","scope":408,"src":"254:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint","nodeType":"ElementaryTypeName","src":"254:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:24:1"},"src":"224:41:1"},{"body":{"id":433,"nodeType":"Block","src":"309:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":414,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"340:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"346:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"340:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":416,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"358:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"340:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574757265","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""},"value":"Unlock time should be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""}],"id":413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"319:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"319:111:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"319:111:1"},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":421,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"441:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"454:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"441:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":424,"nodeType":"ExpressionStatement","src":"441:24:1"},{"expression":{"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":425,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"475:5:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"491:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"495:6:1","memberName":"sender","nodeType":"MemberAccess","src":"491:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"483:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"483:8:1","stateMutability":"payable","typeDescriptions":{}}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"483:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"475:27:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":432,"nodeType":"ExpressionStatement","src":"475:27:1"}]},"id":434,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"_unlockTime","nameLocation":"288:11:1","nodeType":"VariableDeclaration","scope":434,"src":"283:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint","nodeType":"ElementaryTypeName","src":"283:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"282:18:1"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"309:0:1"},"scope":475,"src":"271:238:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":473,"nodeType":"Block","src":"542:463:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":438,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"766:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"772:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"766:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":440,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"785:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"766:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e277420776974686472617720796574","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"797:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""},"value":"You can't withdraw yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""}],"id":437,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"758:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"758:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"758:64:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":446,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"840:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"844:6:1","memberName":"sender","nodeType":"MemberAccess","src":"840:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":448,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"854:5:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"840:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206172656e277420746865206f776e6572","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"861:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""},"value":"You aren't the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""}],"id":445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"832:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"832:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":452,"nodeType":"ExpressionStatement","src":"832:52:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":456,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"919:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$475","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$475","typeString":"contract Lock"}],"id":455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"911:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:1","typeDescriptions":{}}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"911:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:7:1","memberName":"balance","nodeType":"MemberAccess","src":"911:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"934:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"934:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":453,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"900:10:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"EmitStatement","src":"895:55:1"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":468,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"984:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$475","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$475","typeString":"contract Lock"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"976:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:1","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"990:7:1","memberName":"balance","nodeType":"MemberAccess","src":"976:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"961:5:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"967:8:1","memberName":"transfer","nodeType":"MemberAccess","src":"961:14:1","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"961:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"961:37:1"}]},"functionSelector":"3ccfd60b","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"524:8:1","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"532:2:1"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"542:0:1"},"scope":475,"src":"515:490:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":476,"src":"141:866:1","usedErrors":[],"usedEvents":[408]}],"src":"39:969:1"}},"contracts/interfaces/IContractVerifier.sol":{"id":2,"ast":{"absolutePath":"contracts/interfaces/IContractVerifier.sol","exportedSymbols":{"IContractVerifier":[620]},"id":621,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":477,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IContractVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":620,"linearizedBaseContracts":[620],"name":"IContractVerifier","nameLocation":"68:17:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IContractVerifier.ContractVersion","id":486,"members":[{"constant":false,"id":479,"mutability":"mutable","name":"fileHash","nameLocation":"132:8:2","nodeType":"VariableDeclaration","scope":486,"src":"124:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"124:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"uploader","nameLocation":"158:8:2","nodeType":"VariableDeclaration","scope":486,"src":"150:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"150:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"timestamp","nameLocation":"184:9:2","nodeType":"VariableDeclaration","scope":486,"src":"176:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"176:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"remark","nameLocation":"210:6:2","nodeType":"VariableDeclaration","scope":486,"src":"203:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":484,"name":"string","nodeType":"ElementaryTypeName","src":"203:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ContractVersion","nameLocation":"98:15:2","nodeType":"StructDefinition","scope":620,"src":"91:132:2","visibility":"public"},{"canonicalName":"IContractVerifier.ContractMeta","id":492,"members":[{"constant":false,"id":488,"mutability":"mutable","name":"contractType","nameLocation":"266:12:2","nodeType":"VariableDeclaration","scope":492,"src":"259:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":487,"name":"string","nodeType":"ElementaryTypeName","src":"259:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"allowedViewers","nameLocation":"341:14:2","nodeType":"VariableDeclaration","scope":492,"src":"331:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":490,"nodeType":"ArrayTypeName","src":"331:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"ContractMeta","nameLocation":"236:12:2","nodeType":"StructDefinition","scope":620,"src":"229:173:2","visibility":"public"},{"canonicalName":"IContractVerifier.UserInfo","id":497,"members":[{"constant":false,"id":494,"mutability":"mutable","name":"role","nameLocation":"441:4:2","nodeType":"VariableDeclaration","scope":497,"src":"434:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":493,"name":"string","nodeType":"ElementaryTypeName","src":"434:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"departmentId","nameLocation":"503:12:2","nodeType":"VariableDeclaration","scope":497,"src":"496:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":495,"name":"string","nodeType":"ElementaryTypeName","src":"496:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"UserInfo","nameLocation":"415:8:2","nodeType":"StructDefinition","scope":620,"src":"408:114:2","visibility":"public"},{"anonymous":false,"eventSelector":"cae274b5fbde0daad458f7946840bb0bbf5c01191f2b6d4902d5c6bfe08cf40c","id":505,"name":"ContractUploaded","nameLocation":"556:16:2","nodeType":"EventDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"indexed":true,"mutability":"mutable","name":"contractId","nameLocation":"589:10:2","nodeType":"VariableDeclaration","scope":505,"src":"573:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"indexed":false,"mutability":"mutable","name":"fileHash","nameLocation":"609:8:2","nodeType":"VariableDeclaration","scope":505,"src":"601:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"601:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":503,"indexed":true,"mutability":"mutable","name":"uploader","nameLocation":"635:8:2","nodeType":"VariableDeclaration","scope":505,"src":"619:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"572:72:2"},"src":"550:95:2"},{"anonymous":false,"eventSelector":"e61b482a5b201b9edee07cc4b5fa3824816a942e7ecb77196725025efdc13f26","id":511,"name":"ContractAccessGranted","nameLocation":"656:21:2","nodeType":"EventDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"indexed":true,"mutability":"mutable","name":"contractId","nameLocation":"694:10:2","nodeType":"VariableDeclaration","scope":511,"src":"678:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":509,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"722:4:2","nodeType":"VariableDeclaration","scope":511,"src":"706:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"677:50:2"},"src":"650:78:2"},{"anonymous":false,"eventSelector":"c1722b50995799c719fc885220eac644f626487f653cb8ddc1c63fcf6468dc33","id":517,"name":"ContractAccessRevoked","nameLocation":"739:21:2","nodeType":"EventDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"indexed":true,"mutability":"mutable","name":"contractId","nameLocation":"777:10:2","nodeType":"VariableDeclaration","scope":517,"src":"761:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"805:4:2","nodeType":"VariableDeclaration","scope":517,"src":"789:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"760:50:2"},"src":"733:78:2"},{"anonymous":false,"eventSelector":"7d315bd33deef052e737fec65730430bf652bae987f78489e48dccc4275db4eb","id":525,"name":"RoleAssigned","nameLocation":"822:12:2","nodeType":"EventDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"851:4:2","nodeType":"VariableDeclaration","scope":525,"src":"835:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"835:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"864:4:2","nodeType":"VariableDeclaration","scope":525,"src":"857:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":520,"name":"string","nodeType":"ElementaryTypeName","src":"857:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":523,"indexed":false,"mutability":"mutable","name":"departmentId","nameLocation":"877:12:2","nodeType":"VariableDeclaration","scope":525,"src":"870:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":522,"name":"string","nodeType":"ElementaryTypeName","src":"870:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"834:56:2"},"src":"816:75:2"},{"functionSelector":"859c62bd","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"assignUserRole","nameLocation":"934:14:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"user","nameLocation":"957:4:2","nodeType":"VariableDeclaration","scope":530,"src":"949:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"948:14:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"971:0:2"},"scope":620,"src":"925:47:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6386c1c7","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"getUserInfo","nameLocation":"986:11:2","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"user","nameLocation":"1006:4:2","nodeType":"VariableDeclaration","scope":538,"src":"998:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"997:14:2"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":538,"src":"1035:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_memory_ptr","typeString":"struct IContractVerifier.UserInfo"},"typeName":{"id":535,"nodeType":"UserDefinedTypeName","pathNode":{"id":534,"name":"UserInfo","nameLocations":["1035:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":497,"src":"1035:8:2"},"referencedDeclaration":497,"src":"1035:8:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$497_storage_ptr","typeString":"struct IContractVerifier.UserInfo"}},"visibility":"internal"}],"src":"1034:17:2"},"scope":620,"src":"977:75:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"010f4549","id":549,"implemented":false,"kind":"function","modifiers":[],"name":"uploadContract","nameLocation":"1110:14:2","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"contractId","nameLocation":"1142:10:2","nodeType":"VariableDeclaration","scope":549,"src":"1134:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"fileHash","nameLocation":"1170:8:2","nodeType":"VariableDeclaration","scope":549,"src":"1162:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1162:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"remark","nameLocation":"1204:6:2","nodeType":"VariableDeclaration","scope":549,"src":"1188:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":543,"name":"string","nodeType":"ElementaryTypeName","src":"1188:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"contractType","nameLocation":"1236:12:2","nodeType":"VariableDeclaration","scope":549,"src":"1220:28:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":545,"name":"string","nodeType":"ElementaryTypeName","src":"1220:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1124:130:2"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"1263:0:2"},"scope":620,"src":"1101:163:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cc826a1d","id":556,"implemented":false,"kind":"function","modifiers":[],"name":"grantAccessToContract","nameLocation":"1279:21:2","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"contractId","nameLocation":"1309:10:2","nodeType":"VariableDeclaration","scope":556,"src":"1301:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"user","nameLocation":"1329:4:2","nodeType":"VariableDeclaration","scope":556,"src":"1321:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1300:34:2"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"1343:0:2"},"scope":620,"src":"1270:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a125d423","id":563,"implemented":false,"kind":"function","modifiers":[],"name":"revokeAccessFromContract","nameLocation":"1358:24:2","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"contractId","nameLocation":"1391:10:2","nodeType":"VariableDeclaration","scope":563,"src":"1383:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"user","nameLocation":"1411:4:2","nodeType":"VariableDeclaration","scope":563,"src":"1403:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1382:34:2"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"1425:0:2"},"scope":620,"src":"1349:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d17fb93e","id":572,"implemented":false,"kind":"function","modifiers":[],"name":"canAccessContract","nameLocation":"1440:17:2","nodeType":"FunctionDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"contractId","nameLocation":"1466:10:2","nodeType":"VariableDeclaration","scope":572,"src":"1458:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"user","nameLocation":"1486:4:2","nodeType":"VariableDeclaration","scope":572,"src":"1478:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1457:34:2"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"1515:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":569,"name":"bool","nodeType":"ElementaryTypeName","src":"1515:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1514:6:2"},"scope":620,"src":"1431:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7c71654a","id":579,"implemented":false,"kind":"function","modifiers":[],"name":"getLatestHash","nameLocation":"1564:13:2","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"contractId","nameLocation":"1586:10:2","nodeType":"VariableDeclaration","scope":579,"src":"1578:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1578:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1577:20:2"},"returnParameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":620,"src":"1555:75:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"afa8880e","id":586,"implemented":false,"kind":"function","modifiers":[],"name":"getHistoryCount","nameLocation":"1644:15:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"contractId","nameLocation":"1668:10:2","nodeType":"VariableDeclaration","scope":586,"src":"1660:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1659:20:2"},"returnParameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"1703:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1702:9:2"},"scope":620,"src":"1635:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6906679b","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"getHistory","nameLocation":"1726:10:2","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"contractId","nameLocation":"1745:10:2","nodeType":"VariableDeclaration","scope":596,"src":"1737:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":590,"mutability":"mutable","name":"version","nameLocation":"1765:7:2","nodeType":"VariableDeclaration","scope":596,"src":"1757:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1736:37:2"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":596,"src":"1797:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_memory_ptr","typeString":"struct IContractVerifier.ContractVersion"},"typeName":{"id":593,"nodeType":"UserDefinedTypeName","pathNode":{"id":592,"name":"ContractVersion","nameLocations":["1797:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"1797:15:2"},"referencedDeclaration":486,"src":"1797:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_ContractVersion_$486_storage_ptr","typeString":"struct IContractVerifier.ContractVersion"}},"visibility":"internal"}],"src":"1796:24:2"},"scope":620,"src":"1717:104:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f8ff2ba","id":604,"implemented":false,"kind":"function","modifiers":[],"name":"getContractMeta","nameLocation":"1835:15:2","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"contractId","nameLocation":"1859:10:2","nodeType":"VariableDeclaration","scope":604,"src":"1851:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1850:20:2"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":604,"src":"1894:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_memory_ptr","typeString":"struct IContractVerifier.ContractMeta"},"typeName":{"id":601,"nodeType":"UserDefinedTypeName","pathNode":{"id":600,"name":"ContractMeta","nameLocations":["1894:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":492,"src":"1894:12:2"},"referencedDeclaration":492,"src":"1894:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ContractMeta_$492_storage_ptr","typeString":"struct IContractVerifier.ContractMeta"}},"visibility":"internal"}],"src":"1893:21:2"},"scope":620,"src":"1826:89:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3bd4c457","id":611,"implemented":false,"kind":"function","modifiers":[],"name":"isHashExists","nameLocation":"1929:12:2","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"fileHash","nameLocation":"1950:8:2","nodeType":"VariableDeclaration","scope":611,"src":"1942:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1941:18:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"1983:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":608,"name":"bool","nodeType":"ElementaryTypeName","src":"1983:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1982:6:2"},"scope":620,"src":"1920:69:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4a971cf7","id":619,"implemented":false,"kind":"function","modifiers":[],"name":"getUploaderHistory","nameLocation":"2032:18:2","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"uploader","nameLocation":"2059:8:2","nodeType":"VariableDeclaration","scope":619,"src":"2051:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"2051:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2050:18:2"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"contractIds","nameLocation":"2109:11:2","nodeType":"VariableDeclaration","scope":619,"src":"2092:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":616,"nodeType":"ArrayTypeName","src":"2092:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2091:30:2"},"scope":620,"src":"2023:99:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":621,"src":"58:2066:2","usedErrors":[],"usedEvents":[505,511,517,525]}],"src":"32:2093:2"}}},"contracts":{"contracts/ContractVerifier.sol":{"ContractVerifier":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contractId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ContractAccessGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contractId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ContractAccessRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contractId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"uploader","type":"address"}],"name":"ContractUploaded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"role","type":"string"},{"indexed":false,"internalType":"string","name":"departmentId","type":"string"}],"name":"RoleAssigned","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"assignUserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"canAccessContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"getContractMeta","outputs":[{"components":[{"internalType":"string","name":"contractType","type":"string"},{"internalType":"address[]","name":"allowedViewers","type":"address[]"}],"internalType":"struct IContractVerifier.ContractMeta","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"uint256","name":"version","type":"uint256"}],"name":"getHistory","outputs":[{"components":[{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"remark","type":"string"}],"internalType":"struct IContractVerifier.ContractVersion","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"getHistoryCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"getLatestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"uploader","type":"address"}],"name":"getUploaderHistory","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserInfo","outputs":[{"components":[{"internalType":"string","name":"role","type":"string"},{"internalType":"string","name":"departmentId","type":"string"}],"internalType":"struct IContractVerifier.UserInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"grantAccessToContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"fileHash","type":"bytes32"}],"name":"isHashExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"revokeAccessFromContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"string","name":"remark","type":"string"},{"internalType":"string","name":"contractType","type":"string"}],"name":"uploadContract","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.13+commit.ad33153.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractAccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractAccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"}],\"name\":\"ContractUploaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"departmentId\",\"type\":\"string\"}],\"name\":\"RoleAssigned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"assignUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canAccessContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"getContractMeta\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"allowedViewers\",\"type\":\"address[]\"}],\"internalType\":\"struct IContractVerifier.ContractMeta\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"}],\"internalType\":\"struct IContractVerifier.ContractVersion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"getHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"getLatestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"}],\"name\":\"getUploaderHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"departmentId\",\"type\":\"string\"}],\"internalType\":\"struct IContractVerifier.UserInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"grantAccessToContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"isHashExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"revokeAccessFromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"}],\"name\":\"uploadContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContractVerifier.sol\":\"ContractVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ContractVerifier.sol\":{\"keccak256\":\"0xaec336fe8b747e908da48b9186e6b337845652e4259bdaed9403785c065acfe9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63ccb3693413a2d421ec8af089596864f09b8faa943f6444f4bd669c2a32b5a6\",\"dweb:/ipfs/Qmd1Pk2j6LfaNi79DkskWiaEPW8yip1rfHTCMkRcQT9gpp\"]},\"contracts/interfaces/IContractVerifier.sol\":{\"keccak256\":\"0x5f6a2ecfb8159b0df8466e82cb13ae049cf395afd65bb6ef61b58cfb3fb1d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff052c1217a35c74e53a0e3a9832e489d962b085378625fc49c070fe17061c4f\",\"dweb:/ipfs/QmZNYwu8F8d3B2btkM9kHrBYdYpzWn1dx9dvA5bbcSbGDK\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Darwin.appleclang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 240/65792 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 11228\n// Code size = 39836 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x200f0]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x200f0] = a1\n    42: a1 = 0x20100\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20100\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 2)\n    64: a1 = i32 [0x200f8]\n    69: jump @35 if a1 == 0\n      : @9 (gas: 4)\n    73: a0 = 0x30100\n    78: i32 a0 = a0 + 0\n    80: ecalli 9 // 'set_immutable_data'\n    82: jump @35\n      : @10 (gas: 7)\n    85: sp = sp + 0xfffffffffffffff0\n    88: u64 [sp + 0x8] = ra\n    91: u64 [sp] = s0\n    93: s0 = a0\n    95: i32 a0 = a1 + 0\n    97: a1 = 0x20\n   100: ra = 2, jump @0\n      : @11 [@dyn 1] (gas: 100)\n   104: a1 = u8 [a0 + 0x1]\n   107: a2 = u8 [a0]\n   109: a3 = u8 [a0 + 0x2]\n   112: a4 = u8 [a0 + 0x3]\n   115: a1 = a1 << 0x8\n   118: a1 = a1 | a2\n   121: a3 = a3 << 0x10\n   124: a4 = a4 << 0x18\n   127: a3 = a3 | a4\n   130: a1 = a1 | a3\n   133: a2 = u8 [a0 + 0x5]\n   136: a3 = u8 [a0 + 0x4]\n   139: a4 = u8 [a0 + 0x6]\n   142: a5 = u8 [a0 + 0x7]\n   145: a2 = a2 << 0x8\n   148: a2 = a2 | a3\n   151: a4 = a4 << 0x10\n   154: a5 = a5 << 0x18\n   157: a4 = a4 | a5\n   160: a2 = a2 | a4\n   163: a2 = a2 << 0x20\n   166: t0 = a2 | a1\n   169: a2 = u8 [a0 + 0x9]\n   172: a3 = u8 [a0 + 0x8]\n   175: a4 = u8 [a0 + 0xa]\n   178: a5 = u8 [a0 + 0xb]\n   181: a2 = a2 << 0x8\n   184: a2 = a2 | a3\n   187: a4 = a4 << 0x10\n   190: a5 = a5 << 0x18\n   193: a4 = a4 | a5\n   196: a2 = a2 | a4\n   199: a3 = u8 [a0 + 0xd]\n   202: a4 = u8 [a0 + 0xc]\n   205: a5 = u8 [a0 + 0xe]\n   208: a1 = u8 [a0 + 0xf]\n   211: a3 = a3 << 0x8\n   214: a3 = a3 | a4\n   217: a5 = a5 << 0x10\n   220: a1 = a1 << 0x18\n   223: a1 = a1 | a5\n   226: a1 = a1 | a3\n   229: a1 = a1 << 0x20\n   232: t1 = a1 | a2\n   235: a1 = u8 [a0 + 0x11]\n   238: a3 = u8 [a0 + 0x10]\n   241: a4 = u8 [a0 + 0x12]\n   244: a5 = u8 [a0 + 0x13]\n   247: a1 = a1 << 0x8\n   250: a1 = a1 | a3\n   253: a4 = a4 << 0x10\n   256: a5 = a5 << 0x18\n   259: a4 = a4 | a5\n   262: a1 = a1 | a4\n   265: a3 = u8 [a0 + 0x15]\n   268: a4 = u8 [a0 + 0x14]\n   271: a5 = u8 [a0 + 0x16]\n   274: a2 = u8 [a0 + 0x17]\n   277: a3 = a3 << 0x8\n   280: a3 = a3 | a4\n   283: a5 = a5 << 0x10\n   286: a2 = a2 << 0x18\n   289: a2 = a2 | a5\n   292: a2 = a2 | a3\n   295: a2 = a2 << 0x20\n   298: a3 = a2 | a1\n   301: a1 = u8 [a0 + 0x19]\n   304: a2 = u8 [a0 + 0x18]\n   307: a4 = u8 [a0 + 0x1a]\n   310: a5 = u8 [a0 + 0x1b]\n   313: a1 = a1 << 0x8\n   316: a1 = a1 | a2\n   319: a4 = a4 << 0x10\n   322: a5 = a5 << 0x18\n   325: a4 = a4 | a5\n   328: a1 = a1 | a4\n   331: a2 = u8 [a0 + 0x1d]\n   334: a4 = u8 [a0 + 0x1c]\n   337: a5 = u8 [a0 + 0x1e]\n   340: a0 = u8 [a0 + 0x1f]\n   343: a2 = a2 << 0x8\n   346: a2 = a2 | a4\n   349: a5 = a5 << 0x10\n   352: a0 = a0 << 0x18\n   355: a0 = a0 | a5\n   358: a0 = a0 | a2\n   361: a0 = a0 << 0x20\n   364: a0 = a0 | a1\n   367: a0 = reverse a0\n   369: a1 = reverse a3\n   371: a2 = reverse t1\n   373: a3 = reverse t0\n   375: u64 [s0 + 0x18] = a3\n   378: u64 [s0 + 0x10] = a2\n   381: u64 [s0 + 0x8] = a1\n   384: u64 [s0] = a0\n   386: ra = u64 [sp + 0x8]\n   389: s0 = u64 [sp]\n   391: sp = sp + 0x10\n   394: ret\n      : @12 (gas: 13)\n   396: sp = sp + 0xffffffffffffffd8\n   399: u64 [sp + 0x20] = ra\n   402: u64 [sp + 0x18] = s0\n   405: u64 [sp + 0x10] = s1\n   408: a2 = u64 [a1]\n   410: u64 [sp + 0x8] = a2\n   413: a2 = u64 [a1 + 0x8]\n   416: u64 [sp] = a2\n   418: s0 = u64 [a1 + 0x10]\n   421: s1 = u64 [a1 + 0x18]\n   424: i32 a0 = a0 + 0\n   426: a1 = 0x20\n   429: ra = 4, jump @0\n      : @13 [@dyn 2] (gas: 71)\n   434: a1 = reverse s1\n   436: a2 = reverse s0\n   438: a3 = u64 [sp]\n   440: a3 = reverse a3\n   442: a4 = u64 [sp + 0x8]\n   445: a4 = reverse a4\n   447: u8 [a0 + 0x18] = a4\n   450: u8 [a0 + 0x10] = a3\n   453: u8 [a0 + 0x8] = a2\n   456: u8 [a0] = a1\n   458: a5 = a4 >> 0x38\n   461: u8 [a0 + 0x1f] = a5\n   464: a5 = a4 >> 0x30\n   467: u8 [a0 + 0x1e] = a5\n   470: a5 = a4 >> 0x28\n   473: u8 [a0 + 0x1d] = a5\n   476: a5 = a4 >> 0x20\n   479: u8 [a0 + 0x1c] = a5\n   482: a5 = a4 >> 0x18\n   485: u8 [a0 + 0x1b] = a5\n   488: a5 = a4 >> 0x10\n   491: u8 [a0 + 0x1a] = a5\n   494: a4 = a4 >> 0x8\n   497: u8 [a0 + 0x19] = a4\n   500: a4 = a3 >> 0x38\n   503: u8 [a0 + 0x17] = a4\n   506: a4 = a3 >> 0x30\n   509: u8 [a0 + 0x16] = a4\n   512: a4 = a3 >> 0x28\n   515: u8 [a0 + 0x15] = a4\n   518: a4 = a3 >> 0x20\n   521: u8 [a0 + 0x14] = a4\n   524: a4 = a3 >> 0x18\n   527: u8 [a0 + 0x13] = a4\n   530: a4 = a3 >> 0x10\n   533: u8 [a0 + 0x12] = a4\n   536: a3 = a3 >> 0x8\n   539: u8 [a0 + 0x11] = a3\n   542: a3 = a2 >> 0x38\n   545: u8 [a0 + 0xf] = a3\n   548: a3 = a2 >> 0x30\n   551: u8 [a0 + 0xe] = a3\n   554: a3 = a2 >> 0x28\n   557: u8 [a0 + 0xd] = a3\n   560: a3 = a2 >> 0x20\n   563: u8 [a0 + 0xc] = a3\n   566: a3 = a2 >> 0x18\n   569: u8 [a0 + 0xb] = a3\n   572: a3 = a2 >> 0x10\n   575: u8 [a0 + 0xa] = a3\n   578: a2 = a2 >> 0x8\n   581: u8 [a0 + 0x9] = a2\n   584: a2 = a1 >> 0x38\n   587: u8 [a0 + 0x7] = a2\n   590: a2 = a1 >> 0x30\n   593: u8 [a0 + 0x6] = a2\n   596: a2 = a1 >> 0x28\n   599: u8 [a0 + 0x5] = a2\n   602: a2 = a1 >> 0x20\n   605: u8 [a0 + 0x4] = a2\n   608: a2 = a1 >> 0x18\n   611: u8 [a0 + 0x3] = a2\n   614: a2 = a1 >> 0x10\n   617: u8 [a0 + 0x2] = a2\n   620: a1 = a1 >> 0x8\n   623: u8 [a0 + 0x1] = a1\n   626: ra = u64 [sp + 0x20]\n   629: s0 = u64 [sp + 0x18]\n   632: s1 = u64 [sp + 0x10]\n   635: sp = sp + 0x28\n   638: ret\n      : @14 (gas: 43)\n   640: sp = sp + 0xffffffffffffffa0\n   643: u64 [sp + 0x58] = ra\n   646: u64 [sp + 0x50] = s0\n   649: u64 [sp + 0x48] = s1\n   652: s0 = sp + 0x60\n   655: sp = sp & 0xffffffffffffffe0\n   658: s1 = a0\n   660: a0 = u64 [a1 + 0x18]\n   663: a2 = u64 [a1 + 0x10]\n   666: a3 = u64 [a1 + 0x8]\n   669: a1 = u64 [a1]\n   671: a0 = reverse a0\n   673: a2 = reverse a2\n   675: a3 = reverse a3\n   677: a1 = reverse a1\n   679: u64 [sp + 0x18] = a1\n   682: u64 [sp + 0x10] = a3\n   685: u64 [sp + 0x8] = a2\n   688: u64 [sp] = a0\n   690: u64 [sp + 56] = 0\n   693: u64 [sp + 48] = 0\n   696: u64 [sp + 40] = 0\n   699: u64 [sp + 32] = 0\n   702: u32 [sp + 64] = 0x20\n   706: i32 a1 = sp + 0\n   708: i32 a3 = sp + 0x20\n   711: i32 a4 = sp + 0x40\n   714: a2 = 0xffffffffffffffff\n   717: a0 = 0\n   719: ecalli 5 // 'get_storage'\n   721: a0 = u64 [sp + 0x38]\n   724: a1 = u64 [sp + 0x30]\n   727: a2 = u64 [sp + 0x28]\n   730: a3 = u64 [sp + 0x20]\n   733: a0 = reverse a0\n   735: a1 = reverse a1\n   737: a2 = reverse a2\n   739: a3 = reverse a3\n   741: u64 [s1 + 0x18] = a3\n   744: u64 [s1 + 0x10] = a2\n   747: u64 [s1 + 0x8] = a1\n   750: u64 [s1] = a0\n   752: t0 = 6, jump @1236\n      : @15 [@dyn 3] (gas: 1)\n   758: ret\n      : @16 (gas: 37)\n   760: sp = sp + 0xffffffffffffffa0\n   763: u64 [sp + 0x58] = ra\n   766: u64 [sp + 0x50] = s0\n   769: u64 [sp + 0x48] = s1\n   772: s0 = sp + 0x60\n   775: sp = sp & 0xffffffffffffffe0\n   778: t0 = u64 [a1]\n   780: t1 = u64 [a1 + 0x8]\n   783: a4 = u64 [a1 + 0x10]\n   786: a1 = u64 [a1 + 0x18]\n   789: a5 = u64 [a0 + 0x18]\n   792: a2 = u64 [a0 + 0x10]\n   795: a3 = u64 [a0 + 0x8]\n   798: a0 = u64 [a0]\n   800: s1 = reverse a5\n   802: a2 = reverse a2\n   804: a3 = reverse a3\n   806: a0 = reverse a0\n   808: t2 = reverse a1\n   810: a4 = reverse a4\n   812: a1 = reverse t1\n   814: a5 = reverse t0\n   816: u64 [sp + 0x18] = a0\n   819: u64 [sp + 0x10] = a3\n   822: u64 [sp + 0x8] = a2\n   825: u64 [sp] = s1\n   827: u64 [sp + 0x38] = a5\n   830: u64 [sp + 0x30] = a1\n   833: u64 [sp + 0x28] = a4\n   836: u64 [sp + 0x20] = t2\n   839: i32 a1 = sp + 0\n   841: i32 a3 = sp + 0x20\n   844: a2 = 0xffffffffffffffff\n   847: a4 = 0x20\n   850: a0 = 0\n   852: ecalli 10 // 'set_storage'\n   854: t0 = 8, jump @1236\n      : @17 [@dyn 4] (gas: 1)\n   860: ret\n      : @18 [@dyn 5] (gas: 34)\n   862: a1 = reverse s1\n   864: a2 = u64 [sp]\n   866: a2 = reverse a2\n   868: a3 = u64 [sp + 0x8]\n   871: a3 = reverse a3\n   873: a4 = u64 [sp + 0x10]\n   876: a4 = reverse a4\n   878: u64 [sp + 0x58] = a4\n   881: u64 [sp + 0x50] = a3\n   884: u64 [sp + 0x48] = a2\n   887: u64 [sp + 0x40] = a1\n   890: a1 = u64 [sp + 0x18]\n   893: a1 = reverse a1\n   895: a2 = u64 [sp + 0x20]\n   898: a2 = reverse a2\n   900: a3 = u64 [sp + 0x28]\n   903: a3 = reverse a3\n   905: a4 = u64 [sp + 0x38]\n   908: a4 = reverse a4\n   910: u64 [sp + 0x78] = a4\n   913: u64 [sp + 0x70] = a3\n   916: u64 [sp + 0x68] = a2\n   919: u64 [sp + 0x60] = a1\n   922: i32 a2 = a0 + 0\n   924: i32 a0 = sp + 0x40\n   927: a1 = 0x2\n   930: a3 = u64 [sp + 0x30]\n   933: ecalli 4 // 'deposit_event'\n   935: sp = s0 + 0xffffffffffffff60\n   939: ra = u64 [sp + 0x98]\n   943: s0 = u64 [sp + 0x90]\n   947: s1 = u64 [sp + 0x88]\n   951: sp = sp + 0xa0\n   955: ret\n      : @19 (gas: 35)\n   957: sp = sp + 0xffffffffffffff20\n   961: u64 [sp + 0xd8] = ra\n   965: u64 [sp + 0xd0] = s0\n   969: u64 [sp + 0xc8] = s1\n   973: s0 = sp + 0xe0\n   977: sp = sp & 0xffffffffffffffe0\n   980: a5 = u64 [a4]\n   982: u64 [sp + 0x40] = a5\n   985: a5 = u64 [a4 + 0x8]\n   988: u64 [sp + 0x48] = a5\n   991: a5 = u64 [a4 + 0x10]\n   994: u64 [sp + 0x50] = a5\n   997: a4 = u64 [a4 + 0x18]\n  1000: u64 [sp + 0x58] = a4\n  1003: t0 = 0xc\n  1006: a4 = u64 [a3]\n  1008: u64 [sp + 0x18] = a4\n  1011: a4 = u64 [a3 + 0x8]\n  1014: u64 [sp + 0x20] = a4\n  1017: a4 = u64 [a3 + 0x10]\n  1020: u64 [sp + 0x28] = a4\n  1023: a3 = u64 [a3 + 0x18]\n  1026: u64 [sp + 0x30] = a3\n  1029: s1 = u64 [a2]\n  1031: a3 = u64 [a2 + 0x8]\n  1034: u64 [sp] = a3\n  1036: a3 = u64 [a2 + 0x10]\n  1039: u64 [sp + 0x8] = a3\n  1042: a2 = u64 [a2 + 0x18]\n  1045: u64 [sp + 0x10] = a2\n  1048: i32 a0 = a0 + 0\n  1050: i32 a1 = a1 + 0\n  1052: u64 [sp + 0x38] = a1\n  1055: ra = 0xe\n  1058: jump @0\n      : @20 [@dyn 6] (gas: 2)\n  1061: u64 [sp + 0x38] = a1\n  1064: ra = 14, jump @0\n      : @21 [@dyn 7] (gas: 46)\n  1069: a1 = reverse s1\n  1071: u64 [sp + 0x78] = a1\n  1074: a1 = u64 [sp]\n  1076: a1 = reverse a1\n  1078: u64 [sp + 0x70] = a1\n  1081: a1 = u64 [sp + 0x8]\n  1084: a1 = reverse a1\n  1086: u64 [sp + 0x68] = a1\n  1089: a1 = u64 [sp + 0x10]\n  1092: a1 = reverse a1\n  1094: u64 [sp + 0x60] = a1\n  1097: a1 = u64 [sp + 0x18]\n  1100: a1 = reverse a1\n  1102: u64 [sp + 0x98] = a1\n  1106: a1 = u64 [sp + 0x20]\n  1109: a1 = reverse a1\n  1111: u64 [sp + 0x90] = a1\n  1115: a1 = u64 [sp + 0x28]\n  1118: a1 = reverse a1\n  1120: u64 [sp + 0x88] = a1\n  1124: a1 = u64 [sp + 0x30]\n  1127: a1 = reverse a1\n  1129: u64 [sp + 0x80] = a1\n  1133: a1 = u64 [sp + 0x40]\n  1136: a1 = reverse a1\n  1138: u64 [sp + 0xb8] = a1\n  1142: a1 = u64 [sp + 0x48]\n  1145: a1 = reverse a1\n  1147: u64 [sp + 0xb0] = a1\n  1151: a1 = u64 [sp + 0x50]\n  1154: a1 = reverse a1\n  1156: u64 [sp + 0xa8] = a1\n  1160: a1 = u64 [sp + 0x58]\n  1163: a1 = reverse a1\n  1165: u64 [sp + 0xa0] = a1\n  1169: i32 a2 = a0 + 0\n  1171: i32 a0 = sp + 0x60\n  1174: a1 = 0x3\n  1177: a3 = u64 [sp + 0x38]\n  1180: ecalli 4 // 'deposit_event'\n  1182: sp = s0 + 0xffffffffffffff20\n  1186: ra = u64 [sp + 0xd8]\n  1190: s0 = u64 [sp + 0xd0]\n  1194: s1 = u64 [sp + 0xc8]\n  1198: sp = sp + 0xe0\n  1202: ret\n      : @22 (gas: 6)\n  1204: sp = sp + 0xfffffffffffffff0\n  1207: u64 [sp + 0x8] = ra\n  1210: u64 [sp] = s0\n  1212: s0 = a0 & 0x1\n  1215: ecalli 2 // 'call_data_size'\n  1217: fallthrough\n      : @23 (gas: 2)\n  1218: u32 [0x200f4] = a0\n  1223: jump @25 if s0 == 0\n      : @24 (gas: 1)\n  1226: ra = 16, jump @26\n      : @25 [@dyn 8] (gas: 1)\n  1230: ra = 18, jump @37\n      : @26 [@dyn 9] (gas: 13)\n  1235: sp = sp + 0xfffffffffffffee0\n  1239: u64 [sp + 0x118] = ra\n  1243: u64 [sp + 0x110] = s0\n  1247: u64 [sp + 0x108] = s1\n  1251: s0 = sp + 0x120\n  1255: sp = sp & 0xffffffffffffffe0\n  1258: u64 [sp + 184] = 0\n  1262: u64 [sp + 176] = 0\n  1266: u64 [sp + 160] = 0x80\n  1272: a0 = 0x40\n  1275: a1 = sp + 0xa0\n  1279: u64 [sp + 168] = 0\n  1283: ra = 20, jump @12\n      : @27 [@dyn 10] (gas: 7)\n  1288: u64 [sp + 216] = 0\n  1292: u64 [sp + 208] = 0\n  1296: u64 [sp + 200] = 0\n  1300: u64 [sp + 192] = 0\n  1304: i32 a0 = sp + 0xc0\n  1308: ecalli 11 // 'value_transferred'\n  1310: fallthrough\n      : @28 (gas: 8)\n  1311: a0 = u64 [sp + 0xd0]\n  1315: a1 = u64 [sp + 0xd8]\n  1319: a2 = u64 [sp + 0xc8]\n  1323: a3 = u64 [sp + 0xc0]\n  1327: a1 = a1 | a2\n  1330: a0 = a0 | a3\n  1333: a0 = a0 | a1\n  1336: jump @31 if a0 == 0\n      : @29 (gas: 3)\n  1339: a0 = 0\n  1341: a1 = 0\n  1343: ra = 22, jump @0\n      : @30 [@dyn 11] (gas: 5)\n  1348: i32 a1 = a0 + 0\n  1350: a0 = 0x1\n  1353: a2 = 0\n  1355: ecalli 8 // 'seal_return'\n  1357: fallthrough\n      : @31 (gas: 24)\n  1358: i32 a0 = sp + 0xe0\n  1362: ecalli 3 // 'caller'\n  1364: a0 = u64 [sp + 0xe8]\n  1368: a1 = i32 [sp + 0xf0]\n  1372: a2 = u64 [sp + 0xe0]\n  1376: a0 = reverse a0\n  1378: a3 = a0 << 0x20\n  1381: a1 = reverse a1\n  1383: a1 = a1 >> 0x20\n  1386: a1 = a1 | a3\n  1389: u64 [sp + 0x18] = a1\n  1392: a0 = a0 >> 0x20\n  1395: a1 = reverse a2\n  1397: a2 = a1 << 0x20\n  1400: a0 = a0 | a2\n  1403: u64 [sp + 0x10] = a0\n  1406: s1 = a1 >> 0x20\n  1409: u64 [sp + 120] = 0\n  1412: u64 [sp + 112] = 0\n  1415: u64 [sp + 104] = 0\n  1418: a0 = sp + 0x80\n  1422: a1 = sp + 0x60\n  1425: u64 [sp + 96] = 0\n  1428: ra = 24, jump @14\n      : @32 [@dyn 12] (gas: 17)\n  1433: a0 = u32 [sp + 0x94]\n  1437: a1 = u64 [sp + 0x98]\n  1441: a0 = a0 << 0x20\n  1444: s1 = s1 | a0\n  1447: u64 [sp + 0x38] = a1\n  1450: a0 = u64 [sp + 0x10]\n  1453: u64 [sp + 0x28] = a0\n  1456: a0 = u64 [sp + 0x18]\n  1459: u64 [sp + 0x20] = a0\n  1462: u64 [sp + 88] = 0\n  1465: u64 [sp + 80] = 0\n  1468: u64 [sp + 72] = 0\n  1471: u64 [sp + 64] = 0\n  1474: a0 = sp + 0x40\n  1477: a1 = sp + 0x20\n  1480: u64 [sp + 0x30] = s1\n  1483: ra = 26, jump @16\n      : @33 [@dyn 13] (gas: 3)\n  1488: a0 = 0x80\n  1492: a1 = 0\n  1494: ra = 28, jump @0\n      : @34 [@dyn 14] (gas: 5)\n  1499: i32 a0 = a0 + 0\n  1501: a1 = 0\n  1503: a2 = 0\n  1505: ecalli 0 // 'call_data_copy'\n  1506: jump @8\n      : @35 (gas: 3)\n  1509: a0 = 0x80\n  1513: a1 = 0\n  1515: ra = 30, jump @0\n      : @36 [@dyn 15] (gas: 6)\n  1520: i32 a1 = a0 + 0\n  1522: a0 = 0\n  1524: a2 = 0\n  1526: ra = 0x20\n  1529: ecalli 8 // 'seal_return'\n  1531: fallthrough\n      : @37 [@dyn 16] (gas: 16)\n  1532: sp = sp + 0xfffffffffffffe10\n  1536: u64 [sp + 0x1e8] = ra\n  1540: u64 [sp + 0x1e0] = s0\n  1544: u64 [sp + 0x1d8] = s1\n  1548: s0 = sp + 0x1f0\n  1552: sp = sp + 0xffffffffffffc4f0\n  1556: sp = sp & 0xffffffffffffffe0\n  1559: s1 = sp\n  1561: a2 = s1 + 0x38d8\n  1565: u64 [a2 + 224] = 0\n  1569: u64 [a2 + 216] = 0\n  1573: u64 [a2 + 200] = 0x80\n  1579: a0 = 0x40\n  1582: a1 = s1 + 0x39a0\n  1586: u64 [a2 + 208] = 0\n  1590: ra = 34, jump @12\n      : @38 [@dyn 17] (gas: 4)\n  1595: a0 = 0x200f4\n  1600: u64 [s1 + 0x158] = a0\n  1604: a0 = i32 [0x200f4]\n  1609: jump @40 if a0 >=u 4\n      : @39 (gas: 1)\n  1613: jump @945\n      : @40 (gas: 6)\n  1616: a0 = s1 + 0x4000\n  1620: i32 a0 = a0 + 0xfffffffffffff9c0\n  1624: a1 = 0\n  1626: ra = 0x24\n  1629: ecalli 1 // 'call_data_load'\n  1631: fallthrough\n      : @41 [@dyn 18] (gas: 3)\n  1632: a0 = s1 + 0x38d8\n  1636: a0 = i32 [a0 + 0x104]\n  1640: jump @43 if a0 != 2241618621\n      : @42 (gas: 1)\n  1647: jump @458\n      : @43 (gas: 1)\n  1650: jump @45 if a0 != 2376452955\n      : @44 (gas: 1)\n  1657: jump @241\n      : @45 (gas: 1)\n  1660: jump @47 if a0 != 2703610915\n      : @46 (gas: 1)\n  1667: jump @589\n      : @47 (gas: 1)\n  1670: jump @49 if a0 != 2947057678\n      : @48 (gas: 1)\n  1677: jump @545\n      : @49 (gas: 1)\n  1680: jump @163 if a0 == 3431098909\n      : @50 (gas: 1)\n  1688: jump @52 if a0 != 3514808638\n      : @51 (gas: 1)\n  1695: jump @566\n      : @52 (gas: 1)\n  1698: jump @54 if a0 != 17777993\n      : @53 (gas: 1)\n  1705: jump @254\n      : @54 (gas: 1)\n  1708: jump @56 if a0 != 1003799639\n      : @55 (gas: 1)\n  1715: jump @522\n      : @56 (gas: 1)\n  1718: jump @58 if a0 != 1251417335\n      : @57 (gas: 1)\n  1725: jump @209\n      : @58 (gas: 1)\n  1728: jump @60 if a0 != 1334833850\n      : @59 (gas: 1)\n  1735: jump @363\n      : @60 (gas: 1)\n  1738: jump @62 if a0 != 1669775815\n      : @61 (gas: 1)\n  1745: jump @405\n      : @62 (gas: 1)\n  1748: jump @64 if a0 == 1762027419\n      : @63 (gas: 1)\n  1755: jump @635\n      : @64 (gas: 1)\n  1758: t0 = 38, jump @1201\n      : @65 [@dyn 19] (gas: 4)\n  1764: ra = 0x28\n  1767: ecalli 11 // 'value_transferred'\n  1769: t0 = 0x2a\n  1772: jump @1204\n      : @66 [@dyn 20] (gas: 1)\n  1776: t0 = 42, jump @1204\n      : @67 [@dyn 21] (gas: 1)\n  1782: jump @69 if a0 == 0\n      : @68 (gas: 1)\n  1785: jump @945\n      : @69 (gas: 3)\n  1788: a0 = u64 [s1 + 0x158]\n  1792: a0 = i32 [a0]\n  1794: jump @71 if a0 >u 67\n      : @70 (gas: 1)\n  1798: jump @945\n      : @71 (gas: 31)\n  1801: a0 = s1 + 0x4000\n  1805: i32 a0 = a0 + 0xfffffffffffffba0\n  1809: a1 = 0x4\n  1812: ecalli 1 // 'call_data_load'\n  1814: a1 = s1 + 0x38d8\n  1818: a2 = a1 + 0x200\n  1822: a0 = u64 [a2 + 0xe0]\n  1826: u64 [s1 + 0x118] = a0\n  1830: a0 = u64 [a2 + 0xd8]\n  1834: u64 [s1 + 0x110] = a0\n  1838: a0 = u64 [a2 + 0xd0]\n  1842: u64 [s1 + 0x108] = a0\n  1846: a0 = u64 [a2 + 0xc8]\n  1850: u64 [s1 + 0x100] = a0\n  1854: a0 = s1 + 0x4000\n  1858: i32 a0 = a0 + 0xfffffffffffffbc0\n  1862: a1 = 0x24\n  1865: ecalli 1 // 'call_data_load'\n  1867: a1 = s1 + 0x38d8\n  1871: a0 = u64 [a1 + 0x300]\n  1875: u64 [s1 + 0x120] = a0\n  1879: a2 = a1 + 0x200\n  1883: a0 = u64 [a2 + 0xf8]\n  1887: u64 [s1 + 0x128] = a0\n  1891: a0 = u64 [a2 + 0xf0]\n  1895: u64 [s1 + 0x130] = a0\n  1899: a0 = u64 [a2 + 0xe8]\n  1903: u64 [s1 + 0x138] = a0\n  1907: a0 = s1 + 0x2360\n  1911: a1 = 0x40\n  1914: ra = 44, jump @10\n      : @72 [@dyn 22] (gas: 3)\n  1919: a1 = s1 + 0x20d8\n  1923: a5 = a1 + 0x200\n  1927: t0 = 46, jump @1223\n      : @73 [@dyn 23] (gas: 6)\n  1933: i32 a0 = a0 + 0x340\n  1937: a0 = a0 + s1\n  1940: u64 [a5 + 0x68] = a3\n  1943: ra = 0x30\n  1946: t0 = 0x546\n  1950: jump @1237\n      : @74 [@dyn 24] (gas: 1)\n  1954: t0 = 50, jump @1233\n      : @75 [@dyn 25] (gas: 1)\n  1960: jump @77 if a0 == 0\n      : @76 (gas: 1)\n  1963: jump @747\n      : @77 (gas: 8)\n  1966: a0 = s1 + 0x20d8\n  1970: u64 [a0 + 608] = 0\n  1974: u64 [a0 + 600] = 0\n  1978: u64 [a0 + 592] = 0\n  1982: a1 = s1 + 0x2320\n  1986: u64 [a0 + 584] = 0\n  1990: a0 = u64 [s1 + 0x158]\n  1994: ra = 52, jump @12\n      : @78 [@dyn 26] (gas: 4)\n  1999: a4 = s1 + 0x100\n  2003: a0 = u64 [a4 + 0x48]\n  2006: a2 = u64 [a4 + 0x40]\n  2009: t0 = 54, jump @1230\n      : @79 [@dyn 27] (gas: 1)\n  2015: jump @81 if a0 != 0\n      : @80 (gas: 1)\n  2018: jump @747\n      : @81 (gas: 12)\n  2021: a0 = u64 [s1 + 0x158]\n  2025: i32 a0 = a0 + 0x20\n  2028: a1 = s1 + 0x20d8\n  2032: u64 [s1 + 0x148] = a2\n  2036: a2 = a1\n  2038: u64 [a1 + 576] = 0\n  2042: u64 [a1 + 568] = 0\n  2046: u64 [a1 + 560] = 0\n  2050: a1 = s1 + 0x2300\n  2054: u64 [a2 + 552] = 0\n  2058: u64 [s1 + 0x140] = a3\n  2062: ra = 56, jump @12\n      : @82 [@dyn 28] (gas: 4)\n  2067: a3 = s1 + 0x100\n  2071: a2 = u64 [a3 + 0x48]\n  2074: a0 = u64 [a3 + 0x40]\n  2077: t0 = 58, jump @1249\n      : @83 [@dyn 29] (gas: 1)\n  2083: jump @85 if a0 != 0\n      : @84 (gas: 1)\n  2086: jump @747\n      : @85 (gas: 5)\n  2089: a0 = u64 [s1 + 0x158]\n  2093: i32 a0 = a0 + 0x40\n  2096: t0 = 0x3c\n  2099: a2 = s1 + 0x20d8\n  2103: fallthrough\n      : @86 [@dyn 30] (gas: 6)\n  2104: u64 [a2 + 544] = 0\n  2108: u64 [a2 + 536] = 0\n  2112: u64 [a2 + 528] = 0\n  2116: a1 = s1 + 0x22e0\n  2120: u64 [a2 + 520] = 0\n  2124: ra = 62, jump @12\n      : @87 [@dyn 31] (gas: 3)\n  2129: a0 = 0xffffffa0\n  2139: a2 = s1 + 0x100\n  2143: t0 = 64, jump @1217\n      : @88 [@dyn 32] (gas: 1)\n  2149: jump @90 if a0 != 0\n      : @89 (gas: 1)\n  2152: jump @747\n      : @90 (gas: 5)\n  2155: a0 = u64 [s1 + 0x158]\n  2159: i32 a0 = a0 + 0x60\n  2162: t0 = 0x42\n  2165: a2 = s1 + 0x20d8\n  2169: fallthrough\n      : @91 [@dyn 33] (gas: 6)\n  2170: u64 [a2 + 512] = 0\n  2174: u64 [a2 + 504] = 0\n  2178: u64 [a2 + 488] = 0x60\n  2183: a1 = s1 + 0x22c0\n  2187: u64 [a2 + 496] = 0\n  2191: ra = 68, jump @12\n      : @92 [@dyn 34] (gas: 4)\n  2196: a0 = u64 [s1 + 0x118]\n  2200: t0 = 0x46\n  2203: a2 = s1 + 0x20d8\n  2207: fallthrough\n      : @93 [@dyn 35] (gas: 11)\n  2208: a3 = a2 + 0x100\n  2212: u64 [a3 + 0xe0] = a0\n  2216: a0 = u64 [s1 + 0x110]\n  2220: u64 [a3 + 0xd8] = a0\n  2224: a0 = u64 [s1 + 0x108]\n  2228: u64 [a3 + 0xd0] = a0\n  2232: a1 = s1 + 0x22a0\n  2236: a0 = u64 [s1 + 0x100]\n  2240: u64 [a3 + 0xc8] = a0\n  2244: a0 = 0\n  2246: ra = 72, jump @12\n      : @94 [@dyn 36] (gas: 9)\n  2251: a0 = s1 + 0x20d8\n  2255: u64 [a0 + 448] = 0\n  2259: u64 [a0 + 440] = 0\n  2263: u64 [a0 + 432] = 0\n  2267: a3 = a0\n  2269: a0 = 0x20\n  2272: a1 = s1 + 0x2280\n  2276: u64 [a3 + 424] = 0x2\n  2281: ra = 74, jump @12\n      : @95 [@dyn 37] (gas: 3)\n  2286: a1 = 0x40\n  2289: a0 = 0\n  2291: ra = 76, jump @0\n      : @96 [@dyn 38] (gas: 1)\n  2296: t0 = 78, jump @1202\n      : @97 [@dyn 39] (gas: 4)\n  2302: ra = 0x50\n  2305: ecalli 6 // 'hash_keccak_256'\n  2307: t0 = 0x52\n  2310: jump @1210\n      : @98 [@dyn 40] (gas: 1)\n  2314: t0 = 82, jump @1210\n      : @99 [@dyn 41] (gas: 8)\n  2320: a5 = a3 + 0x100\n  2324: u64 [a5 + 0x80] = a2\n  2328: u64 [a5 + 0x78] = a1\n  2331: u64 [a5 + 0x70] = a0\n  2334: a0 = s1 + 0x2260\n  2338: a1 = s1 + 0x2240\n  2342: u64 [a5 + 0x68] = a4\n  2345: ra = 84, jump @14\n      : @100 [@dyn 42] (gas: 22)\n  2350: a3 = s1 + 0x20d8\n  2354: a4 = a3 + 0x100\n  2358: a0 = u64 [a4 + 0x90]\n  2362: a1 = u64 [a4 + 0x88]\n  2366: a2 = u64 [a4 + 0x98]\n  2370: a3 = u64 [a4 + 0xa0]\n  2374: t1 = u64 [s1 + 0x130]\n  2378: a4 = t1 ^ a0\n  2381: a0 = t1 <u a0\n  2384: t0 = u64 [s1 + 0x138]\n  2388: a1 = t0 <u a1\n  2391: a1 = a0 if a4 != 0\n  2394: t2 = u64 [s1 + 0x120]\n  2398: a0 = t2 ^ a3\n  2401: a3 = t2 <u a3\n  2404: a5 = u64 [s1 + 0x128]\n  2408: a4 = a5 <u a2\n  2411: a4 = a3 if a0 != 0\n  2414: a2 = a2 ^ a5\n  2417: a0 = a0 | a2\n  2420: a1 = a4 if a0 != 0\n  2423: jump @102 if a1 != 0\n      : @101 (gas: 1)\n  2426: jump @730\n      : @102 (gas: 12)\n  2429: a2 = s1 + 0x20d8\n  2433: a0 = u64 [s1 + 0x100]\n  2437: u64 [a2 + 0xa8] = a0\n  2441: a0 = u64 [s1 + 0x108]\n  2445: u64 [a2 + 0xb0] = a0\n  2449: a0 = u64 [s1 + 0x110]\n  2453: u64 [a2 + 0xb8] = a0\n  2457: a1 = s1 + 0x2180\n  2461: a0 = u64 [s1 + 0x118]\n  2465: u64 [a2 + 0xc0] = a0\n  2469: a0 = 0\n  2471: ra = 86, jump @12\n      : @103 [@dyn 43] (gas: 8)\n  2476: a2 = s1 + 0x20d8\n  2480: u64 [a2 + 160] = 0\n  2484: u64 [a2 + 152] = 0\n  2488: u64 [a2 + 136] = 0x2\n  2493: a0 = 0x20\n  2496: a1 = s1 + 0x2160\n  2500: u64 [a2 + 144] = 0\n  2504: ra = 88, jump @12\n      : @104 [@dyn 44] (gas: 3)\n  2509: a1 = 0x40\n  2512: a0 = 0\n  2514: ra = 90, jump @0\n      : @105 [@dyn 45] (gas: 1)\n  2519: t0 = 92, jump @1202\n      : @106 [@dyn 46] (gas: 4)\n  2525: ra = 0x5e\n  2528: ecalli 6 // 'hash_keccak_256'\n  2530: t0 = 0x60\n  2533: jump @1210\n      : @107 [@dyn 47] (gas: 1)\n  2537: t0 = 96, jump @1210\n      : @108 [@dyn 48] (gas: 16)\n  2543: a5 = u64 [s1 + 0x120]\n  2547: u64 [a3 + 0x20] = a5\n  2550: a5 = u64 [s1 + 0x128]\n  2554: u64 [a3 + 0x18] = a5\n  2557: a5 = u64 [s1 + 0x130]\n  2561: u64 [a3 + 0x10] = a5\n  2564: a5 = u64 [s1 + 0x138]\n  2568: u64 [a3 + 0x8] = a5\n  2571: u64 [a3 + 0x40] = a2\n  2574: u64 [a3 + 0x38] = a1\n  2577: u64 [a3 + 0x30] = a0\n  2580: a0 = s1 + 0x2120\n  2584: a1 = s1 + 0x2100\n  2588: a2 = s1 + 0x20e0\n  2592: u64 [a3 + 0x28] = a4\n  2595: ra = 98, jump @1136\n      : @109 [@dyn 49] (gas: 12)\n  2601: a1 = s1 + 0x20d8\n  2605: a0 = u64 [a1 + 0x48]\n  2608: u64 [s1 + 0x130] = a0\n  2612: a0 = u64 [a1 + 0x50]\n  2615: u64 [s1 + 0x138] = a0\n  2619: a0 = u64 [a1 + 0x58]\n  2622: u64 [s1 + 0x148] = a0\n  2626: a0 = u64 [a1 + 0x60]\n  2629: u64 [s1 + 0x140] = a0\n  2633: a0 = s1 + 0x20c0\n  2637: a1 = 0x40\n  2640: ra = 100, jump @10\n      : @110 [@dyn 50] (gas: 20)\n  2645: a0 = s1 + 0x20d8\n  2649: a1 = u64 [a0]\n  2651: u64 [s1 + 0x128] = a1\n  2655: a5 = a0 + 0xffffffffffffff00\n  2659: a2 = u64 [a5 + 0xf8]\n  2663: u64 [s1 + 0x120] = a2\n  2667: a4 = u64 [a5 + 0xf0]\n  2671: u64 [s1 + 0x150] = a4\n  2675: a3 = u64 [a5 + 0xe8]\n  2679: u64 [s1 + 0x158] = a3\n  2683: a5 = s1 + 0x18d8\n  2687: u64 [a5 + 0x7e0] = a1\n  2691: a1 = a5 + 0x700\n  2695: u64 [a1 + 0xd8] = a2\n  2699: u64 [a1 + 0xd0] = a4\n  2703: a0 = s1 + 0x20a0\n  2707: u64 [a1 + 0xc8] = a3\n  2711: ra = 0x66\n  2714: t0 = 0x546\n  2718: jump @1237\n      : @111 [@dyn 51] (gas: 14)\n  2722: a0 = u64 [s1 + 0x140]\n  2726: a1 = s1 + 0x18d8\n  2730: a2 = a1 + 0x700\n  2734: u64 [a2 + 0xa0] = a0\n  2738: a0 = u64 [s1 + 0x148]\n  2742: u64 [a2 + 0x98] = a0\n  2746: a0 = u64 [s1 + 0x138]\n  2750: u64 [a2 + 0x90] = a0\n  2754: a3 = a1\n  2756: a0 = s1 + 0x2080\n  2760: a1 = s1 + 0x2060\n  2764: a2 = u64 [s1 + 0x130]\n  2768: u64 [a3 + 0x788] = a2\n  2772: ra = 104, jump @14\n      : @112 [@dyn 52] (gas: 13)\n  2777: a3 = s1 + 0x100\n  2781: a0 = u64 [a3 + 0x28]\n  2784: a1 = u64 [a3 + 0x50]\n  2787: a0 = a0 | a1\n  2790: a2 = u64 [a3 + 0x20]\n  2793: a1 = u64 [a3 + 0x58]\n  2796: a1 = a1 | a2\n  2799: a1 = a1 | a0\n  2802: a1 = a1 >> 0x20\n  2805: a0 = a0 | a2\n  2808: a0 = a0 << 0x20\n  2811: a0 = a0 | a1\n  2814: jump @114 if a0 == 0\n      : @113 (gas: 1)\n  2817: jump @747\n      : @114 (gas: 13)\n  2820: a4 = s1 + 0x18d8\n  2824: a5 = a4 + 0x700\n  2828: a0 = u64 [a5 + 0xc0]\n  2832: a1 = u64 [a5 + 0xb8]\n  2836: a2 = u64 [a5 + 0xb0]\n  2840: a3 = u64 [a5 + 0xa8]\n  2844: u64 [a5 + 0x68] = a3\n  2847: u64 [a5 + 0x70] = a2\n  2850: u64 [a5 + 0x78] = a1\n  2853: a1 = s1 + 0x2040\n  2857: u64 [a5 + 0x80] = a0\n  2861: a0 = u64 [s1 + 0x158]\n  2865: ra = 106, jump @12\n      : @115 [@dyn 53] (gas: 21)\n  2870: a0 = u64 [s1 + 0x130]\n  2874: a0 = a0 + 0x1\n  2877: a1 = a0 <u 0x1\n  2880: a2 = u64 [s1 + 0x138]\n  2884: a1 = a1 + a2\n  2887: a2 = a0 | a1\n  2890: a2 = a2 <u 0x1\n  2893: a3 = u64 [s1 + 0x148]\n  2897: a2 = a2 + a3\n  2900: a3 = a2 <u a3\n  2903: a4 = u64 [s1 + 0x140]\n  2907: a3 = a3 + a4\n  2910: a4 = s1 + 0x18d8\n  2914: a5 = a4 + 0x700\n  2918: u64 [a5 + 0x38] = a2\n  2921: u64 [a5 + 0x30] = a1\n  2924: u64 [a5 + 0x28] = a0\n  2927: a0 = s1 + 0x2020\n  2931: a1 = s1 + 0x2000\n  2935: u64 [a5 + 0x40] = a3\n  2938: ra = 108, jump @14\n      : @116 [@dyn 54] (gas: 4)\n  2943: a4 = s1 + 0x100\n  2947: a0 = u64 [a4 + 0x28]\n  2950: a2 = u64 [a4 + 0x20]\n  2953: t0 = 110, jump @1230\n      : @117 [@dyn 55] (gas: 1)\n  2959: jump @119 if a0 != 0\n      : @118 (gas: 1)\n  2962: jump @747\n      : @119 (gas: 18)\n  2965: a4 = s1 + 0x18d8\n  2969: a5 = a4 + 0x700\n  2973: a0 = u64 [a5 + 0x58]\n  2976: a1 = u64 [a5 + 0x50]\n  2979: u64 [s1 + 0x128] = a2\n  2983: a2 = u64 [a5 + 0x48]\n  2986: a0 = a0 << 0x20\n  2989: u64 [s1 + 0x120] = a3\n  2993: a3 = a0 >> 0x20\n  2996: a0 = u64 [s1 + 0x158]\n  3000: i32 a0 = a0 + 0x20\n  3003: u64 [a4 + 1824] = 0\n  3007: u64 [a5 + 0x8] = a2\n  3010: u64 [a5 + 0x10] = a1\n  3013: a1 = s1 + 0x1fe0\n  3017: u64 [a5 + 0x18] = a3\n  3020: u64 [s1 + 0x108] = a0\n  3024: ra = 112, jump @12\n      : @120 [@dyn 56] (gas: 5)\n  3029: a1 = u64 [s1 + 0x130]\n  3033: a0 = a1 + 0x2\n  3036: a1 = a0 <u a1\n  3039: a3 = u64 [s1 + 0x138]\n  3043: t0 = 114, jump @1243\n      : @121 [@dyn 57] (gas: 2)\n  3049: a1 = u64 [s1 + 0x148]\n  3053: t0 = 116, jump @1254\n      : @122 [@dyn 58] (gas: 9)\n  3059: a5 = a1 + 0x600\n  3063: u64 [a5 + 0xd8] = a3\n  3067: u64 [a5 + 0xd0] = a2\n  3071: u64 [a5 + 0xc8] = a0\n  3075: a2 = a1\n  3077: a0 = s1 + 0x1fc0\n  3081: a1 = s1 + 0x1fa0\n  3085: u64 [a2 + 0x6e0] = a4\n  3089: ra = 118, jump @14\n      : @123 [@dyn 59] (gas: 4)\n  3094: a3 = s1 + 0x100\n  3098: a2 = u64 [a3 + 0x28]\n  3101: a0 = u64 [a3 + 0x20]\n  3104: t0 = 120, jump @1249\n      : @124 [@dyn 60] (gas: 1)\n  3110: jump @126 if a0 != 0\n      : @125 (gas: 1)\n  3113: jump @747\n      : @126 (gas: 15)\n  3116: a5 = s1 + 0x18d8\n  3120: a4 = u64 [a5 + 0x700]\n  3124: a1 = u64 [a5 + 0x6f8]\n  3128: a2 = u64 [a5 + 0x6f0]\n  3132: a3 = u64 [a5 + 0x6e8]\n  3136: a0 = u64 [s1 + 0x158]\n  3140: i32 a0 = a0 + 0x40\n  3143: u64 [a5 + 0x6a8] = a3\n  3147: a3 = a5 + 0x600\n  3151: u64 [a3 + 0xb0] = a2\n  3155: u64 [a3 + 0xb8] = a1\n  3159: a1 = s1 + 0x1f80\n  3163: u64 [a3 + 0xc0] = a4\n  3167: u64 [s1 + 0x100] = a0\n  3171: ra = 122, jump @12\n      : @127 [@dyn 61] (gas: 3)\n  3176: a0 = s1 + 0x1f60\n  3180: a1 = 0x40\n  3183: ra = 124, jump @10\n      : @128 [@dyn 62] (gas: 34)\n  3188: a5 = s1 + 0x18d8\n  3192: t1 = u64 [a5 + 0x6a0]\n  3196: u64 [s1 + 0x120] = t1\n  3200: t2 = u64 [a5 + 0x698]\n  3204: u64 [s1 + 0x118] = t2\n  3208: ra = u64 [a5 + 0x690]\n  3212: u64 [s1 + 0x110] = ra\n  3216: a0 = u64 [s1 + 0x130]\n  3220: t0 = a0 + 0x3\n  3223: a0 = t0 <u a0\n  3226: a2 = u64 [s1 + 0x138]\n  3230: a1 = a2 + a0\n  3233: a2 = a1 <u a2\n  3236: a2 = a0 if a0 == 0\n  3239: a3 = u64 [a5 + 0x688]\n  3243: u64 [s1 + 0x138] = a3\n  3247: a0 = u64 [s1 + 0x148]\n  3251: a2 = a2 + a0\n  3254: a0 = a2 <u a0\n  3257: a4 = u64 [s1 + 0x140]\n  3261: a0 = a0 + a4\n  3264: u64 [a5 + 0x640] = t1\n  3268: u64 [a5 + 0x638] = t2\n  3272: u64 [a5 + 0x630] = ra\n  3276: a4 = a5 + 0x600\n  3280: u64 [a4 + 0x28] = a3\n  3283: u64 [a4 + 0x60] = a0\n  3286: u64 [a4 + 0x58] = a2\n  3289: u64 [a4 + 0x50] = a1\n  3292: a0 = s1 + 0x1f40\n  3296: a1 = s1 + 0x1f20\n  3300: a2 = s1 + 0x1f00\n  3304: u64 [a5 + 0x648] = t0\n  3308: ra = 126, jump @1084\n      : @129 [@dyn 63] (gas: 40)\n  3313: a1 = s1 + 0x18d8\n  3317: a5 = a1 + 0x600\n  3321: a0 = u64 [a5 + 0x70]\n  3324: a2 = u64 [a5 + 0x80]\n  3328: a4 = u64 [a5 + 0x68]\n  3331: u64 [s1 + 0x148] = a4\n  3335: a3 = u64 [a5 + 0x78]\n  3338: t0 = u64 [s1 + 0x110]\n  3342: ra = a0 ^ t0\n  3345: a5 = a0 <u t0\n  3348: t1 = u64 [s1 + 0x138]\n  3352: t2 = a4 <u t1\n  3355: a5 = t2 if ra == 0\n  3358: a1 = u64 [s1 + 0x118]\n  3362: a4 = a3 - a1\n  3365: a3 = a3 <u a1\n  3368: ra = a1\n  3370: a1 = u64 [s1 + 0x120]\n  3374: a2 = a2 - a1\n  3377: a2 = a2 - a3\n  3380: a3 = a4 <u a5\n  3383: a2 = a2 - a3\n  3386: a4 = a4 - a5\n  3389: a0 = a0 - t0\n  3392: t2 = a0 - t2\n  3395: a3 = u64 [s1 + 0x148]\n  3399: a3 = a3 - t1\n  3402: a0 = s1 + 0x18d8\n  3406: u64 [a0 + 0x5e8] = a3\n  3410: u64 [a0 + 0x620] = a1\n  3414: u64 [a0 + 0x618] = ra\n  3418: u64 [a0 + 0x610] = t0\n  3422: u64 [a0 + 0x608] = t1\n  3426: u64 [a0 + 0x5f0] = t2\n  3430: u64 [a0 + 0x5f8] = a4\n  3434: a3 = a0\n  3436: a0 = s1 + 0x1ee0\n  3440: a1 = s1 + 0x1ec0\n  3444: u64 [a3 + 0x600] = a2\n  3448: ra = 128, jump @1126\n      : @130 [@dyn 64] (gas: 9)\n  3454: a0 = 0xffffffa0\n  3464: a2 = s1 + 0x100\n  3468: a1 = u64 [a2 + 0x58]\n  3471: a0 = a1 <u a0\n  3474: a1 = u64 [a2 + 0x50]\n  3477: a0 = 0 if a1 != 0\n  3479: a1 = u64 [a2 + 0x28]\n  3482: a0 = 0 if a1 != 0\n  3484: jump @132 if a0 != 0\n      : @131 (gas: 1)\n  3487: jump @747\n      : @132 (gas: 16)\n  3490: a0 = u64 [s1 + 0x158]\n  3494: i32 a2 = a0 + 0x60\n  3497: a3 = s1 + 0x18d8\n  3501: a0 = u64 [s1 + 0x138]\n  3505: a4 = a3 + 0x500\n  3509: u64 [a4 + 0xc8] = a0\n  3513: a0 = u64 [s1 + 0x110]\n  3517: u64 [a4 + 0xd0] = a0\n  3521: a0 = u64 [s1 + 0x118]\n  3525: u64 [a4 + 0xd8] = a0\n  3529: a1 = s1 + 0x1ea0\n  3533: a0 = u64 [s1 + 0x120]\n  3537: u64 [a4 + 0xe0] = a0\n  3541: u64 [s1 + 0x130] = a2\n  3545: a0 = a2\n  3547: ra = 130, jump @12\n      : @133 [@dyn 65] (gas: 3)\n  3553: a0 = s1 + 0x1e80\n  3557: a1 = 0x40\n  3560: ra = 132, jump @10\n      : @134 [@dyn 66] (gas: 19)\n  3566: a4 = s1 + 0x18d8\n  3570: a5 = a4 + 0x500\n  3574: a2 = u64 [a5 + 0xc0]\n  3578: a3 = u64 [a5 + 0xb8]\n  3582: a0 = u64 [a5 + 0xb0]\n  3586: a1 = u64 [a5 + 0xa8]\n  3590: a5 = s1 + 0x100\n  3594: u64 [a5 + 0x48] = a0\n  3597: u64 [a5 + 0x40] = a2\n  3600: a0 = a0 | a2\n  3603: u64 [a5 + 0x50] = a1\n  3606: a1 = a1 | a3\n  3609: a1 = a1 | a0\n  3612: a1 = a1 >> 0x20\n  3615: u64 [a5 + 0x38] = a3\n  3618: a0 = a0 | a3\n  3621: a0 = a0 << 0x20\n  3624: a0 = a0 | a1\n  3627: jump @136 if a0 == 0\n      : @135 (gas: 1)\n  3630: jump @747\n      : @136 (gas: 7)\n  3633: u64 [a4 + 1440] = 0\n  3637: u64 [a4 + 1432] = 0\n  3641: u64 [a4 + 1424] = 0\n  3645: a1 = s1 + 0x1e60\n  3649: u64 [a4 + 1416] = 0x20\n  3654: a0 = u64 [s1 + 0x150]\n  3658: ra = 134, jump @12\n      : @137 [@dyn 67] (gas: 3)\n  3664: a0 = s1 + 0x1e40\n  3668: a1 = u64 [s1 + 0x158]\n  3672: ra = 136, jump @10\n      : @138 [@dyn 68] (gas: 14)\n  3678: a3 = s1 + 0x100\n  3682: a0 = u64 [a3 + 0x40]\n  3685: a2 = u64 [a3 + 0x38]\n  3688: a2 = a2 | a0\n  3691: a0 = 0x100000000\n  3701: u64 [a3 + 0x28] = a0\n  3704: a0 = 0xffffffe0\n  3714: a1 = u64 [a3 + 0x50]\n  3717: a0 = a1 <u a0\n  3720: a1 = u64 [a3 + 0x48]\n  3723: a0 = 0 if a1 != 0\n  3725: u64 [a3 + 0x58] = a2\n  3728: a0 = 0 if a2 != 0\n  3730: jump @140 if a0 != 0\n      : @139 (gas: 1)\n  3733: jump @747\n      : @140 (gas: 15)\n  3736: a5 = s1 + 0x18d8\n  3740: t0 = u64 [a5 + 0x580]\n  3744: a1 = u64 [a5 + 0x578]\n  3748: a3 = u64 [a5 + 0x570]\n  3752: a4 = u64 [a5 + 0x568]\n  3756: a2 = i32 [s1 + 0x150]\n  3760: u64 [s1 + 0x120] = a2\n  3764: i32 a0 = a2 + 0x20\n  3767: a2 = a5 + 0x500\n  3771: u64 [a2 + 0x48] = a4\n  3774: u64 [a2 + 0x50] = a3\n  3777: u64 [a2 + 0x58] = a1\n  3780: a1 = s1 + 0x1e20\n  3784: u64 [a5 + 0x560] = t0\n  3788: ra = 138, jump @12\n      : @141 [@dyn 69] (gas: 3)\n  3794: a0 = s1 + 0x1e00\n  3798: a1 = u64 [s1 + 0x108]\n  3802: ra = 140, jump @10\n      : @142 [@dyn 70] (gas: 4)\n  3808: a2 = s1 + 0x100\n  3812: a0 = u64 [a2 + 0x28]\n  3815: a0 = a0 + 0xffffffffffffffc0\n  3818: t0 = 142, jump @1229\n      : @143 [@dyn 71] (gas: 1)\n  3825: jump @145 if a0 != 0\n      : @144 (gas: 1)\n  3828: jump @747\n      : @145 (gas: 16)\n  3831: a5 = s1 + 0x18d8\n  3835: a1 = u64 [a5 + 0x538]\n  3839: a2 = u64 [a5 + 0x530]\n  3843: a3 = u64 [a5 + 0x528]\n  3847: a4 = 0xffffffff\n  3857: a4 = a4 & a1\n  3860: a2 = a2 & 0xffffffffffffffff\n  3863: a3 = a3 & 0xffffffffffffffff\n  3866: a0 = u64 [s1 + 0x120]\n  3870: i32 a0 = a0 + 0x40\n  3873: u64 [a5 + 1312] = 0\n  3877: u64 [a5 + 0x508] = a3\n  3881: u64 [a5 + 0x510] = a2\n  3885: a1 = s1 + 0x1de0\n  3889: u64 [a5 + 0x518] = a4\n  3893: ra = 144, jump @12\n      : @146 [@dyn 72] (gas: 3)\n  3899: a0 = s1 + 0x1dc0\n  3903: a1 = u64 [s1 + 0x100]\n  3907: ra = 146, jump @10\n      : @147 [@dyn 73] (gas: 5)\n  3913: a0 = 0x100000000\n  3923: a2 = s1 + 0x100\n  3927: u64 [a2 + 0x28] = a0\n  3930: a0 = 0xffffffa0\n  3940: t0 = 148, jump @1229\n      : @148 [@dyn 74] (gas: 1)\n  3947: jump @150 if a0 != 0\n      : @149 (gas: 1)\n  3950: jump @747\n      : @150 (gas: 14)\n  3953: a5 = s1 + 0x18d8\n  3957: a2 = u64 [a5 + 0x500]\n  3961: a1 = u64 [a5 + 0x4f8]\n  3965: a3 = u64 [a5 + 0x4f0]\n  3969: a4 = u64 [a5 + 0x4e8]\n  3973: a0 = u64 [s1 + 0x120]\n  3977: i32 a0 = a0 + 0x60\n  3980: u64 [a5 + 0x4c8] = a4\n  3984: a4 = a5 + 0x400\n  3988: u64 [a4 + 0xd0] = a3\n  3992: u64 [a4 + 0xd8] = a1\n  3996: a1 = s1 + 0x1da0\n  4000: u64 [a4 + 0xe0] = a2\n  4004: ra = 150, jump @12\n      : @151 [@dyn 75] (gas: 3)\n  4010: a0 = s1 + 0x1d80\n  4014: a1 = u64 [s1 + 0x130]\n  4018: ra = 152, jump @10\n      : @152 [@dyn 76] (gas: 4)\n  4024: a2 = s1 + 0x100\n  4028: a0 = u64 [a2 + 0x28]\n  4031: a0 = a0 + 0xffffffffffffff80\n  4034: t0 = 154, jump @1229\n      : @153 [@dyn 77] (gas: 1)\n  4041: jump @155 if a0 != 0\n      : @154 (gas: 1)\n  4044: jump @747\n      : @155 (gas: 18)\n  4047: a2 = s1 + 0x18d8\n  4051: a3 = a2 + 0x400\n  4055: a0 = u64 [a3 + 0xc0]\n  4059: u64 [s1 + 0x118] = a0\n  4063: a0 = u64 [a3 + 0xb8]\n  4067: u64 [s1 + 0x128] = a0\n  4071: a0 = u64 [a3 + 0xb0]\n  4075: u64 [s1 + 0x130] = a0\n  4079: a0 = u64 [a3 + 0xa8]\n  4083: u64 [s1 + 0x158] = a0\n  4087: a0 = u64 [s1 + 0x120]\n  4091: i32 a0 = a0 + 0x80\n  4095: u64 [a2 + 1184] = 0\n  4099: u64 [a2 + 1176] = 0\n  4103: u64 [a3 + 136] = 0x80\n  4109: a1 = s1 + 0x1d60\n  4113: u64 [a2 + 1168] = 0\n  4117: ra = 156, jump @12\n      : @156 [@dyn 78] (gas: 5)\n  4123: a1 = u64 [s1 + 0x150]\n  4127: a0 = a1 + 0xa0\n  4131: a1 = a0 <u a1\n  4134: a3 = u64 [s1 + 0x148]\n  4138: t0 = 158, jump @1243\n      : @157 [@dyn 79] (gas: 2)\n  4145: a1 = u64 [s1 + 0x138]\n  4149: t0 = 160, jump @1254\n      : @158 [@dyn 80] (gas: 18)\n  4156: a5 = a1 + 0x400\n  4160: u64 [a5 + 0x30] = a2\n  4163: u64 [a5 + 0x28] = a0\n  4166: a0 = u64 [s1 + 0x118]\n  4170: u64 [a5 + 0x60] = a0\n  4173: a0 = u64 [s1 + 0x128]\n  4177: u64 [a5 + 0x58] = a0\n  4180: a0 = u64 [s1 + 0x130]\n  4184: u64 [a5 + 0x50] = a0\n  4187: a0 = u64 [s1 + 0x158]\n  4191: u64 [a5 + 0x48] = a0\n  4194: u64 [a5 + 0x38] = a3\n  4197: a3 = a1\n  4199: a0 = s1 + 0x1d40\n  4203: a1 = s1 + 0x1d20\n  4207: a2 = s1 + 0x1d00\n  4211: u64 [a3 + 0x440] = a4\n  4215: ra = 162, jump @1057\n      : @159 [@dyn 81] (gas: 26)\n  4221: a1 = s1 + 0x18d8\n  4225: a0 = u64 [a1 + 0x470]\n  4229: t0 = u64 [a1 + 0x480]\n  4233: t1 = u64 [a1 + 0x468]\n  4237: a3 = u64 [a1 + 0x478]\n  4241: a1 = u64 [s1 + 0x148]\n  4245: a4 = a0 ^ a1\n  4248: a5 = a0 <u a1\n  4251: ra = a1\n  4253: t2 = u64 [s1 + 0x150]\n  4257: a1 = t1 <u t2\n  4260: a5 = a1 if a4 == 0\n  4263: a2 = u64 [s1 + 0x138]\n  4267: a4 = a3 - a2\n  4270: a3 = a3 <u a2\n  4273: a2 = u64 [s1 + 0x140]\n  4277: a2 = t0 - a2\n  4280: a2 = a2 - a3\n  4283: a3 = a4 <u a5\n  4286: a2 = a2 - a3\n  4289: a4 = a4 - a5\n  4292: a0 = a0 - ra\n  4295: a1 = a0 - a1\n  4298: a0 = t1 - t2\n  4301: a1 = a1 | a2\n  4304: t0 = 164, jump @1235\n      : @160 [@dyn 82] (gas: 1)\n  4311: jump @162 if a1 == 0\n      : @161 (gas: 1)\n  4314: jump @747\n      : @162 (gas: 5)\n  4317: i32 a1 = a0 + 0\n  4319: u64 [s1 + 0x158] = a1\n  4323: a0 = u64 [s1 + 0x120]\n  4327: ra = 0x4ec\n  4331: jump @0\n      : @163 (gas: 1)\n  4334: t0 = 166, jump @1201\n      : @164 [@dyn 83] (gas: 4)\n  4341: ra = 0xa8\n  4345: ecalli 11 // 'value_transferred'\n  4347: t0 = 0xaa\n  4351: jump @1204\n      : @165 [@dyn 84] (gas: 1)\n  4355: t0 = 170, jump @1204\n      : @166 [@dyn 85] (gas: 1)\n  4362: jump @168 if a0 == 0\n      : @167 (gas: 1)\n  4365: jump @945\n      : @168 (gas: 3)\n  4368: a0 = u64 [s1 + 0x158]\n  4372: a0 = i32 [a0]\n  4374: jump @170 if a0 >u 67\n      : @169 (gas: 1)\n  4378: jump @945\n      : @170 (gas: 18)\n  4381: a0 = s1 + 0x4000\n  4385: i32 a0 = a0 + 0xfffffffffffffc80\n  4389: a1 = 0x4\n  4392: ecalli 1 // 'call_data_load'\n  4394: a1 = s1 + 0x38d8\n  4398: a2 = a1 + 0x300\n  4402: a0 = u64 [a2 + 0xc0]\n  4406: u64 [s1 + 0x140] = a0\n  4410: a0 = u64 [a2 + 0xb8]\n  4414: u64 [s1 + 0x148] = a0\n  4418: a0 = u64 [a2 + 0xb0]\n  4422: u64 [s1 + 0x150] = a0\n  4426: a0 = u64 [a2 + 0xa8]\n  4430: u64 [s1 + 0x158] = a0\n  4434: a0 = s1 + 0x3860\n  4438: ra = 0xac\n  4442: t0 = 0x508\n  4446: jump @1252\n      : @171 [@dyn 86] (gas: 15)\n  4450: a0 = s1 + 0x30d8\n  4454: a1 = u64 [a0 + 0x788]\n  4458: u64 [s1 + 0x138] = a1\n  4462: a1 = u64 [a0 + 0x790]\n  4466: u64 [s1 + 0x130] = a1\n  4470: a1 = u32 [a0 + 0x798]\n  4474: u64 [s1 + 0x128] = a1\n  4478: u64 [a0 + 1888] = 0\n  4482: u64 [a0 + 1880] = 0\n  4486: u64 [a0 + 1872] = 0\n  4490: a2 = a0\n  4492: a0 = s1 + 0x3840\n  4496: a1 = s1 + 0x3820\n  4500: u64 [a2 + 1864] = 0\n  4504: ra = 174, jump @14\n      : @172 [@dyn 87] (gas: 12)\n  4510: a0 = s1 + 0x30d8\n  4514: a1 = u64 [a0 + 0x770]\n  4518: u64 [s1 + 0x120] = a1\n  4522: a1 = u64 [a0 + 0x768]\n  4526: u64 [s1 + 0x118] = a1\n  4530: a0 = u32 [a0 + 0x778]\n  4534: u64 [s1 + 0x110] = a0\n  4538: a0 = s1 + 0x4000\n  4542: i32 a0 = a0 + 0xfffffffffffffca0\n  4546: ra = 0xb0\n  4550: ecalli 3 // 'caller'\n  4552: fallthrough\n      : @173 [@dyn 88] (gas: 5)\n  4553: a2 = s1 + 0x38d8\n  4557: a0 = u64 [a2 + 0x3d0]\n  4561: a1 = u64 [a2 + 0x3c8]\n  4565: a2 = i32 [a2 + 0x3d8]\n  4569: t0 = 178, jump @1211\n      : @174 [@dyn 89] (gas: 6)\n  4576: u64 [a1 + 1856] = 0\n  4580: u64 [a1 + 1848] = 0\n  4584: u64 [a1 + 0x728] = a0\n  4588: a0 = s1 + 0x3800\n  4592: u64 [a1 + 1840] = 0\n  4596: ra = 180, jump @1185\n      : @175 [@dyn 90] (gas: 1)\n  4603: t0 = 182, jump @1248\n      : @176 [@dyn 91] (gas: 11)\n  4610: a3 = a2 + 0x700\n  4614: u64 [a3 + 0x20] = a0\n  4617: a0 = u64 [s1 + 0x148]\n  4621: u64 [a3 + 0x18] = a0\n  4624: a0 = u64 [s1 + 0x150]\n  4628: u64 [a3 + 0x10] = a0\n  4631: a1 = s1 + 0x37e0\n  4635: a0 = u64 [s1 + 0x158]\n  4639: u64 [a3 + 0x8] = a0\n  4642: a0 = 0\n  4644: ra = 184, jump @12\n      : @177 [@dyn 92] (gas: 9)\n  4650: a0 = s1 + 0x30d8\n  4654: u64 [a0 + 1792] = 0\n  4658: u64 [a0 + 1784] = 0\n  4662: u64 [a0 + 1776] = 0\n  4666: a3 = a0\n  4668: a0 = 0x20\n  4671: a1 = s1 + 0x37c0\n  4675: u64 [a3 + 1768] = 0x6\n  4680: ra = 186, jump @12\n      : @178 [@dyn 93] (gas: 3)\n  4686: a1 = 0x40\n  4689: a0 = 0\n  4691: ra = 188, jump @0\n      : @179 [@dyn 94] (gas: 1)\n  4697: t0 = 190, jump @1205\n      : @180 [@dyn 95] (gas: 4)\n  4704: ra = 0xc0\n  4708: ecalli 6 // 'hash_keccak_256'\n  4710: t0 = 0xc2\n  4714: jump @1203\n      : @181 [@dyn 96] (gas: 1)\n  4718: t0 = 194, jump @1203\n      : @182 [@dyn 97] (gas: 11)\n  4725: u64 [a2 + 1760] = 0\n  4729: a0 = u64 [s1 + 0x128]\n  4733: a3 = a2 + 0x600\n  4737: u64 [a3 + 0xd8] = a0\n  4741: a0 = u64 [s1 + 0x130]\n  4745: u64 [a3 + 0xd0] = a0\n  4749: a1 = s1 + 0x37a0\n  4753: a0 = u64 [s1 + 0x138]\n  4757: u64 [a3 + 0xc8] = a0\n  4761: a0 = 0\n  4763: ra = 196, jump @12\n      : @183 [@dyn 98] (gas: 4)\n  4769: t0 = 0xc6\n  4773: a2 = s1 + 0x30d8\n  4777: a0 = u64 [s1 + 0x108]\n  4781: fallthrough\n      : @184 [@dyn 99] (gas: 11)\n  4782: a4 = a2 + 0x600\n  4786: u64 [a4 + 0xc0] = a0\n  4790: a0 = u64 [s1 + 0x110]\n  4794: u64 [a4 + 0xb8] = a0\n  4798: a0 = u64 [s1 + 0x118]\n  4802: u64 [a4 + 0xb0] = a0\n  4806: a0 = 0x20\n  4809: a1 = s1 + 0x3780\n  4813: a3 = u64 [s1 + 0x120]\n  4817: u64 [a4 + 0xa8] = a3\n  4821: ra = 200, jump @12\n      : @185 [@dyn 100] (gas: 3)\n  4827: a1 = 0x40\n  4830: a0 = 0\n  4832: ra = 202, jump @0\n      : @186 [@dyn 101] (gas: 1)\n  4838: t0 = 204, jump @1205\n      : @187 [@dyn 102] (gas: 5)\n  4845: ra = 0xce\n  4849: ecalli 6 // 'hash_keccak_256'\n  4851: a3 = u64 [s1 + 0x120]\n  4855: t0 = 0xd0\n  4859: jump @1213\n      : @188 [@dyn 103] (gas: 2)\n  4863: a3 = u64 [s1 + 0x120]\n  4867: t0 = 208, jump @1213\n      : @189 [@dyn 104] (gas: 8)\n  4874: a5 = a3 + 0x600\n  4878: u64 [a5 + 0x80] = a2\n  4882: u64 [a5 + 0x78] = a1\n  4885: u64 [a5 + 0x70] = a0\n  4888: a0 = s1 + 0x3760\n  4892: a1 = s1 + 0x3740\n  4896: u64 [a5 + 0x68] = a4\n  4899: ra = 210, jump @14\n      : @190 [@dyn 105] (gas: 3)\n  4905: a0 = s1 + 0x30d8\n  4909: a0 = u8 [a0 + 0x688]\n  4913: jump @192 if a0 != 0\n      : @191 (gas: 1)\n  4916: jump @947\n      : @192 (gas: 3)\n  4919: a0 = s1 + 0x3720\n  4923: a1 = 0x40\n  4926: ra = 212, jump @10\n      : @193 [@dyn 106] (gas: 2)\n  4932: a2 = s1 + 0x30d8\n  4936: fallthrough\n      : @194 (gas: 13)\n  4937: t0 = u64 [a2 + 0x660]\n  4941: a1 = a2 + 0x600\n  4945: a5 = u64 [a1 + 0x58]\n  4948: a3 = u64 [a1 + 0x50]\n  4951: a0 = u64 [a1 + 0x48]\n  4954: a4 = a3 | t0\n  4957: a1 = a0 | a5\n  4960: a1 = a1 | a4\n  4963: a1 = a1 >> 0x20\n  4966: a4 = a4 | a5\n  4969: a4 = a4 << 0x20\n  4972: a1 = a1 | a4\n  4975: jump @196 if a1 == 0\n      : @195 (gas: 1)\n  4978: jump @747\n      : @196 (gas: 11)\n  4981: u64 [a2 + 1592] = 0\n  4985: u64 [a2 + 1584] = 0\n  4989: u64 [a2 + 1576] = 0\n  4993: a4 = 0x8c379a000000000\n  5003: a1 = s1 + 0x3700\n  5007: u64 [a2 + 0x640] = a4\n  5011: u64 [s1 + 0x158] = a3\n  5015: u64 [s1 + 0x150] = a0\n  5019: u64 [s1 + 0x140] = t0\n  5023: u64 [s1 + 0x148] = a5\n  5027: ra = 214, jump @12\n      : @197 [@dyn 107] (gas: 1)\n  5033: t0 = 216, jump @1206\n      : @198 [@dyn 108] (gas: 1)\n  5040: jump @200 if a0 != 0\n      : @199 (gas: 1)\n  5043: jump @747\n      : @200 (gas: 12)\n  5046: i32 a0 = a2 + 0\n  5048: u64 [s1 + 0x138] = a0\n  5052: i32 a0 = a0 + 0x4\n  5055: a2 = s1 + 0x30d8\n  5059: u64 [a2 + 1568] = 0\n  5063: u64 [a2 + 1560] = 0\n  5067: u64 [a2 + 1544] = 0x20\n  5072: a1 = s1 + 0x36e0\n  5076: u64 [a2 + 1552] = 0\n  5080: u64 [s1 + 0x148] = a3\n  5084: u64 [s1 + 0x140] = a4\n  5088: ra = 218, jump @12\n      : @201 [@dyn 109] (gas: 1)\n  5094: t0 = 220, jump @1214\n      : @202 [@dyn 110] (gas: 1)\n  5101: jump @204 if a0 != 0\n      : @203 (gas: 1)\n  5104: jump @747\n      : @204 (gas: 9)\n  5107: a0 = u64 [s1 + 0x138]\n  5111: i32 a0 = a0 + 0x24\n  5114: a4 = s1 + 0x30d8\n  5118: u64 [a4 + 1536] = 0\n  5122: u64 [a4 + 1528] = 0\n  5126: u64 [a4 + 1512] = 0xf\n  5131: a1 = s1 + 0x36c0\n  5135: u64 [a4 + 1520] = 0\n  5139: ra = 222, jump @12\n      : @205 [@dyn 111] (gas: 1)\n  5145: t0 = 224, jump @1208\n      : @206 [@dyn 112] (gas: 1)\n  5152: jump @208 if a0 != 0\n      : @207 (gas: 1)\n  5155: jump @747\n      : @208 (gas: 12)\n  5158: a0 = u64 [s1 + 0x138]\n  5162: i32 a0 = a0 + 0x44\n  5165: a1 = u64 [0x20000]\n  5170: a2 = u64 [0x20008]\n  5175: a3 = s1 + 0x30d8\n  5179: u64 [a3 + 0x5e0] = a1\n  5183: u64 [a3 + 1488] = 0\n  5187: u64 [a3 + 0x5d8] = a2\n  5191: a1 = s1 + 0x36a0\n  5195: u64 [a3 + 1480] = 0\n  5199: ra = 0x35e\n  5203: jump @12\n      : @209 (gas: 1)\n  5206: t0 = 226, jump @1201\n      : @210 [@dyn 113] (gas: 4)\n  5213: ra = 0xe4\n  5217: ecalli 11 // 'value_transferred'\n  5219: t0 = 0xe6\n  5223: jump @1204\n      : @211 [@dyn 114] (gas: 1)\n  5227: t0 = 230, jump @1204\n      : @212 [@dyn 115] (gas: 1)\n  5234: jump @214 if a0 == 0\n      : @213 (gas: 1)\n  5237: jump @945\n      : @214 (gas: 1)\n  5240: t0 = 232, jump @1251\n      : @215 [@dyn 116] (gas: 1)\n  5247: jump @217 if a1 <u a0\n      : @216 (gas: 1)\n  5250: jump @945\n      : @217 (gas: 4)\n  5253: a0 = s1 + 0x1460\n  5257: ra = 0xea\n  5261: t0 = 0x4fc\n  5265: jump @1252\n      : @218 [@dyn 117] (gas: 12)\n  5269: a3 = s1 + 0x10d8\n  5273: a4 = a3 + 0x300\n  5277: a0 = u64 [a4 + 0x88]\n  5281: a1 = u64 [a4 + 0x90]\n  5285: a2 = u32 [a3 + 0x398]\n  5289: u64 [a3 + 896] = 0\n  5293: u64 [a4 + 0x78] = a2\n  5296: u64 [a4 + 0x70] = a1\n  5299: a1 = s1 + 0x1440\n  5303: u64 [a4 + 0x68] = a0\n  5306: a0 = 0\n  5308: ra = 236, jump @12\n      : @219 [@dyn 118] (gas: 3)\n  5314: t0 = 0xee\n  5318: a2 = s1 + 0x10d8\n  5322: fallthrough\n      : @220 [@dyn 119] (gas: 7)\n  5323: u64 [a2 + 864] = 0\n  5327: u64 [a2 + 856] = 0\n  5331: u64 [a2 + 840] = 0x5\n  5336: a0 = 0x20\n  5339: a1 = s1 + 0x1420\n  5343: u64 [a2 + 848] = 0\n  5347: ra = 240, jump @12\n      : @221 [@dyn 120] (gas: 3)\n  5353: a1 = 0x40\n  5356: a0 = 0\n  5358: ra = 242, jump @0\n      : @222 [@dyn 121] (gas: 1)\n  5364: t0 = 244, jump @1202\n      : @223 [@dyn 122] (gas: 4)\n  5371: ra = 0xf6\n  5375: ecalli 6 // 'hash_keccak_256'\n  5377: t0 = 0xf8\n  5381: jump @1238\n      : @224 [@dyn 123] (gas: 1)\n  5385: t0 = 248, jump @1238\n      : @225 [@dyn 124] (gas: 10)\n  5392: u64 [s1 + 0x158] = a0\n  5396: a0 = reverse a1\n  5398: u64 [s1 + 0x150] = a0\n  5402: a0 = reverse a2\n  5404: u64 [s1 + 0x148] = a0\n  5408: a0 = reverse a3\n  5410: u64 [s1 + 0x140] = a0\n  5414: a0 = s1 + 0x1400\n  5418: a1 = 0x40\n  5421: ra = 250, jump @10\n      : @226 [@dyn 125] (gas: 23)\n  5427: a0 = s1 + 0x10d8\n  5431: a2 = a0 + 0x300\n  5435: a1 = u64 [a2 + 0x40]\n  5438: u64 [s1 + 0xb0] = a1\n  5442: a1 = u64 [a2 + 0x38]\n  5445: u64 [s1 + 0xa8] = a1\n  5449: a1 = u64 [a2 + 0x30]\n  5452: u64 [s1 + 0xa0] = a1\n  5456: a1 = u64 [a2 + 0x28]\n  5459: u64 [s1 + 0xb8] = a1\n  5463: a4 = s1 + 0x100\n  5467: a1 = u64 [a4 + 0x40]\n  5470: u64 [a2] = a1\n  5472: a1 = u64 [a4 + 0x48]\n  5475: u64 [a0 + 0x2f8] = a1\n  5479: a1 = u64 [a4 + 0x50]\n  5482: u64 [a0 + 0x2f0] = a1\n  5486: a2 = a0\n  5488: a0 = s1 + 0x13e0\n  5492: a1 = s1 + 0x13c0\n  5496: a3 = u64 [a4 + 0x58]\n  5499: u64 [a2 + 0x2e8] = a3\n  5503: ra = 252, jump @14\n      : @227 [@dyn 126] (gas: 12)\n  5509: t2 = u64 [s1 + 0xa0]\n  5513: a4 = u64 [s1 + 0xa8]\n  5517: a3 = u64 [s1 + 0xb0]\n  5521: a0 = u64 [s1 + 0xb8]\n  5525: a2 = t2 | a3\n  5528: a1 = a0 | a4\n  5531: a1 = a1 | a2\n  5534: a1 = a1 >> 0x20\n  5537: a2 = a2 | a4\n  5540: a2 = a2 << 0x20\n  5543: a1 = a1 | a2\n  5546: jump @229 if a1 == 0\n      : @228 (gas: 1)\n  5549: jump @747\n      : @229 (gas: 16)\n  5552: a1 = s1 + 0x10d8\n  5556: t0 = u64 [a1 + 0x320]\n  5560: t1 = u64 [a1 + 0x318]\n  5564: a2 = u64 [a1 + 0x310]\n  5568: a5 = u64 [a1 + 0x308]\n  5572: u64 [s1 + 0xe0] = a5\n  5576: u64 [a1 + 0x2c8] = a5\n  5580: u64 [s1 + 0xe8] = a2\n  5584: u64 [a1 + 0x2d0] = a2\n  5588: u64 [s1 + 0xf0] = t1\n  5592: u64 [a1 + 0x2d8] = t1\n  5596: a2 = a1\n  5598: a1 = s1 + 0x13a0\n  5602: u64 [s1 + 0xf8] = t0\n  5606: u64 [a2 + 0x2e0] = t0\n  5610: ra = 254, jump @12\n      : @230 [@dyn 127] (gas: 30)\n  5616: a1 = u64 [s1 + 0xb8]\n  5620: a0 = a1 + 0x20\n  5623: u64 [s1 + 0xc8] = a0\n  5627: a0 = a0 <u a1\n  5630: a2 = u64 [s1 + 0xa0]\n  5634: a1 = a2 + a0\n  5637: u64 [s1 + 0xd0] = a1\n  5641: a1 = a1 <u a2\n  5644: a1 = a0 if a0 == 0\n  5647: a0 = u64 [s1 + 0xa8]\n  5651: a1 = a1 + a0\n  5654: u64 [s1 + 0xc0] = a1\n  5658: a0 = a1 <u a0\n  5661: a1 = u64 [s1 + 0xb0]\n  5665: a0 = a0 + a1\n  5668: u64 [s1 + 0xd8] = a0\n  5672: a0 = u64 [s1 + 0x140]\n  5676: a1 = s1 + 0x10d8\n  5680: a2 = a1 + 0x200\n  5684: u64 [a2 + 0xc0] = a0\n  5688: a0 = u64 [s1 + 0x148]\n  5692: u64 [a2 + 0xb8] = a0\n  5696: a0 = u64 [s1 + 0x150]\n  5700: u64 [a2 + 0xb0] = a0\n  5704: a2 = a1\n  5706: a1 = s1 + 0x1380\n  5710: a0 = u64 [s1 + 0x158]\n  5714: u64 [a2 + 0x2a8] = a0\n  5718: a0 = 0\n  5720: ra = 256, jump @12\n      : @231 [@dyn 128] (gas: 3)\n  5726: a1 = 0x20\n  5729: a0 = 0\n  5731: ra = 258, jump @0\n      : @232 [@dyn 129] (gas: 4)\n  5737: a1 = sp + 0xffffffffffffffe0\n  5740: a1 = a1 & 0xffffffffffffffe0\n  5743: u64 [s1 + 0x158] = a1\n  5747: t0 = 260, jump @1215\n      : @233 [@dyn 130] (gas: 27)\n  5754: ecalli 6 // 'hash_keccak_256'\n  5756: t0 = 0\n  5758: t1 = 0\n  5760: a5 = 0\n  5762: ra = 0\n  5764: a4 = s1 + 0x100\n  5768: a3 = u64 [a4 + 0x58]\n  5771: a0 = u64 [a3]\n  5773: a1 = u64 [a3 + 0x8]\n  5776: a2 = u64 [a3 + 0x10]\n  5779: a3 = u64 [a3 + 0x18]\n  5782: a0 = reverse a0\n  5784: u64 [a4 + 0x38] = a0\n  5787: t2 = reverse a1\n  5789: a0 = reverse a2\n  5791: u64 [a4 + 0x30] = a0\n  5794: a0 = reverse a3\n  5796: u64 [a4 + 0x28] = a0\n  5799: a0 = u64 [s1 + 0xc8]\n  5803: u64 [a4 + 0x58] = a0\n  5806: a0 = u64 [s1 + 0xd0]\n  5810: u64 [a4 + 0x50] = a0\n  5813: a0 = u64 [s1 + 0xc0]\n  5817: u64 [a4 + 0x48] = a0\n  5820: a0 = u64 [s1 + 0xd8]\n  5824: u64 [a4 + 0x40] = a0\n  5827: fallthrough\n      : @234 (gas: 16)\n  5828: a0 = u64 [s1 + 0xe0]\n  5832: a0 = t0 <u a0\n  5835: a2 = u64 [s1 + 0xe8]\n  5839: a1 = t1 ^ a2\n  5842: a2 = t1 <u a2\n  5845: a2 = a0 if a1 == 0\n  5848: a4 = u64 [s1 + 0xf0]\n  5852: a0 = a5 <u a4\n  5855: a3 = u64 [s1 + 0xf8]\n  5859: a1 = ra ^ a3\n  5862: a3 = ra <u a3\n  5865: a3 = a0 if a1 == 0\n  5868: a0 = a5 ^ a4\n  5871: a0 = a0 | a1\n  5874: a3 = a2 if a0 == 0\n  5877: jump @236 if a3 != 0\n      : @235 (gas: 1)\n  5880: jump @680\n      : @236 (gas: 17)\n  5883: u64 [s1 + 0x108] = a5\n  5887: u64 [s1 + 0x110] = ra\n  5891: u64 [s1 + 0x118] = t1\n  5895: u64 [s1 + 0x120] = t0\n  5899: a3 = s1 + 0x10d8\n  5903: a0 = u64 [s1 + 0x128]\n  5907: a4 = a3 + 0x100\n  5911: u64 [a4 + 0x68] = a0\n  5914: a0 = u64 [s1 + 0x130]\n  5918: u64 [a4 + 0x70] = a0\n  5921: u64 [s1 + 0x100] = t2\n  5925: u64 [a3 + 0x178] = t2\n  5929: a0 = s1 + 0x1260\n  5933: a1 = s1 + 0x1240\n  5937: a2 = u64 [s1 + 0x138]\n  5941: u64 [a4 + 0x80] = a2\n  5945: ra = 262, jump @14\n      : @237 [@dyn 131] (gas: 13)\n  5951: a4 = s1 + 0x100\n  5955: a0 = u64 [a4 + 0x58]\n  5958: a3 = u64 [a4 + 0x48]\n  5961: a2 = a0 | a3\n  5964: a1 = u64 [a4 + 0x40]\n  5967: a5 = u64 [a4 + 0x50]\n  5970: a1 = a1 | a5\n  5973: a2 = a2 | a1\n  5976: a2 = a2 >> 0x20\n  5979: a1 = a1 | a3\n  5982: a1 = a1 << 0x20\n  5985: a1 = a1 | a2\n  5988: jump @239 if a1 == 0\n      : @238 (gas: 1)\n  5991: jump @747\n      : @239 (gas: 14)\n  5994: a4 = s1 + 0x10d8\n  5998: t0 = u64 [a4 + 0x1a0]\n  6002: a1 = u64 [a4 + 0x198]\n  6006: a2 = u64 [a4 + 0x190]\n  6010: u64 [s1 + 0x148] = a3\n  6014: a3 = u64 [a4 + 0x188]\n  6018: u64 [a4 + 0x148] = a3\n  6022: u64 [a4 + 0x150] = a2\n  6026: u64 [a4 + 0x158] = a1\n  6030: a1 = s1 + 0x1220\n  6034: u64 [a4 + 0x160] = t0\n  6038: u64 [s1 + 0x158] = a0\n  6042: u64 [s1 + 0x150] = a5\n  6046: ra = 264, jump @12\n      : @240 [@dyn 132] (gas: 46)\n  6052: a0 = u64 [s1 + 0x158]\n  6056: t2 = a0 + 0x20\n  6059: a2 = t2 <u a0\n  6062: a0 = u64 [s1 + 0x150]\n  6066: a1 = a0 + a2\n  6069: a3 = a1 <u a0\n  6072: a3 = a2 if a2 == 0\n  6075: a0 = u64 [s1 + 0x148]\n  6079: a2 = a0 + a3\n  6082: a3 = a2 <u a0\n  6085: a0 = u64 [s1 + 0x140]\n  6089: a0 = a0 + a3\n  6092: u64 [s1 + 0x140] = a0\n  6096: a0 = u64 [s1 + 0x128]\n  6100: a0 = a0 + 0x1\n  6103: a3 = a0 <u 0x1\n  6106: a4 = u64 [s1 + 0x130]\n  6110: a4 = a4 + a3\n  6113: u64 [s1 + 0x130] = a4\n  6117: u64 [s1 + 0x128] = a0\n  6121: a3 = a0 | a4\n  6124: a3 = a3 <u 0x1\n  6127: a0 = u64 [s1 + 0x100]\n  6131: a3 = a3 + a0\n  6134: a4 = a3 <u a0\n  6137: a0 = u64 [s1 + 0x138]\n  6141: a0 = a0 + a4\n  6144: u64 [s1 + 0x138] = a0\n  6148: t0 = u64 [s1 + 0x120]\n  6152: t0 = t0 + 0x1\n  6155: a4 = t0 <u 0x1\n  6158: t1 = u64 [s1 + 0x118]\n  6162: t1 = t1 + a4\n  6165: a4 = t0 | t1\n  6168: a4 = a4 <u 0x1\n  6171: a0 = u64 [s1 + 0x108]\n  6175: a4 = a4 + a0\n  6178: a5 = a4 <u a0\n  6181: ra = u64 [s1 + 0x110]\n  6185: ra = ra + a5\n  6188: u64 [s1 + 0x158] = t2\n  6192: u64 [s1 + 0x150] = a1\n  6196: u64 [s1 + 0x148] = a2\n  6200: t2 = a3\n  6202: a5 = a4\n  6204: jump @234\n      : @241 (gas: 1)\n  6207: t0 = 266, jump @1201\n      : @242 [@dyn 133] (gas: 4)\n  6213: ra = 0x10c\n  6217: ecalli 11 // 'value_transferred'\n  6219: t0 = 0x10e\n  6223: jump @1204\n      : @243 [@dyn 134] (gas: 1)\n  6226: t0 = 270, jump @1204\n      : @244 [@dyn 135] (gas: 1)\n  6232: jump @246 if a0 == 0\n      : @245 (gas: 1)\n  6235: jump @945\n      : @246 (gas: 4)\n  6238: a0 = u64 [s1 + 0x158]\n  6242: a0 = i32 [a0]\n  6244: a2 = s1 + 0x28d8\n  6248: jump @248 if a0 >u 3\n      : @247 (gas: 1)\n  6252: jump @945\n      : @248 (gas: 7)\n  6255: u64 [a2 + 1600] = 0\n  6259: u64 [a2 + 1592] = 0\n  6263: u64 [a2 + 1584] = 0\n  6267: a0 = s1 + 0x2f20\n  6271: a1 = s1 + 0x2f00\n  6275: u64 [a2 + 1576] = 0\n  6279: ra = 272, jump @14\n      : @249 [@dyn 136] (gas: 13)\n  6285: a0 = s1 + 0x28d8\n  6289: a0 = u64 [a0 + 0x658]\n  6293: a1 = s1 + 0x100\n  6297: u64 [a1 + 0x48] = a0\n  6300: a0 = s1 + 0x28d8\n  6304: a0 = u64 [a0 + 0x650]\n  6308: u64 [a1 + 0x58] = a0\n  6311: a0 = s1 + 0x28d8\n  6315: a0 = u64 [a0 + 0x648]\n  6319: u64 [a1 + 0x50] = a0\n  6322: a0 = s1 + 0x2ee0\n  6326: a1 = 0x40\n  6329: ra = 274, jump @10\n      : @250 [@dyn 137] (gas: 7)\n  6335: a3 = s1 + 0x28d8\n  6339: a5 = a3 + 0x600\n  6343: a4 = u64 [a5 + 0x20]\n  6346: a1 = u64 [a5 + 0x18]\n  6349: a2 = u64 [a5 + 0x10]\n  6352: a0 = u64 [a5 + 0x8]\n  6355: t0 = 276, jump @1242\n      : @251 [@dyn 138] (gas: 1)\n  6362: jump @253 if a1 == 0\n      : @252 (gas: 1)\n  6365: jump @747\n      : @253 (gas: 15)\n  6368: a4 = s1 + 0x100\n  6372: a1 = u64 [a4 + 0x48]\n  6375: a1 = a1 << 0x20\n  6378: a2 = a1 >> 0x20\n  6381: u64 [a3 + 1536] = 0\n  6385: a1 = u64 [a4 + 0x50]\n  6388: a5 = a3 + 0x500\n  6392: u64 [a5 + 0xe8] = a1\n  6396: a1 = u64 [a4 + 0x58]\n  6399: u64 [a5 + 0xf0] = a1\n  6403: a1 = s1 + 0x2ec0\n  6407: u64 [a5 + 0xf8] = a2\n  6411: u64 [s1 + 0x158] = a0\n  6415: ra = 0x316\n  6419: jump @12\n      : @254 (gas: 1)\n  6422: t0 = 278, jump @1201\n      : @255 [@dyn 139] (gas: 4)\n  6428: ra = 0x118\n  6432: ecalli 11 // 'value_transferred'\n  6434: t0 = 0x11a\n  6438: jump @1204\n      : @256 [@dyn 140] (gas: 1)\n  6441: t0 = 282, jump @1204\n      : @257 [@dyn 141] (gas: 1)\n  6447: jump @259 if a0 == 0\n      : @258 (gas: 1)\n  6450: jump @945\n      : @259 (gas: 3)\n  6453: a0 = u64 [s1 + 0x158]\n  6457: a0 = i32 [a0]\n  6459: jump @261 if a0 >u 131\n      : @260 (gas: 1)\n  6464: jump @945\n      : @261 (gas: 33)\n  6467: a0 = s1 + 0x4000\n  6471: i32 a0 = a0 + 0xfffffffffffff9e0\n  6475: a1 = 0x4\n  6478: ecalli 1 // 'call_data_load'\n  6480: a1 = s1 + 0x38d8\n  6484: a2 = a1 + 0x100\n  6488: a0 = u64 [a2 + 0x20]\n  6491: u64 [s1 + 0x78] = a0\n  6494: a0 = u64 [a2 + 0x18]\n  6497: u64 [s1 + 0x80] = a0\n  6501: a0 = u64 [a2 + 0x10]\n  6504: u64 [s1 + 0x88] = a0\n  6508: a0 = u64 [a2 + 0x8]\n  6511: u64 [s1 + 0x90] = a0\n  6515: a0 = s1 + 0x4000\n  6519: i32 a0 = a0 + 0xfffffffffffffa00\n  6523: a1 = 0x24\n  6526: ecalli 1 // 'call_data_load'\n  6528: a1 = s1 + 0x38d8\n  6532: a2 = a1 + 0x100\n  6536: a0 = u64 [a2 + 0x40]\n  6539: u64 [s1 + 0xb0] = a0\n  6543: a0 = u64 [a2 + 0x38]\n  6546: u64 [s1 + 0xa8] = a0\n  6550: a0 = u64 [a2 + 0x30]\n  6553: u64 [s1 + 0xa0] = a0\n  6557: a0 = u64 [a2 + 0x28]\n  6560: u64 [s1 + 0x98] = a0\n  6564: a0 = s1 + 0x4000\n  6568: i32 a0 = a0 + 0xfffffffffffffa20\n  6572: a1 = 0x44\n  6575: ecalli 1 // 'call_data_load'\n  6577: fallthrough\n      : @262 (gas: 9)\n  6578: a5 = s1 + 0x38d8\n  6582: a3 = a5 + 0x100\n  6586: a0 = u64 [a3 + 0x60]\n  6589: a1 = u64 [a3 + 0x58]\n  6592: a2 = u64 [a3 + 0x50]\n  6595: a3 = a1 | a0\n  6598: a4 = a2 <u 0x1\n  6601: a4 = 0 if a3 != 0\n  6603: jump @264 if a4 != 0\n      : @263 (gas: 1)\n  6606: jump @945\n      : @264 (gas: 25)\n  6609: a3 = u64 [a5 + 0x148]\n  6613: a4 = u64 [s1 + 0x158]\n  6617: t0 = u32 [a4]\n  6619: a5 = a3 + 0x4\n  6622: a3 = a5 <u a3\n  6625: a4 = a2 + a3\n  6628: a2 = a4 <u a2\n  6631: a2 = a3 if a3 == 0\n  6634: a2 = a2 + a1\n  6637: a1 = a2 <u a1\n  6640: a3 = a0 + a1\n  6643: a0 = s1 + 0x10d8\n  6647: u64 [a0 + 32] = 0\n  6650: u64 [a0 + 24] = 0\n  6653: u64 [a0 + 16] = 0\n  6656: u64 [a0 + 0x8] = t0\n  6659: u64 [a0 + 0x28] = a5\n  6662: u64 [a0 + 0x30] = a4\n  6665: u64 [a0 + 0x38] = a2\n  6668: a4 = a0\n  6670: a0 = s1 + 0x1120\n  6674: a1 = s1 + 0x1100\n  6678: a2 = s1 + 0x10e0\n  6682: u64 [a4 + 0x40] = a3\n  6685: ra = 284, jump @1031\n      : @265 [@dyn 142] (gas: 23)\n  6691: a1 = s1 + 0x10d8\n  6695: a0 = u64 [a1 + 0x60]\n  6698: a2 = s1 + 0x100\n  6702: u64 [a2 + 0x18] = a0\n  6705: a0 = u64 [a1 + 0x58]\n  6708: u64 [a2 + 0x20] = a0\n  6711: a0 = u64 [a1 + 0x50]\n  6714: u64 [a2 + 0x10] = a0\n  6717: a0 = u64 [a1 + 0x48]\n  6720: u64 [a2 + 0x28] = a0\n  6723: a0 = u64 [a1 + 0x80]\n  6727: u64 [a2 + 0x38] = a0\n  6730: a0 = u64 [a1 + 0x78]\n  6733: u64 [a2 + 0x30] = a0\n  6736: a0 = u64 [a1 + 0x70]\n  6739: u64 [a2 + 0x48] = a0\n  6742: a0 = u64 [a1 + 0x68]\n  6745: u64 [a2 + 0x40] = a0\n  6748: a0 = s1 + 0x4000\n  6752: i32 a0 = a0 + 0xfffffffffffffa40\n  6756: a1 = 0x64\n  6759: ecalli 1 // 'call_data_load'\n  6761: fallthrough\n      : @266 (gas: 9)\n  6762: a5 = s1 + 0x38d8\n  6766: a3 = a5 + 0x100\n  6770: a0 = u64 [a3 + 0x80]\n  6774: a1 = u64 [a3 + 0x78]\n  6777: a2 = u64 [a3 + 0x70]\n  6780: a3 = a1 | a0\n  6783: a4 = a2 <u 0x1\n  6786: a4 = 0 if a3 != 0\n  6788: jump @268 if a4 != 0\n      : @267 (gas: 1)\n  6791: jump @945\n      : @268 (gas: 26)\n  6794: a3 = u64 [a5 + 0x168]\n  6798: t1 = s1 + 0x7ff\n  6802: t1 = t1 + 0xd1\n  6806: a4 = u64 [s1 + 0x158]\n  6810: t0 = u32 [a4]\n  6812: a5 = a3 + 0x4\n  6815: a3 = a5 <u a3\n  6818: a4 = a2 + a3\n  6821: a2 = a4 <u a2\n  6824: a2 = a3 if a3 == 0\n  6827: a2 = a2 + a1\n  6830: a1 = a2 <u a1\n  6833: a3 = a0 + a1\n  6836: u64 [t1 + 1960] = 0\n  6840: u64 [t1 + 1952] = 0\n  6844: u64 [t1 + 1944] = 0\n  6848: u64 [t1 + 0x790] = t0\n  6852: u64 [t1 + 0x7b0] = a5\n  6856: a5 = t1 + 0x700\n  6860: u64 [a5 + 0xb8] = a4\n  6864: u64 [a5 + 0xc0] = a2\n  6868: a0 = s1 + 0x10a0\n  6872: a1 = s1 + 0x1080\n  6876: a2 = s1 + 0x1060\n  6880: u64 [a5 + 0xc8] = a3\n  6884: ra = 286, jump @1031\n      : @269 [@dyn 143] (gas: 26)\n  6890: a1 = s1 + 0x7ff\n  6894: a1 = a1 + 0xd1\n  6898: a2 = a1 + 0x700\n  6902: a0 = u64 [a2 + 0xe8]\n  6906: u64 [s1 + 0xb8] = a0\n  6910: a0 = u64 [a2 + 0xe0]\n  6914: u64 [s1 + 0xc8] = a0\n  6918: a0 = u64 [a2 + 0xd8]\n  6922: u64 [s1 + 0xc0] = a0\n  6926: a0 = u64 [a2 + 0xd0]\n  6930: u64 [s1 + 0xd0] = a0\n  6934: a1 = s1 + 0x10d8\n  6938: a0 = u64 [a1]\n  6940: u64 [s1 + 0x60] = a0\n  6943: a2 = a1 + 0xffffffffffffff00\n  6947: a0 = u64 [a2 + 0xf8]\n  6951: u64 [s1 + 0x58] = a0\n  6954: a0 = u64 [a2 + 0xf0]\n  6958: u64 [s1 + 0x68] = a0\n  6961: a0 = u64 [a2 + 0xe8]\n  6965: u64 [s1 + 0x70] = a0\n  6968: a0 = s1 + 0x4000\n  6972: i32 a0 = a0 + 0xfffffffffffffa60\n  6976: ra = 0x120\n  6980: ecalli 3 // 'caller'\n  6982: fallthrough\n      : @270 [@dyn 144] (gas: 5)\n  6983: a2 = s1 + 0x38d8\n  6987: a0 = u64 [a2 + 0x190]\n  6991: a1 = i32 [a2 + 0x198]\n  6995: a2 = u64 [a2 + 0x188]\n  6999: t0 = 290, jump @1227\n      : @271 [@dyn 145] (gas: 10)\n  7005: a2 = s1 + 0x7ff\n  7009: a2 = a2 + 0xd1\n  7013: u64 [a2 + 1928] = 0\n  7017: a4 = a2 + 0x700\n  7021: u64 [a4 + 0x80] = a1\n  7025: u64 [a4 + 0x78] = a0\n  7028: a1 = s1 + 0x1040\n  7032: u64 [a4 + 0x70] = a3\n  7035: a0 = 0\n  7037: ra = 292, jump @12\n      : @272 [@dyn 146] (gas: 9)\n  7043: a2 = s1 + 0x7ff\n  7047: a2 = a2 + 0xd1\n  7051: u64 [a2 + 1896] = 0\n  7055: u64 [a2 + 1888] = 0\n  7059: u64 [a2 + 1872] = 0x1\n  7064: a0 = 0x20\n  7067: a1 = s1 + 0x1020\n  7071: u64 [a2 + 1880] = 0\n  7075: ra = 294, jump @12\n      : @273 [@dyn 147] (gas: 3)\n  7081: a1 = 0x40\n  7084: a0 = 0\n  7086: ra = 296, jump @0\n      : @274 [@dyn 148] (gas: 12)\n  7092: a1 = sp + 0xffffffffffffffe0\n  7095: a1 = a1 & 0xffffffffffffffe0\n  7098: u64 [s1 + 0x150] = a1\n  7102: sp = a1\n  7104: i32 a0 = a0 + 0\n  7106: i32 a2 = a1 + 0\n  7108: a1 = 0x40\n  7111: ra = 0x12a\n  7115: ecalli 6 // 'hash_keccak_256'\n  7117: a3 = u64 [s1 + 0x150]\n  7121: t0 = 0x12c\n  7125: jump @1216\n      : @275 [@dyn 149] (gas: 2)\n  7128: a3 = u64 [s1 + 0x150]\n  7132: t0 = 300, jump @1216\n      : @276 [@dyn 150] (gas: 17)\n  7138: a3 = s1 + 0x7ff\n  7142: a3 = a3 + 0xd1\n  7146: u64 [a3 + 1800] = 0\n  7150: u64 [a3 + 1792] = 0\n  7154: u64 [a3 + 1784] = 0\n  7158: u64 [a3 + 1776] = 0x80\n  7164: a5 = a3 + 0x700\n  7168: u64 [a5 + 0x28] = a2\n  7171: u64 [a5 + 0x20] = a1\n  7174: u64 [a5 + 0x18] = a0\n  7177: a0 = s1 + 0x1000\n  7181: a1 = s1 + 0x7ff\n  7185: a1 = a1 + 0x7e1\n  7189: a2 = s1 + 0x7ff\n  7193: a2 = a2 + 0x7c1\n  7197: u64 [a5 + 0x10] = a4\n  7200: ra = 302, jump @1084\n      : @277 [@dyn 151] (gas: 34)\n  7206: t1 = s1 + 0x7ff\n  7210: t1 = t1 + 0xd1\n  7214: a1 = t1 + 0x700\n  7218: a0 = u64 [a1 + 0x30]\n  7221: t0 = u64 [t1 + 0x748]\n  7225: a2 = u64 [a1 + 0x38]\n  7228: a3 = u64 [a1 + 0x40]\n  7231: a4 = a0 + 0xffffffffffffff80\n  7234: a0 = a4 <u a0\n  7237: a5 = a2 + a0\n  7240: a5 = a5 + 0xffffffffffffffff\n  7243: a1 = a5 ^ a2\n  7246: a2 = a5 <u a2\n  7249: a2 = a0 if a1 == 0\n  7252: a0 = a3 + 0xffffffffffffffff\n  7255: a2 = a2 + a0\n  7258: a0 = a2 <u a0\n  7261: a1 = a3 <u 0x1\n  7264: a1 = t0 - a1\n  7267: a3 = a1 + a0\n  7270: u64 [t1 + 0x6b0] = a4\n  7274: u64 [t1 + 1768] = 0\n  7278: u64 [t1 + 1760] = 0\n  7282: u64 [t1 + 1752] = 0\n  7286: a4 = t1 + 0x600\n  7290: u64 [a4 + 208] = 0x80\n  7296: u64 [a4 + 0xb8] = a5\n  7300: u64 [a4 + 0xc0] = a2\n  7304: a0 = s1 + 0x7ff\n  7308: a0 = a0 + 0x7a1\n  7312: a1 = s1 + 0x7ff\n  7316: a1 = a1 + 0x781\n  7320: u64 [a4 + 0xc8] = a3\n  7324: ra = 304, jump @1126\n      : @278 [@dyn 152] (gas: 4)\n  7330: a0 = s1 + 0x7ff\n  7334: a0 = a0 + 0x761\n  7338: a1 = 0x80\n  7342: ra = 306, jump @10\n      : @279 [@dyn 153] (gas: 15)\n  7348: a0 = s1 + 0x7ff\n  7352: a0 = a0 + 0xd1\n  7356: a4 = a0 + 0x600\n  7360: a1 = u64 [a4 + 0xa8]\n  7364: a2 = u64 [a4 + 0xa0]\n  7368: a3 = u64 [a4 + 0x98]\n  7372: a0 = u64 [a4 + 0x90]\n  7376: a1 = a1 | a3\n  7379: a3 = a0 | a2\n  7382: a3 = a3 | a1\n  7385: a3 = a3 >> 0x20\n  7388: a1 = a1 | a2\n  7391: a1 = a1 << 0x20\n  7394: a1 = a1 | a3\n  7397: jump @281 if a1 == 0\n      : @280 (gas: 1)\n  7400: jump @747\n      : @281 (gas: 4)\n  7403: i32 a1 = a0 + 0\n  7405: u64 [s1 + 0x150] = a1\n  7409: a0 = 0xa0\n  7413: ra = 308, jump @0\n      : @282 [@dyn 154] (gas: 29)\n  7419: a1 = sp + 0xffffffffffffffe0\n  7422: a1 = a1 & 0xffffffffffffffe0\n  7425: u64 [s1 + 0x108] = a1\n  7429: sp = a1\n  7431: i32 a0 = a0 + 0\n  7433: i32 a2 = a1 + 0\n  7435: a1 = u64 [s1 + 0x150]\n  7439: ecalli 6 // 'hash_keccak_256'\n  7441: a2 = u64 [s1 + 0x108]\n  7445: a0 = u64 [a2 + 0x18]\n  7448: a1 = u64 [0x200a0]\n  7453: t0 = u64 [a2]\n  7455: a3 = u64 [a2 + 0x10]\n  7458: a4 = u64 [a2 + 0x8]\n  7461: a0 = a0 ^ a1\n  7464: a1 = u64 [0x200a8]\n  7469: a5 = u64 [0x200b0]\n  7474: a2 = u64 [0x200b8]\n  7479: a1 = a1 ^ a4\n  7482: a0 = a0 | a1\n  7485: a3 = a3 ^ a5\n  7488: a1 = t0 ^ a2\n  7491: a1 = a1 | a3\n  7494: a0 = a0 | a1\n  7497: u64 [s1 + 0x150] = a0\n  7501: a0 = s1 + 0x7ff\n  7505: a0 = a0 + 0x741\n  7509: a1 = 0x40\n  7512: ra = 310, jump @10\n      : @283 [@dyn 155] (gas: 13)\n  7518: a2 = s1 + 0x7ff\n  7522: a2 = a2 + 0xd1\n  7526: a5 = a2 + 0x600\n  7530: a0 = u64 [a5 + 0x88]\n  7534: a1 = u64 [a5 + 0x80]\n  7538: a3 = u64 [a5 + 0x70]\n  7541: a4 = u64 [a5 + 0x78]\n  7544: t1 = a3 | a1\n  7547: a5 = a4 | a0\n  7550: t0 = a1 | a0\n  7553: t2 = a2\n  7555: a2 = u64 [s1 + 0x150]\n  7559: jump @285 if a2 == 0\n      : @284 (gas: 1)\n  7562: jump @695\n      : @285 (gas: 16)\n  7565: u64 [s1 + 0x100] = t0\n  7569: a2 = t2 + 0x500\n  7573: u64 [a2 + 0xd0] = a3\n  7577: u64 [a2 + 0xd8] = a4\n  7581: u64 [a2 + 0xe8] = a0\n  7585: a0 = s1 + 0x7ff\n  7589: a0 = a0 + 0x6a1\n  7593: u64 [a2 + 0xe0] = a1\n  7597: u64 [s1 + 0x108] = a3\n  7601: u64 [s1 + 0xf8] = a4\n  7605: u64 [s1 + 0x150] = a1\n  7609: u64 [s1 + 0xe8] = a5\n  7613: u64 [s1 + 0xf0] = t1\n  7617: ra = 0x138\n  7621: t0 = 0x546\n  7625: jump @1237\n      : @286 [@dyn 156] (gas: 9)\n  7628: a2 = u64 [s1 + 0xe8]\n  7632: a0 = u64 [s1 + 0xf0]\n  7636: a0 = a0 | a2\n  7639: a0 = a0 >> 0x20\n  7642: a1 = u64 [s1 + 0x150]\n  7646: a1 = a1 | a2\n  7649: a1 = a1 << 0x20\n  7652: a0 = a0 | a1\n  7655: jump @288 if a0 == 0\n      : @287 (gas: 1)\n  7658: jump @747\n      : @288 (gas: 15)\n  7661: a0 = u64 [s1 + 0x98]\n  7665: a2 = s1 + 0x7ff\n  7669: a2 = a2 + 0xd1\n  7673: a3 = a2 + 0x500\n  7677: u64 [a3 + 0xb0] = a0\n  7681: a0 = u64 [s1 + 0xa0]\n  7685: u64 [a3 + 0xb8] = a0\n  7689: a0 = u64 [s1 + 0xa8]\n  7693: u64 [a3 + 0xc0] = a0\n  7697: a1 = s1 + 0x7ff\n  7701: a1 = a1 + 0x681\n  7705: a0 = u64 [s1 + 0xb0]\n  7709: u64 [a3 + 0xc8] = a0\n  7713: a0 = u64 [s1 + 0x108]\n  7717: ra = 314, jump @12\n      : @289 [@dyn 157] (gas: 4)\n  7723: a0 = s1 + 0x4000\n  7727: i32 a0 = a0 + 0xfffffffffffffa80\n  7731: ecalli 3 // 'caller'\n  7733: fallthrough\n      : @290 (gas: 9)\n  7734: a2 = 0x100000000\n  7744: a0 = 0xffffffe0\n  7754: a4 = u64 [s1 + 0x108]\n  7758: a0 = a4 <u a0\n  7761: a1 = u64 [s1 + 0xf8]\n  7765: a0 = 0 if a1 != 0\n  7767: a1 = u64 [s1 + 0x100]\n  7771: a0 = 0 if a1 != 0\n  7773: jump @292 if a0 != 0\n      : @291 (gas: 1)\n  7776: jump @747\n      : @292 (gas: 27)\n  7779: a0 = s1 + 0x38d8\n  7783: u64 [s1 + 0x150] = a2\n  7787: a2 = a0\n  7789: a0 = u64 [a0 + 0x1b0]\n  7793: a1 = i32 [a2 + 0x1b8]\n  7797: a2 = u64 [a2 + 0x1a8]\n  7801: a0 = reverse a0\n  7803: a3 = a0 << 0x20\n  7806: a1 = reverse a1\n  7808: a1 = a1 >> 0x20\n  7811: t0 = a1 | a3\n  7814: a0 = a0 >> 0x20\n  7817: a1 = reverse a2\n  7819: a2 = a1 << 0x20\n  7822: a2 = a2 | a0\n  7825: a1 = a1 >> 0x20\n  7828: i32 a0 = a4 + 0x20\n  7831: a3 = s1 + 0x7ff\n  7835: a3 = a3 + 0xd1\n  7839: u64 [a3 + 1448] = 0\n  7843: u64 [a3 + 0x5a0] = a1\n  7847: u64 [a3 + 0x598] = a2\n  7851: a1 = s1 + 0x7ff\n  7855: a1 = a1 + 0x661\n  7859: u64 [a3 + 0x590] = t0\n  7863: u64 [s1 + 0xd8] = a0\n  7867: ra = 316, jump @12\n      : @293 [@dyn 158] (gas: 4)\n  7873: a0 = s1 + 0x4000\n  7877: i32 a0 = a0 + 0xfffffffffffffaa0\n  7881: ecalli 7 // 'now'\n  7883: fallthrough\n      : @294 (gas: 10)\n  7884: a2 = s1 + 0x100\n  7888: a4 = u64 [a2 + 0x8]\n  7891: a0 = u64 [a2 + 0x50]\n  7894: a0 = a0 + 0xffffffffffffffc0\n  7897: a0 = a4 <u a0\n  7900: a1 = u64 [s1 + 0xf8]\n  7904: a0 = 0 if a1 != 0\n  7906: a1 = u64 [a2]\n  7908: a0 = 0 if a1 != 0\n  7910: jump @296 if a0 != 0\n      : @295 (gas: 1)\n  7913: jump @747\n      : @296 (gas: 17)\n  7916: a0 = s1 + 0x38d8\n  7920: a5 = u64 [a0 + 0x1c8]\n  7924: a1 = u64 [a0 + 0x1d0]\n  7928: a2 = u64 [a0 + 0x1d8]\n  7932: a3 = u64 [a0 + 0x1e0]\n  7936: i32 a0 = a4 + 0x40\n  7939: a4 = s1 + 0x7ff\n  7943: a4 = a4 + 0xd1\n  7947: u64 [a4 + 0x588] = a3\n  7951: a3 = a4 + 0x500\n  7955: u64 [a3 + 0x80] = a2\n  7959: u64 [a3 + 0x78] = a1\n  7962: a1 = s1 + 0x7ff\n  7966: a1 = a1 + 0x641\n  7970: u64 [a3 + 0x70] = a5\n  7973: u64 [s1 + 0x38] = a0\n  7976: ra = 318, jump @12\n      : @297 [@dyn 159] (gas: 8)\n  7982: a3 = s1 + 0x100\n  7986: a0 = u64 [a3 + 0x38]\n  7989: a1 = u64 [a3 + 0x30]\n  7992: a0 = a0 | a1\n  7995: a2 = u64 [a3 + 0x48]\n  7998: a1 = a2 <u 0x1\n  8001: a1 = 0 if a0 != 0\n  8003: jump @299 if a1 != 0\n      : @298 (gas: 1)\n  8006: jump @1006\n      : @299 (gas: 18)\n  8009: a1 = u64 [s1 + 0x140]\n  8013: a0 = a1 + 0x1f\n  8016: a1 = a0 <u a1\n  8019: a1 = a1 + a2\n  8022: a1 = a1 & 0x1\n  8025: a0 = a0 & 0xffffffffffffffe0\n  8028: a3 = a0 + 0x20\n  8031: u64 [s1 + 0x40] = a3\n  8034: a0 = a3 <u a0\n  8037: a3 = a1 + a0\n  8040: u64 [s1 + 0x48] = a3\n  8043: a1 = a3 <u a1\n  8046: a1 = a0 if a0 == 0\n  8049: u64 [s1 + 0x50] = a1\n  8052: a0 = s1 + 0x7ff\n  8056: a0 = a0 + 0x621\n  8060: a1 = 0x40\n  8063: ra = 320, jump @10\n      : @300 [@dyn 160] (gas: 27)\n  8069: a2 = s1 + 0x7ff\n  8073: a2 = a2 + 0xd1\n  8077: a0 = u64 [a2 + 0x568]\n  8081: u64 [s1 + 0x150] = a0\n  8085: a3 = u64 [a2 + 0x560]\n  8089: u64 [s1 + 0xf0] = a3\n  8093: a4 = u64 [a2 + 0x558]\n  8097: u64 [s1 + 0xe8] = a4\n  8101: a5 = u64 [a2 + 0x550]\n  8105: u64 [s1 + 0xe0] = a5\n  8109: u64 [a2 + 1320] = 0\n  8113: a1 = u64 [s1 + 0x40]\n  8116: u64 [a2 + 0x510] = a1\n  8120: u64 [a2 + 0x548] = a0\n  8124: u64 [a2 + 0x540] = a3\n  8128: u64 [a2 + 0x538] = a4\n  8132: a4 = a2 + 0x500\n  8136: u64 [a4 + 0x30] = a5\n  8139: a0 = u64 [s1 + 0x48]\n  8142: u64 [a4 + 0x18] = a0\n  8145: a0 = s1 + 0x7ff\n  8149: a0 = a0 + 0x601\n  8153: a1 = s1 + 0x7ff\n  8157: a1 = a1 + 0x5e1\n  8161: a3 = u64 [s1 + 0x50]\n  8164: u64 [a4 + 0x20] = a3\n  8167: ra = 322, jump @1126\n      : @301 [@dyn 161] (gas: 12)\n  8173: a0 = u64 [s1 + 0xe0]\n  8177: a1 = u64 [s1 + 0xe8]\n  8181: a2 = u64 [s1 + 0xf0]\n  8185: a5 = u64 [s1 + 0x150]\n  8189: a5 = a5 | a1\n  8192: a1 = a0 | a2\n  8195: a1 = a1 | a5\n  8198: a1 = a1 >> 0x20\n  8201: a5 = a5 | a2\n  8204: a5 = a5 << 0x20\n  8207: a1 = a1 | a5\n  8210: jump @303 if a1 == 0\n      : @302 (gas: 1)\n  8213: jump @747\n      : @303 (gas: 13)\n  8216: a2 = s1 + 0x7ff\n  8220: a2 = a2 + 0xd1\n  8224: a1 = u64 [s1 + 0x140]\n  8228: u64 [a2 + 0x4f0] = a1\n  8232: a1 = u64 [s1 + 0x148]\n  8236: u64 [a2 + 0x4f8] = a1\n  8240: a1 = u64 [s1 + 0x130]\n  8244: u64 [a2 + 0x500] = a1\n  8248: a1 = s1 + 0x7ff\n  8252: a1 = a1 + 0x5c1\n  8256: a3 = u64 [s1 + 0x138]\n  8260: u64 [a2 + 0x508] = a3\n  8264: ra = 324, jump @12\n      : @304 [@dyn 162] (gas: 36)\n  8270: t0 = u64 [s1 + 0x128]\n  8274: a1 = u64 [s1 + 0x140]\n  8278: a1 = a1 + t0\n  8281: a2 = a1 <u t0\n  8284: ra = u64 [s1 + 0x110]\n  8288: a0 = u64 [s1 + 0x148]\n  8292: a0 = a0 + ra\n  8295: a0 = a0 + a2\n  8298: a3 = a0 ^ ra\n  8301: a4 = a0 <u ra\n  8304: a4 = a2 if a3 == 0\n  8307: t1 = u64 [s1 + 0x120]\n  8311: a2 = u64 [s1 + 0x130]\n  8315: a2 = a2 + t1\n  8318: a3 = a2 <u t1\n  8321: t2 = u64 [s1 + 0x118]\n  8325: a5 = u64 [s1 + 0x138]\n  8329: a5 = a5 + t2\n  8332: a3 = a3 + a5\n  8335: a5 = u64 [s1 + 0x158]\n  8339: a5 = u32 [a5]\n  8341: a4 = a4 + a2\n  8344: a2 = a4 <u a2\n  8347: a2 = a2 + a3\n  8350: a1 = a5 <u a1\n  8353: a3 = a0 <u 0x1\n  8356: a1 = a1 ^ 0x1\n  8359: a1 = a3 if a0 != 0\n  8362: a0 = a4 <u 0x1\n  8365: a3 = a2 <u 0x1\n  8368: a3 = a0 if a2 == 0\n  8371: a2 = a2 | a4\n  8374: a1 = a3 if a2 != 0\n  8377: a3 = u64 [s1 + 0x148]\n  8381: a4 = u64 [s1 + 0x140]\n  8385: jump @306 if a1 != 0\n      : @305 (gas: 1)\n  8388: jump @1009\n      : @306 (gas: 8)\n  8391: a0 = t0 | t1\n  8394: a1 = ra | t2\n  8397: a0 = a0 | a1\n  8400: a0 = a0 >> 0x20\n  8403: a1 = a1 | t1\n  8406: a1 = a1 << 0x20\n  8409: a0 = a0 | a1\n  8412: jump @308 if a0 == 0\n      : @307 (gas: 1)\n  8415: jump @747\n      : @308 (gas: 10)\n  8418: a2 = u64 [s1 + 0x130]\n  8422: a0 = a4 | a2\n  8425: a1 = u64 [s1 + 0x138]\n  8429: a1 = a1 | a3\n  8432: a0 = a0 | a1\n  8435: a0 = a0 >> 0x20\n  8438: a1 = a1 | a2\n  8441: a1 = a1 << 0x20\n  8444: a0 = a0 | a1\n  8447: jump @310 if a0 == 0\n      : @309 (gas: 1)\n  8450: jump @747\n      : @310 (gas: 10)\n  8453: t1 = u64 [s1 + 0x150]\n  8457: t2 = u64 [s1 + 0xf0]\n  8461: a0 = t2 | t1\n  8464: ra = 0xffffffe0\n  8474: a5 = u64 [s1 + 0xe0]\n  8478: a1 = a5 <u ra\n  8481: a2 = u64 [s1 + 0xe8]\n  8485: a1 = 0 if a2 != 0\n  8487: a1 = 0 if a0 != 0\n  8489: jump @312 if a1 != 0\n      : @311 (gas: 1)\n  8492: jump @747\n      : @312 (gas: 7)\n  8495: i32 t0 = t0 + 0\n  8497: u64 [s1 + 0x128] = t0\n  8501: i32 a0 = a5 + 0x20\n  8504: i32 a1 = a4 + 0\n  8506: u64 [s1 + 0x120] = a1\n  8510: u64 [s1 + 0x158] = ra\n  8514: ra = 326, jump @0\n      : @313 [@dyn 163] (gas: 5)\n  8520: i32 a0 = a0 + 0\n  8522: a1 = u64 [s1 + 0x120]\n  8526: a2 = u64 [s1 + 0x128]\n  8530: ecalli 0 // 'call_data_copy'\n  8531: fallthrough\n      : @314 (gas: 28)\n  8532: t0 = u64 [s1 + 0x140]\n  8536: a0 = u64 [s1 + 0xe0]\n  8540: t0 = t0 + a0\n  8543: a1 = t0 <u a0\n  8546: a0 = u64 [s1 + 0xe8]\n  8550: a2 = u64 [s1 + 0x148]\n  8554: a2 = a2 + a0\n  8557: a2 = a2 + a1\n  8560: a3 = a2 ^ a0\n  8563: a4 = a2 <u a0\n  8566: a4 = a1 if a3 == 0\n  8569: a1 = u64 [s1 + 0x130]\n  8573: a0 = u64 [s1 + 0xf0]\n  8577: a1 = a1 + a0\n  8580: a3 = a1 <u a0\n  8583: a5 = u64 [s1 + 0x138]\n  8587: a0 = u64 [s1 + 0x150]\n  8591: a5 = a5 + a0\n  8594: a3 = a3 + a5\n  8597: a4 = a4 + a1\n  8600: a1 = a4 <u a1\n  8603: a1 = a1 + a3\n  8606: a1 = a1 | a4\n  8609: a3 = u64 [s1 + 0x158]\n  8613: a3 = t0 <u a3\n  8616: a3 = 0 if a2 != 0\n  8618: a3 = 0 if a1 != 0\n  8620: jump @316 if a3 != 0\n      : @315 (gas: 1)\n  8623: jump @747\n      : @316 (gas: 10)\n  8626: i32 a0 = t0 + 0x20\n  8629: a2 = s1 + 0x7ff\n  8633: a2 = a2 + 0xd1\n  8637: u64 [a2 + 1256] = 0\n  8641: u64 [a2 + 1248] = 0\n  8645: u64 [a2 + 1240] = 0\n  8649: a1 = s1 + 0x7ff\n  8653: a1 = a1 + 0x5a1\n  8657: u64 [a2 + 1232] = 0\n  8661: ra = 328, jump @12\n      : @317 [@dyn 164] (gas: 2)\n  8667: a0 = 0xffffffa0\n  8677: t0 = 330, jump @1245\n      : @318 [@dyn 165] (gas: 1)\n  8683: jump @320 if a0 != 0\n      : @319 (gas: 1)\n  8686: jump @747\n      : @320 (gas: 18)\n  8689: a0 = u64 [s1 + 0x108]\n  8693: i32 a2 = a0 + 0x60\n  8696: a3 = s1 + 0x7ff\n  8700: a3 = a3 + 0xd1\n  8704: a0 = u64 [s1 + 0xe0]\n  8708: a4 = a3 + 0x400\n  8712: u64 [a4 + 0xb0] = a0\n  8716: a0 = u64 [s1 + 0xe8]\n  8720: u64 [a4 + 0xb8] = a0\n  8724: a0 = u64 [s1 + 0xf0]\n  8728: u64 [a4 + 0xc0] = a0\n  8732: a1 = s1 + 0x7ff\n  8736: a1 = a1 + 0x581\n  8740: a0 = u64 [s1 + 0x150]\n  8744: u64 [a4 + 0xc8] = a0\n  8748: u64 [s1 + 0x118] = a2\n  8752: a0 = a2\n  8754: ra = 332, jump @12\n      : @321 [@dyn 166] (gas: 15)\n  8760: a0 = u64 [s1 + 0x78]\n  8763: a2 = s1 + 0x7ff\n  8767: a2 = a2 + 0xd1\n  8771: a3 = a2 + 0x400\n  8775: u64 [a3 + 0xa8] = a0\n  8779: a0 = u64 [s1 + 0x80]\n  8783: u64 [a3 + 0xa0] = a0\n  8787: a0 = u64 [s1 + 0x88]\n  8791: u64 [a3 + 0x98] = a0\n  8795: a1 = s1 + 0x7ff\n  8799: a1 = a1 + 0x561\n  8803: a0 = u64 [s1 + 0x90]\n  8807: u64 [a3 + 0x90] = a0\n  8811: a0 = 0\n  8813: ra = 334, jump @12\n      : @322 [@dyn 167] (gas: 10)\n  8819: a2 = s1 + 0x7ff\n  8823: a2 = a2 + 0xd1\n  8827: u64 [a2 + 1160] = 0\n  8831: u64 [a2 + 1152] = 0\n  8835: u64 [a2 + 1136] = 0x2\n  8840: a0 = 0x20\n  8843: a1 = s1 + 0x7ff\n  8847: a1 = a1 + 0x541\n  8851: u64 [a2 + 1144] = 0\n  8855: ra = 336, jump @12\n      : @323 [@dyn 168] (gas: 3)\n  8861: a1 = 0x40\n  8864: a0 = 0\n  8866: ra = 338, jump @0\n      : @324 [@dyn 169] (gas: 1)\n  8872: t0 = 340, jump @1202\n      : @325 [@dyn 170] (gas: 27)\n  8878: ecalli 6 // 'hash_keccak_256'\n  8880: a5 = s1 + 0x100\n  8884: a3 = u64 [a5 + 0x58]\n  8887: a0 = u64 [a3 + 0x18]\n  8890: a1 = u64 [a3 + 0x10]\n  8893: a2 = u64 [a3 + 0x8]\n  8896: a3 = u64 [a3]\n  8898: a4 = reverse a0\n  8900: a0 = reverse a1\n  8902: a1 = reverse a2\n  8904: a3 = reverse a3\n  8906: a2 = s1 + 0x7ff\n  8910: a2 = a2 + 0xd1\n  8914: u64 [a5 + 0x40] = a3\n  8917: u64 [a2 + 0x448] = a3\n  8921: u64 [a5 + 0x48] = a1\n  8924: a3 = a2 + 0x400\n  8928: u64 [a3 + 0x40] = a1\n  8931: u64 [a5 + 0x50] = a0\n  8934: u64 [a3 + 0x38] = a0\n  8937: a0 = s1 + 0x7ff\n  8941: a0 = a0 + 0x521\n  8945: a1 = s1 + 0x7ff\n  8949: a1 = a1 + 0x501\n  8953: u64 [a5 + 0x58] = a4\n  8956: u64 [a3 + 0x30] = a4\n  8959: ra = 342, jump @14\n      : @326 [@dyn 171] (gas: 13)\n  8965: a1 = s1 + 0x7ff\n  8969: a1 = a1 + 0xd1\n  8973: a3 = a1 + 0x400\n  8977: a2 = u64 [a3 + 0x68]\n  8980: a0 = u64 [a3 + 0x60]\n  8983: a1 = u64 [a3 + 0x58]\n  8986: a3 = a0\n  8988: t0 = a2\n  8990: a0 = a0 | a2\n  8993: a2 = a1\n  8995: a1 = a1 <u 0x1\n  8998: a1 = 0 if a0 != 0\n  9000: jump @328 if a1 != 0\n      : @327 (gas: 1)\n  9003: jump @1010\n      : @328 (gas: 33)\n  9006: a5 = s1 + 0x7ff\n  9010: a5 = a5 + 0xd1\n  9014: a0 = u64 [a5 + 0x450]\n  9018: u64 [s1 + 0x138] = a0\n  9022: a0 = a0 + 0x1\n  9025: a1 = a0 <u 0x1\n  9028: u64 [s1 + 0x130] = a2\n  9032: a1 = a1 + a2\n  9035: a2 = a0 | a1\n  9038: a2 = a2 <u 0x1\n  9041: u64 [s1 + 0x128] = a3\n  9045: a2 = a2 + a3\n  9048: a3 = a2 <u a3\n  9051: u64 [s1 + 0x120] = t0\n  9055: a3 = a3 + t0\n  9058: a4 = u64 [s1 + 0x158]\n  9062: u64 [a5 + 0x410] = a4\n  9066: u64 [a5 + 0x3f0] = a0\n  9070: a0 = u64 [s1 + 0x150]\n  9074: a4 = a5 + 0x400\n  9078: u64 [a4 + 0x18] = a0\n  9081: a0 = u64 [s1 + 0x148]\n  9085: u64 [a4 + 0x20] = a0\n  9088: u64 [a5 + 0x3f8] = a1\n  9092: a0 = u64 [s1 + 0x140]\n  9096: u64 [a4 + 0x28] = a0\n  9099: u64 [a4] = a2\n  9101: a0 = s1 + 0x7ff\n  9105: a0 = a0 + 0x4e1\n  9109: a1 = s1 + 0x7ff\n  9113: a1 = a1 + 0x4c1\n  9117: u64 [a4 + 0x8] = a3\n  9120: ra = 344, jump @16\n      : @329 [@dyn 172] (gas: 28)\n  9126: a0 = s1 + 0x7ff\n  9130: a0 = a0 + 0xd1\n  9134: a5 = s1 + 0x100\n  9138: a1 = u64 [a5 + 0x20]\n  9141: a2 = a0 + 0x300\n  9145: u64 [a2 + 0x88] = a1\n  9149: a1 = u64 [a5 + 0x28]\n  9152: u64 [a2 + 0x80] = a1\n  9156: a1 = u64 [a5 + 0x30]\n  9159: u64 [a2 + 0x78] = a1\n  9162: a1 = u64 [a5 + 0x38]\n  9165: u64 [a2 + 0x70] = a1\n  9168: a1 = u64 [a5 + 0x40]\n  9171: u64 [a2 + 0xa8] = a1\n  9175: a1 = u64 [a5 + 0x48]\n  9178: u64 [a2 + 0xa0] = a1\n  9182: a1 = u64 [a5 + 0x50]\n  9185: u64 [a2 + 0x98] = a1\n  9189: a4 = a0\n  9191: a0 = s1 + 0x7ff\n  9195: a0 = a0 + 0x481\n  9199: a1 = s1 + 0x7ff\n  9203: a1 = a1 + 0x461\n  9207: a2 = s1 + 0x7ff\n  9211: a2 = a2 + 0x441\n  9215: a3 = u64 [a5 + 0x58]\n  9218: u64 [a4 + 0x390] = a3\n  9222: ra = 346, jump @1136\n      : @330 [@dyn 173] (gas: 11)\n  9228: a3 = s1 + 0x7ff\n  9232: a3 = a3 + 0xd1\n  9236: a4 = a3 + 0x300\n  9240: a0 = u64 [a4 + 0xe8]\n  9244: a1 = u64 [a4 + 0xe0]\n  9248: a2 = u64 [a4 + 0xd8]\n  9252: a3 = u64 [a4 + 0xd0]\n  9256: a0 = a0 | a2\n  9259: a1 = a1 | a3\n  9262: a0 = a0 | a1\n  9265: jump @332 if a0 == 0\n      : @331 (gas: 1)\n  9268: jump @1013\n      : @332 (gas: 15)\n  9271: a1 = s1 + 0x7ff\n  9275: a1 = a1 + 0xd1\n  9279: a2 = a1 + 0x300\n  9283: a0 = u64 [a2 + 0xc8]\n  9287: u64 [s1 + 0x158] = a0\n  9291: a0 = u64 [a2 + 0xc0]\n  9295: u64 [s1 + 0x150] = a0\n  9299: a0 = u64 [a2 + 0xb8]\n  9303: u64 [s1 + 0x148] = a0\n  9307: a0 = u64 [a2 + 0xb0]\n  9311: u64 [s1 + 0x140] = a0\n  9315: a0 = s1 + 0x7ff\n  9319: a0 = a0 + 0x3e1\n  9323: a1 = u64 [s1 + 0x108]\n  9327: ra = 348, jump @10\n      : @333 [@dyn 174] (gas: 25)\n  9333: a4 = s1 + 0x7ff\n  9337: a4 = a4 + 0xd1\n  9341: a5 = a4 + 0x300\n  9345: a0 = u64 [a5 + 0x10]\n  9348: a1 = u64 [a5 + 0x18]\n  9351: a2 = u64 [a5 + 0x20]\n  9354: a3 = u64 [a5 + 0x28]\n  9357: u64 [a4 + 0x2e8] = a3\n  9361: a3 = a4 + 0x200\n  9365: u64 [a3 + 0xe0] = a2\n  9369: u64 [a3 + 0xd8] = a1\n  9373: u64 [a3 + 0xd0] = a0\n  9377: a0 = u64 [s1 + 0x158]\n  9381: u64 [a5 + 0x8] = a0\n  9384: a0 = u64 [s1 + 0x150]\n  9388: u64 [a5] = a0\n  9390: a0 = u64 [s1 + 0x148]\n  9394: u64 [a3 + 0xf8] = a0\n  9398: a0 = s1 + 0x7ff\n  9402: a0 = a0 + 0x3c1\n  9406: a1 = s1 + 0x7ff\n  9410: a1 = a1 + 0x3a1\n  9414: a2 = u64 [s1 + 0x140]\n  9418: u64 [a3 + 0xf0] = a2\n  9422: ra = 350, jump @16\n      : @334 [@dyn 175] (gas: 20)\n  9428: a0 = u64 [s1 + 0x140]\n  9432: a2 = a0 + 0x1\n  9435: u64 [s1 + 0x138] = a2\n  9439: a0 = a2 <u 0x1\n  9442: a1 = u64 [s1 + 0x148]\n  9446: a0 = a0 + a1\n  9449: u64 [s1 + 0x130] = a0\n  9453: a0 = a0 | a2\n  9456: a0 = a0 <u 0x1\n  9459: a1 = u64 [s1 + 0x150]\n  9463: a0 = a0 + a1\n  9466: u64 [s1 + 0x128] = a0\n  9470: a0 = a0 <u a1\n  9473: a1 = u64 [s1 + 0x158]\n  9477: a0 = a0 + a1\n  9480: u64 [s1 + 0x120] = a0\n  9484: a0 = s1 + 0x7ff\n  9488: a0 = a0 + 0x381\n  9492: a1 = u64 [s1 + 0xd8]\n  9496: ra = 352, jump @10\n      : @335 [@dyn 176] (gas: 23)\n  9502: a0 = s1 + 0x7ff\n  9506: a0 = a0 + 0xd1\n  9510: a2 = a0 + 0x200\n  9514: a1 = u64 [a2 + 0xb0]\n  9518: u64 [s1 + 0x110] = a1\n  9522: a1 = u64 [a2 + 0xb8]\n  9526: u64 [s1 + 0x108] = a1\n  9530: a1 = u32 [a0 + 0x2c0]\n  9534: u64 [s1 + 0x100] = a1\n  9538: a1 = u64 [s1 + 0x120]\n  9542: u64 [a2 + 0x88] = a1\n  9546: a1 = u64 [s1 + 0x128]\n  9550: u64 [a2 + 0x80] = a1\n  9554: a1 = u64 [s1 + 0x130]\n  9558: u64 [a2 + 0x78] = a1\n  9561: a3 = a0\n  9563: a0 = s1 + 0x7ff\n  9567: a0 = a0 + 0x361\n  9571: a1 = s1 + 0x7ff\n  9575: a1 = a1 + 0x341\n  9579: a2 = u64 [s1 + 0x138]\n  9583: u64 [a3 + 0x270] = a2\n  9587: ra = 354, jump @14\n      : @336 [@dyn 177] (gas: 27)\n  9593: a3 = s1 + 0x7ff\n  9597: a3 = a3 + 0xd1\n  9601: a0 = u32 [a3 + 0x2a4]\n  9605: a4 = a3 + 0x200\n  9609: a1 = u64 [a4 + 0xa8]\n  9613: a0 = a0 << 0x20\n  9616: a2 = u64 [s1 + 0x100]\n  9620: a2 = a2 | a0\n  9623: u64 [a4 + 0x48] = a1\n  9626: a0 = u64 [s1 + 0x108]\n  9630: u64 [a4 + 0x38] = a0\n  9633: a0 = u64 [s1 + 0x110]\n  9637: u64 [a4 + 0x30] = a0\n  9640: a0 = u64 [s1 + 0x120]\n  9644: u64 [a4 + 0x68] = a0\n  9647: a0 = u64 [s1 + 0x128]\n  9651: u64 [a4 + 0x60] = a0\n  9654: a0 = u64 [s1 + 0x130]\n  9658: u64 [a4 + 0x58] = a0\n  9661: a0 = u64 [s1 + 0x138]\n  9665: u64 [a4 + 0x50] = a0\n  9668: a0 = s1 + 0x7ff\n  9672: a0 = a0 + 0x321\n  9676: a1 = s1 + 0x7ff\n  9680: a1 = a1 + 0x301\n  9684: u64 [a4 + 0x40] = a2\n  9687: ra = 356, jump @16\n      : @337 [@dyn 178] (gas: 4)\n  9693: a0 = s1 + 0x7ff\n  9697: a0 = a0 + 0x2e1\n  9701: a1 = u64 [s1 + 0x38]\n  9704: ra = 358, jump @10\n      : @338 [@dyn 179] (gas: 31)\n  9710: a3 = s1 + 0x7ff\n  9714: a3 = a3 + 0xd1\n  9718: t0 = u64 [a3 + 0x210]\n  9722: t1 = u64 [a3 + 0x218]\n  9726: t2 = u64 [a3 + 0x220]\n  9730: ra = u64 [a3 + 0x228]\n  9734: a0 = u64 [s1 + 0x140]\n  9738: a2 = a0 + 0x2\n  9741: a5 = a2 <u a0\n  9744: a1 = u64 [s1 + 0x148]\n  9748: a0 = a1 + a5\n  9751: a1 = a0 <u a1\n  9754: a1 = a5 if a5 == 0\n  9757: a4 = u64 [s1 + 0x150]\n  9761: a1 = a1 + a4\n  9764: a5 = a1 <u a4\n  9767: a4 = u64 [s1 + 0x158]\n  9771: a5 = a5 + a4\n  9774: u64 [a3 + 0x1e8] = ra\n  9778: u64 [a3 + 0x1e0] = t2\n  9782: u64 [a3 + 0x1d8] = t1\n  9786: u64 [a3 + 0x1d0] = t0\n  9790: u64 [a3 + 0x208] = a5\n  9794: u64 [a3 + 0x200] = a1\n  9798: u64 [a3 + 0x1f8] = a0\n  9802: a0 = s1 + 0x7ff\n  9806: a0 = a0 + 0x2c1\n  9810: a1 = s1 + 0x7ff\n  9814: a1 = a1 + 0x2a1\n  9818: u64 [a3 + 0x1f0] = a2\n  9822: ra = 360, jump @16\n      : @339 [@dyn 180] (gas: 4)\n  9828: a0 = s1 + 0x7ff\n  9832: a0 = a0 + 0x281\n  9836: a1 = u64 [s1 + 0x118]\n  9840: ra = 362, jump @10\n      : @340 [@dyn 181] (gas: 19)\n  9846: a1 = s1 + 0x7ff\n  9850: a1 = a1 + 0xd1\n  9854: a4 = a1 + 0x100\n  9858: a2 = u64 [a4 + 0xc8]\n  9862: a3 = u64 [a4 + 0xc0]\n  9866: a0 = u64 [a4 + 0xb8]\n  9870: a1 = u64 [a4 + 0xb0]\n  9874: u64 [s1 + 0xf0] = a0\n  9878: u64 [s1 + 0xe8] = a2\n  9882: a0 = a0 | a2\n  9885: u64 [s1 + 0xf8] = a1\n  9889: a1 = a1 | a3\n  9892: a1 = a1 | a0\n  9895: a1 = a1 >> 0x20\n  9898: u64 [s1 + 0xe0] = a3\n  9902: a0 = a0 | a3\n  9905: a0 = a0 << 0x20\n  9908: a0 = a0 | a1\n  9911: jump @342 if a0 == 0\n      : @341 (gas: 1)\n  9914: jump @747\n      : @342 (gas: 4)\n  9917: a0 = s1 + 0x7ff\n  9921: a0 = a0 + 0x261\n  9925: a1 = u64 [s1 + 0xf8]\n  9929: ra = 364, jump @10\n      : @343 [@dyn 182] (gas: 14)\n  9935: a0 = s1 + 0x7ff\n  9939: a0 = a0 + 0xd1\n  9943: a3 = a0 + 0x100\n  9947: a1 = u64 [a3 + 0xa8]\n  9951: a2 = u64 [a3 + 0xa0]\n  9955: a0 = u64 [a3 + 0x98]\n  9959: u64 [s1 + 0x48] = a1\n  9962: u64 [s1 + 0x38] = a2\n  9965: a1 = a1 | a2\n  9968: u64 [s1 + 0x40] = a0\n  9971: a0 = a0 <u 0x1\n  9974: u64 [s1 + 0x138] = a1\n  9978: a0 = 0 if a1 != 0\n  9980: jump @345 if a0 != 0\n      : @344 (gas: 1)\n  9983: jump @1016\n      : @345 (gas: 31)\n  9986: a0 = u64 [s1 + 0x140]\n  9990: a1 = a0 + 0x3\n  9993: a0 = a1 <u a0\n  9996: t0 = a1\n  9998: u64 [s1 + 0x30] = a1\n 10001: a1 = u64 [s1 + 0x148]\n 10005: a2 = a1 + a0\n 10008: a1 = a2 <u a1\n 10011: a4 = a2\n 10013: u64 [s1 + 0x28] = a2\n 10016: a1 = a0 if a0 == 0\n 10019: a2 = u64 [s1 + 0x150]\n 10023: a5 = a2 + a1\n 10026: u64 [s1 + 0x18] = a5\n 10029: a3 = s1 + 0x7ff\n 10033: a3 = a3 + 0xd1\n 10037: a0 = u64 [a3 + 0x190]\n 10041: u64 [s1 + 0x50] = a0\n 10044: a0 = a5 <u a2\n 10047: a1 = u64 [s1 + 0x158]\n 10051: a2 = a1 + a0\n 10054: u64 [s1 + 0x20] = a2\n 10057: u64 [a3 + 0x150] = t0\n 10061: u64 [a3 + 0x158] = a4\n 10065: u64 [a3 + 0x160] = a5\n 10069: a0 = s1 + 0x7ff\n 10073: a0 = a0 + 0x241\n 10077: a1 = s1 + 0x7ff\n 10081: a1 = a1 + 0x221\n 10085: u64 [a3 + 0x168] = a2\n 10089: ra = 366, jump @14\n      : @346 [@dyn 183] (gas: 16)\n 10095: a4 = s1 + 0x7ff\n 10099: a4 = a4 + 0xd1\n 10103: a5 = a4 + 0x100\n 10107: a2 = u64 [a5 + 0x70]\n 10110: a0 = u64 [a5 + 0x78]\n 10113: a1 = u64 [a5 + 0x80]\n 10117: a3 = u64 [a5 + 0x88]\n 10121: u64 [a5 + 0x28] = a3\n 10124: u64 [a5 + 0x20] = a1\n 10127: u64 [a5 + 0x18] = a0\n 10130: a0 = s1 + 0x7ff\n 10134: a0 = a0 + 0x201\n 10138: a1 = s1 + 0x7ff\n 10142: a1 = a1 + 0x1e1\n 10146: u64 [a5 + 0x10] = a2\n 10149: ra = 368, jump @1075\n      : @347 [@dyn 184] (gas: 34)\n 10155: a4 = s1 + 0x7ff\n 10159: a4 = a4 + 0xd1\n 10163: a5 = a4 + 0x100\n 10167: a0 = u64 [a5 + 0x30]\n 10170: a1 = u64 [a5 + 0x38]\n 10173: a2 = u64 [a5 + 0x40]\n 10176: a3 = u64 [a5 + 0x48]\n 10179: u64 [a4 + 0xe8] = a3\n 10183: a3 = u64 [s1 + 0x48]\n 10186: u64 [a4 + 0xc8] = a3\n 10190: a3 = u64 [s1 + 0x38]\n 10193: u64 [a4 + 0xc0] = a3\n 10197: a3 = u64 [s1 + 0x40]\n 10200: u64 [a4 + 0xb8] = a3\n 10204: a3 = u64 [s1 + 0x50]\n 10207: u64 [a4 + 0xb0] = a3\n 10211: u64 [a4 + 0xe0] = a2\n 10215: u64 [a4 + 0xd8] = a1\n 10219: u64 [a4 + 0xd0] = a0\n 10223: a0 = u64 [s1 + 0x20]\n 10226: u64 [a5 + 0x8] = a0\n 10229: a0 = u64 [s1 + 0x18]\n 10232: u64 [a5] = a0\n 10234: a0 = u64 [s1 + 0x28]\n 10237: u64 [a4 + 0xf8] = a0\n 10241: a0 = s1 + 0x7ff\n 10245: a0 = a0 + 0x1c1\n 10249: a1 = s1 + 0x7ff\n 10253: a1 = a1 + 0x1a1\n 10257: a2 = s1 + 0x7ff\n 10261: a2 = a2 + 0x181\n 10265: a3 = u64 [s1 + 0x30]\n 10268: u64 [a4 + 0xf0] = a3\n 10272: ra = 370, jump @1152\n      : @348 [@dyn 185] (gas: 14)\n 10278: a2 = u64 [s1 + 0x40]\n 10281: a0 = a2 >u 0\n 10283: a1 = u64 [s1 + 0x50]\n 10286: a1 = a1 <u 0x20\n 10289: a1 = a1 ^ 0x1\n 10292: a1 = a0 if a2 != 0\n 10295: a0 = u64 [s1 + 0x38]\n 10298: a0 = a0 >u 0\n 10300: a3 = u64 [s1 + 0x48]\n 10303: a2 = a3 >u 0\n 10305: a2 = a0 if a3 == 0\n 10308: a0 = u64 [s1 + 0x138]\n 10312: a2 = a1 if a0 == 0\n 10315: jump @350 if a2 != 0\n      : @349 (gas: 1)\n 10318: jump @835\n      : @350 (gas: 17)\n 10321: a0 = u64 [s1 + 0x50]\n 10324: a0 = a0 & 0xffffffffffffffe0\n 10327: u64 [s1 + 0xd8] = a0\n 10331: a0 = s1 + 0x7ff\n 10335: a0 = a0 + 0xd1\n 10339: a1 = u64 [s1 + 0x30]\n 10342: u64 [a0 + 0x70] = a1\n 10345: a1 = u64 [s1 + 0x28]\n 10348: u64 [a0 + 0x78] = a1\n 10351: a1 = u64 [s1 + 0x18]\n 10354: u64 [a0 + 0x80] = a1\n 10358: a1 = s1 + 0x7ff\n 10362: a1 = a1 + 0x141\n 10366: a2 = u64 [s1 + 0x20]\n 10369: u64 [a0 + 0x88] = a2\n 10373: a0 = 0\n 10375: ra = 372, jump @12\n      : @351 [@dyn 186] (gas: 3)\n 10381: a1 = 0x20\n 10384: a0 = 0\n 10386: ra = 374, jump @0\n      : @352 [@dyn 187] (gas: 4)\n 10392: a1 = sp + 0xffffffffffffffe0\n 10395: a1 = a1 & 0xffffffffffffffe0\n 10398: u64 [s1 + 0x150] = a1\n 10402: t0 = 376, jump @1215\n      : @353 [@dyn 188] (gas: 25)\n 10408: ecalli 6 // 'hash_keccak_256'\n 10410: u64 [s1 + 344] = 0x20\n 10415: t0 = 0\n 10417: t2 = 0\n 10419: ra = 0\n 10421: u64 [s1 + 304] = 0\n 10425: t1 = 0\n 10427: a5 = 0\n 10429: a4 = s1 + 0x100\n 10433: a3 = u64 [a4 + 0x50]\n 10436: a0 = u64 [a3]\n 10438: a1 = u64 [a3 + 0x8]\n 10441: a2 = u64 [a3 + 0x10]\n 10444: a3 = u64 [a3 + 0x18]\n 10447: a0 = reverse a0\n 10449: u64 [a4 + 0x40] = a0\n 10452: a0 = reverse a1\n 10454: u64 [a4 + 0x38] = a0\n 10457: a0 = reverse a2\n 10459: a2 = 0\n 10461: u64 [a4 + 0x48] = a0\n 10464: a0 = reverse a3\n 10466: a3 = u64 [a4 + 0x30]\n 10469: u64 [a4 + 0x50] = a0\n 10472: fallthrough\n      : @354 (gas: 20)\n 10473: a0 = u64 [s1 + 0xd8]\n 10477: u64 [s1 + 0x130] = a3\n 10481: a0 = a3 <u a0\n 10484: a4 = a0 ^ 0x1\n 10487: u64 [s1 + 0x118] = t1\n 10491: a4 = 0x1 if t1 != 0\n 10494: u64 [s1 + 0x128] = a5\n 10498: u64 [s1 + 0x120] = a2\n 10502: a0 = a2 | a5\n 10505: a4 = 0x1 if a0 != 0\n 10508: a1 = u64 [s1 + 0xf8]\n 10512: t1 = u64 [s1 + 0x158]\n 10516: a1 = a1 + t1\n 10519: a3 = u64 [s1 + 0xf0]\n 10523: a3 = a3 + t0\n 10526: a2 = u64 [s1 + 0xe0]\n 10530: a2 = a2 + t2\n 10533: a0 = u64 [s1 + 0xe8]\n 10537: a0 = a0 + ra\n 10540: jump @356 if a4 == 0\n      : @355 (gas: 1)\n 10543: jump @837\n      : @356 (gas: 9)\n 10546: u64 [s1 + 0x110] = ra\n 10550: a4 = a1 <u t1\n 10553: a3 = a3 + a4\n 10556: a5 = t0\n 10558: t0 = a3 ^ t0\n 10561: u64 [s1 + 0x108] = a5\n 10565: a5 = a3 <u a5\n 10568: a5 = a4 if t0 == 0\n 10571: t0 = 378, jump @1218\n      : @357 [@dyn 189] (gas: 1)\n 10577: jump @359 if a0 == 0\n      : @358 (gas: 1)\n 10580: jump @747\n      : @359 (gas: 2)\n 10583: a0 = s1 + 0x260\n 10587: ra = 380, jump @10\n      : @360 [@dyn 190] (gas: 20)\n 10593: a4 = s1 + 0x200\n 10597: a0 = u64 [a4 + 0x60]\n 10600: a1 = u64 [a4 + 0x68]\n 10603: a2 = u64 [a4 + 0x70]\n 10606: a3 = u64 [a4 + 0x78]\n 10609: u64 [a4 + 0x38] = a3\n 10612: u64 [a4 + 0x30] = a2\n 10615: u64 [a4 + 0x28] = a1\n 10618: u64 [a4 + 0x20] = a0\n 10621: a0 = u64 [s1 + 0x140]\n 10625: u64 [a4 + 0x58] = a0\n 10628: a0 = u64 [s1 + 0x138]\n 10632: u64 [a4 + 0x50] = a0\n 10635: a0 = u64 [s1 + 0x148]\n 10639: u64 [a4 + 0x48] = a0\n 10642: a0 = s1 + 0x240\n 10646: a1 = s1 + 0x220\n 10650: a2 = u64 [s1 + 0x150]\n 10654: u64 [a4 + 0x40] = a2\n 10657: ra = 382, jump @16\n      : @361 [@dyn 191] (gas: 1)\n 10663: t0 = 384, jump @1212\n      : @362 [@dyn 192] (gas: 36)\n 10669: t0 = a1 + a0\n 10672: a1 = t0 <u a1\n 10675: a0 = u64 [s1 + 0x140]\n 10679: a0 = a0 + a1\n 10682: u64 [s1 + 0x140] = a0\n 10686: a0 = u64 [s1 + 0x158]\n 10690: t1 = a0 + 0x20\n 10693: a3 = t1 <u a0\n 10696: a0 = u64 [s1 + 0x108]\n 10700: t2 = a0 + a3\n 10703: a4 = t2 <u a0\n 10706: a4 = a3 if a3 == 0\n 10709: a0 = u64 [s1 + 0x100]\n 10713: a4 = a4 + a0\n 10716: a3 = a4 <u a0\n 10719: ra = u64 [s1 + 0x110]\n 10723: ra = ra + a3\n 10726: a0 = u64 [s1 + 0x130]\n 10730: a3 = a0 + 0x20\n 10733: a5 = a3 <u a0\n 10736: a1 = u64 [s1 + 0x118]\n 10740: a0 = a1 + a5\n 10743: a1 = a0 <u a1\n 10746: a1 = a5 if a5 == 0\n 10749: a2 = u64 [s1 + 0x120]\n 10753: a1 = a1 + a2\n 10756: a5 = a1 <u a2\n 10759: a2 = u64 [s1 + 0x128]\n 10763: a5 = a5 + a2\n 10766: u64 [s1 + 0x138] = t0\n 10770: u64 [s1 + 0x158] = t1\n 10774: t0 = t2\n 10776: t2 = a4\n 10778: t1 = a0\n 10780: a2 = a1\n 10782: jump @354\n      : @363 (gas: 1)\n 10785: t0 = 386, jump @1201\n      : @364 [@dyn 193] (gas: 4)\n 10791: ra = 0x184\n 10795: ecalli 11 // 'value_transferred'\n 10797: t0 = 0x186\n 10801: jump @1204\n      : @365 [@dyn 194] (gas: 1)\n 10804: t0 = 390, jump @1204\n      : @366 [@dyn 195] (gas: 1)\n 10810: jump @368 if a0 == 0\n      : @367 (gas: 1)\n 10813: jump @945\n      : @368 (gas: 1)\n 10816: t0 = 392, jump @1251\n      : @369 [@dyn 196] (gas: 1)\n 10822: jump @371 if a1 <u a0\n      : @370 (gas: 1)\n 10825: jump @945\n      : @371 (gas: 2)\n 10828: a0 = s1 + 0x18e0\n 10832: ra = 394, jump @1177\n      : @372 [@dyn 197] (gas: 7)\n 10838: a0 = s1 + 0x4000\n 10842: i32 a0 = a0 + 0xfffffffffffffb80\n 10846: a1 = 0x4\n 10849: ra = 0x18c\n 10853: ecalli 1 // 'call_data_load'\n 10855: t0 = 0x18e\n 10859: jump @1253\n      : @373 [@dyn 198] (gas: 1)\n 10862: t0 = 398, jump @1253\n      : @374 [@dyn 199] (gas: 13)\n 10868: a0 = u64 [a4 + 0xa8]\n 10872: a1 = u64 [a4 + 0xb0]\n 10876: a2 = u64 [a4 + 0xb8]\n 10880: a3 = u64 [a4 + 0xc0]\n 10884: a4 = s1 + 0x18d8\n 10888: u64 [a4] = a3\n 10890: a3 = a4 + 0xffffffffffffff00\n 10894: u64 [a3 + 0xf8] = a2\n 10898: u64 [a3 + 0xf0] = a1\n 10902: a1 = s1 + 0x18c0\n 10906: u64 [a3 + 0xe8] = a0\n 10910: a0 = 0\n 10912: ra = 400, jump @12\n      : @375 [@dyn 200] (gas: 3)\n 10918: t0 = 0x192\n 10922: a2 = s1 + 0x10d8\n 10926: fallthrough\n      : @376 [@dyn 201] (gas: 7)\n 10927: u64 [a2 + 2016] = 0\n 10931: u64 [a2 + 2008] = 0\n 10935: u64 [a2 + 1992] = 0x3\n 10940: a0 = 0x20\n 10943: a1 = s1 + 0x18a0\n 10947: u64 [a2 + 2000] = 0\n 10951: ra = 404, jump @12\n      : @377 [@dyn 202] (gas: 3)\n 10957: a1 = 0x40\n 10960: a0 = 0\n 10962: ra = 406, jump @0\n      : @378 [@dyn 203] (gas: 1)\n 10968: t0 = 408, jump @1202\n      : @379 [@dyn 204] (gas: 4)\n 10974: ra = 0x19a\n 10978: ecalli 6 // 'hash_keccak_256'\n 10980: t0 = 0x19c\n 10984: jump @1238\n      : @380 [@dyn 205] (gas: 1)\n 10987: t0 = 412, jump @1238\n      : @381 [@dyn 206] (gas: 10)\n 10993: u64 [s1 + 0x140] = a0\n 10997: a0 = reverse a1\n 10999: u64 [s1 + 0x148] = a0\n 11003: a0 = reverse a2\n 11005: u64 [s1 + 0x158] = a0\n 11009: a0 = reverse a3\n 11011: u64 [s1 + 0x150] = a0\n 11015: a0 = s1 + 0x1880\n 11019: a1 = 0x40\n 11022: ra = 414, jump @10\n      : @382 [@dyn 207] (gas: 18)\n 11028: a4 = s1 + 0x10d8\n 11032: a5 = a4 + 0x700\n 11036: a0 = u64 [a5 + 0xc0]\n 11040: u64 [s1 + 0x98] = a0\n 11044: a1 = u64 [a5 + 0xb8]\n 11048: u64 [s1 + 0x90] = a1\n 11052: a2 = u64 [a5 + 0xb0]\n 11056: u64 [s1 + 0xa0] = a2\n 11060: a3 = u64 [a5 + 0xa8]\n 11064: u64 [s1 + 0xa8] = a3\n 11068: u64 [a5 + 0xa0] = a0\n 11072: u64 [a5 + 0x98] = a1\n 11076: u64 [a5 + 0x90] = a2\n 11080: a0 = s1 + 0x1860\n 11084: u64 [a5 + 0x88] = a3\n 11088: ra = 0x1a0\n 11092: t0 = 0x558\n 11096: jump @1237\n      : @383 [@dyn 208] (gas: 3)\n 11099: a0 = s1 + 0x1840\n 11103: a1 = 0x40\n 11106: ra = 418, jump @10\n      : @384 [@dyn 209] (gas: 27)\n 11112: a0 = s1 + 0x10d8\n 11116: a5 = a0 + 0x700\n 11120: a2 = u64 [a5 + 0x80]\n 11124: u64 [s1 + 0x138] = a2\n 11128: a3 = u64 [a5 + 0x78]\n 11131: u64 [s1 + 0x130] = a3\n 11135: a4 = u64 [a5 + 0x70]\n 11138: u64 [s1 + 0x128] = a4\n 11142: a1 = u64 [a5 + 0x68]\n 11145: u64 [s1 + 0x120] = a1\n 11149: u64 [a5 + 0x20] = a2\n 11152: u64 [a5 + 0x18] = a3\n 11155: u64 [a5 + 0x10] = a4\n 11158: u64 [a5 + 0x8] = a1\n 11161: a1 = u64 [s1 + 0x150]\n 11165: u64 [a5 + 0x40] = a1\n 11168: a1 = u64 [s1 + 0x158]\n 11172: u64 [a5 + 0x38] = a1\n 11175: a1 = u64 [s1 + 0x148]\n 11179: u64 [a5 + 0x30] = a1\n 11182: a4 = a0\n 11184: a0 = s1 + 0x1820\n 11188: a1 = s1 + 0x1800\n 11192: a2 = s1 + 0x17e0\n 11196: a3 = u64 [s1 + 0x140]\n 11200: u64 [a4 + 0x728] = a3\n 11204: ra = 420, jump @1084\n      : @385 [@dyn 210] (gas: 40)\n 11210: a1 = s1 + 0x10d8\n 11214: a5 = a1 + 0x700\n 11218: a0 = u64 [a5 + 0x50]\n 11221: a2 = u64 [a5 + 0x60]\n 11224: a4 = u64 [a5 + 0x48]\n 11227: u64 [s1 + 0x118] = a4\n 11231: a3 = u64 [a5 + 0x58]\n 11234: t0 = u64 [s1 + 0x128]\n 11238: ra = a0 ^ t0\n 11241: a5 = a0 <u t0\n 11244: t1 = u64 [s1 + 0x120]\n 11248: t2 = a4 <u t1\n 11251: a5 = t2 if ra == 0\n 11254: a1 = u64 [s1 + 0x130]\n 11258: a4 = a3 - a1\n 11261: a3 = a3 <u a1\n 11264: ra = a1\n 11266: a1 = u64 [s1 + 0x138]\n 11270: a2 = a2 - a1\n 11273: a2 = a2 - a3\n 11276: a3 = a4 <u a5\n 11279: a2 = a2 - a3\n 11282: a4 = a4 - a5\n 11285: a0 = a0 - t0\n 11288: t2 = a0 - t2\n 11291: a3 = u64 [s1 + 0x118]\n 11295: a3 = a3 - t1\n 11298: a0 = s1 + 0x10d8\n 11302: u64 [a0 + 0x6c8] = a3\n 11306: u64 [a0 + 0x700] = a1\n 11310: u64 [a0 + 0x6f8] = ra\n 11314: u64 [a0 + 0x6f0] = t0\n 11318: u64 [a0 + 0x6e8] = t1\n 11322: u64 [a0 + 0x6d0] = t2\n 11326: u64 [a0 + 0x6d8] = a4\n 11330: a3 = a0\n 11332: a0 = s1 + 0x17c0\n 11336: a1 = s1 + 0x17a0\n 11340: u64 [a3 + 0x6e0] = a2\n 11344: ra = 422, jump @1126\n      : @386 [@dyn 211] (gas: 12)\n 11350: a0 = u64 [s1 + 0xa8]\n 11354: a1 = u64 [s1 + 0x98]\n 11358: a2 = u64 [s1 + 0xa0]\n 11362: a2 = a2 | a1\n 11365: a3 = u64 [s1 + 0x90]\n 11369: a1 = a0 | a3\n 11372: a1 = a1 | a2\n 11375: a1 = a1 >> 0x20\n 11378: a2 = a2 | a3\n 11381: a2 = a2 << 0x20\n 11384: a1 = a1 | a2\n 11387: jump @388 if a1 == 0\n      : @387 (gas: 1)\n 11390: jump @747\n      : @388 (gas: 12)\n 11393: a3 = s1 + 0x10d8\n 11397: a1 = u64 [s1 + 0x120]\n 11401: a4 = a3 + 0x600\n 11405: u64 [a4 + 0xa8] = a1\n 11409: a1 = u64 [s1 + 0x128]\n 11413: u64 [a4 + 0xb0] = a1\n 11417: a1 = u64 [s1 + 0x130]\n 11421: u64 [a4 + 0xb8] = a1\n 11425: a1 = s1 + 0x1780\n 11429: a2 = u64 [s1 + 0x138]\n 11433: u64 [a4 + 0xc0] = a2\n 11437: ra = 424, jump @12\n      : @389 [@dyn 212] (gas: 19)\n 11443: a0 = u64 [s1 + 0x140]\n 11447: a2 = a0 + 0x1\n 11450: u64 [s1 + 0x140] = a2\n 11454: a0 = a2 <u 0x1\n 11457: a1 = u64 [s1 + 0x148]\n 11461: a0 = a0 + a1\n 11464: u64 [s1 + 0x148] = a0\n 11468: a0 = a0 | a2\n 11471: a0 = a0 <u 0x1\n 11474: a1 = u64 [s1 + 0x158]\n 11478: a0 = a0 + a1\n 11481: u64 [s1 + 0x138] = a0\n 11485: a0 = a0 <u a1\n 11488: a1 = u64 [s1 + 0x150]\n 11492: a0 = a0 + a1\n 11495: u64 [s1 + 0x158] = a0\n 11499: a0 = s1 + 0x1760\n 11503: a1 = 0x40\n 11506: ra = 426, jump @10\n      : @390 [@dyn 213] (gas: 23)\n 11512: a0 = s1 + 0x10d8\n 11516: a2 = a0 + 0x600\n 11520: a1 = u64 [a2 + 0xa0]\n 11524: u64 [s1 + 0x88] = a1\n 11528: a1 = u64 [a2 + 0x98]\n 11532: u64 [s1 + 0x80] = a1\n 11536: a1 = u64 [a2 + 0x90]\n 11540: u64 [s1 + 0x78] = a1\n 11543: a1 = u64 [a2 + 0x88]\n 11547: u64 [s1 + 0x70] = a1\n 11550: a4 = s1 + 0x100\n 11554: a1 = u64 [a4 + 0x58]\n 11557: u64 [a2 + 0x60] = a1\n 11560: a1 = u64 [a4 + 0x38]\n 11563: u64 [a2 + 0x58] = a1\n 11566: a1 = u64 [a4 + 0x48]\n 11569: u64 [a2 + 0x50] = a1\n 11572: a2 = a0\n 11574: a0 = s1 + 0x1740\n 11578: a1 = s1 + 0x1720\n 11582: a3 = u64 [a4 + 0x40]\n 11585: u64 [a2 + 0x648] = a3\n 11589: ra = 428, jump @14\n      : @391 [@dyn 214] (gas: 12)\n 11595: a3 = u64 [s1 + 0x70]\n 11598: a1 = u64 [s1 + 0x78]\n 11601: a2 = u64 [s1 + 0x80]\n 11605: a0 = u64 [s1 + 0x88]\n 11609: a0 = a0 | a1\n 11612: a1 = a3 | a2\n 11615: a1 = a1 | a0\n 11618: a1 = a1 >> 0x20\n 11621: a0 = a0 | a2\n 11624: a0 = a0 << 0x20\n 11627: a0 = a0 | a1\n 11630: jump @393 if a0 == 0\n      : @392 (gas: 1)\n 11633: jump @747\n      : @393 (gas: 19)\n 11636: a2 = s1 + 0x10d8\n 11640: t0 = u64 [a2 + 0x680]\n 11644: t1 = u64 [a2 + 0x678]\n 11648: a5 = a2 + 0x600\n 11652: a1 = u64 [a5 + 0x70]\n 11655: a4 = u64 [a5 + 0x68]\n 11658: a0 = 0xffffffff\n 11668: u64 [s1 + 0xd8] = a0\n 11672: u64 [s1 + 0xb8] = a4\n 11676: u64 [a5 + 0x28] = a4\n 11679: u64 [s1 + 0xc0] = a1\n 11683: u64 [a5 + 0x30] = a1\n 11686: u64 [s1 + 0xc8] = t1\n 11690: u64 [a2 + 0x638] = t1\n 11694: a1 = s1 + 0x1700\n 11698: u64 [s1 + 0xd0] = t0\n 11702: u64 [a2 + 0x640] = t0\n 11706: a0 = a3\n 11708: ra = 430, jump @12\n      : @394 [@dyn 215] (gas: 14)\n 11714: a0 = u64 [s1 + 0x158]\n 11718: a1 = s1 + 0x10d8\n 11722: a2 = a1 + 0x600\n 11726: u64 [a2 + 0x20] = a0\n 11729: a0 = u64 [s1 + 0x138]\n 11733: u64 [a2 + 0x18] = a0\n 11736: a0 = u64 [s1 + 0x148]\n 11740: u64 [a2 + 0x10] = a0\n 11743: a2 = a1\n 11745: a1 = s1 + 0x16e0\n 11749: a0 = u64 [s1 + 0x140]\n 11753: u64 [a2 + 0x608] = a0\n 11757: a0 = 0\n 11759: ra = 432, jump @12\n      : @395 [@dyn 216] (gas: 3)\n 11765: a1 = 0x20\n 11768: a0 = 0\n 11770: ra = 434, jump @0\n      : @396 [@dyn 217] (gas: 4)\n 11776: a1 = sp + 0xffffffffffffffe0\n 11779: a1 = a1 & 0xffffffffffffffe0\n 11782: u64 [s1 + 0x158] = a1\n 11786: t0 = 436, jump @1215\n      : @397 [@dyn 218] (gas: 30)\n 11792: ecalli 6 // 'hash_keccak_256'\n 11794: u64 [s1 + 312] = 0\n 11798: a5 = 0\n 11800: u64 [s1 + 304] = 0\n 11804: a4 = s1 + 0x100\n 11808: a3 = u64 [a4 + 0x58]\n 11811: a0 = u64 [a3]\n 11813: a1 = u64 [a3 + 0x8]\n 11816: a2 = u64 [a3 + 0x10]\n 11819: a3 = u64 [a3 + 0x18]\n 11822: a0 = reverse a0\n 11824: u64 [a4 + 0x8] = a0\n 11827: a0 = reverse a1\n 11829: u64 [a4 + 0x10] = a0\n 11832: a0 = reverse a2\n 11834: u64 [a4 + 0x20] = a0\n 11837: a0 = reverse a3\n 11839: u64 [a4 + 0x18] = a0\n 11842: a3 = 0\n 11844: a0 = 0xffffffe0\n 11854: u64 [s1 + 0xb0] = a0\n 11858: a0 = u64 [s1 + 0x70]\n 11861: u64 [a4 + 0x58] = a0\n 11864: a0 = u64 [s1 + 0x78]\n 11867: u64 [a4 + 0x50] = a0\n 11870: a0 = u64 [s1 + 0x80]\n 11874: u64 [a4 + 0x48] = a0\n 11877: a0 = u64 [s1 + 0x88]\n 11881: u64 [a4 + 0x40] = a0\n 11884: fallthrough\n      : @398 (gas: 33)\n 11885: t2 = u64 [s1 + 0x158]\n 11889: ra = t2 + 0x20\n 11892: a0 = u64 [s1 + 0xb8]\n 11896: a1 = u64 [s1 + 0x138]\n 11900: a0 = a1 <u a0\n 11903: a2 = u64 [s1 + 0xc0]\n 11907: a1 = a5 ^ a2\n 11910: a2 = a5 <u a2\n 11913: a2 = a0 if a1 == 0\n 11916: a4 = u64 [s1 + 0xc8]\n 11920: t0 = a3 <u a4\n 11923: a0 = a3\n 11925: a3 = u64 [s1 + 0xd0]\n 11929: a1 = u64 [s1 + 0x130]\n 11933: t1 = a1 ^ a3\n 11936: a3 = a1 <u a3\n 11939: a3 = t0 if t1 == 0\n 11942: u64 [s1 + 0x100] = a0\n 11946: a0 = a0 ^ a4\n 11949: a0 = a0 | t1\n 11952: u64 [s1 + 0x128] = ra\n 11956: a4 = ra <u t2\n 11959: a3 = a2 if a0 == 0\n 11962: a0 = u64 [s1 + 0x150]\n 11966: a1 = a0 + a4\n 11969: a0 = a1 <u a0\n 11972: a0 = a4 if a4 == 0\n 11975: a2 = u64 [s1 + 0x148]\n 11979: a4 = a2 + a0\n 11982: a0 = a4 <u a2\n 11985: a2 = u64 [s1 + 0x140]\n 11989: a0 = a0 + a2\n 11992: jump @400 if a3 != 0\n      : @399 (gas: 1)\n 11995: jump @705\n      : @400 (gas: 17)\n 11998: u64 [s1 + 0xe0] = a4\n 12002: u64 [s1 + 0xe8] = a0\n 12006: u64 [s1 + 0xf0] = a1\n 12010: u64 [s1 + 0xf8] = a5\n 12014: a3 = s1 + 0x10d8\n 12018: a0 = u64 [s1 + 0x118]\n 12022: a4 = a3 + 0x300\n 12026: u64 [a4 + 0xc8] = a0\n 12030: a0 = u64 [s1 + 0x120]\n 12034: u64 [a4 + 0xd0] = a0\n 12038: a0 = u64 [s1 + 0x110]\n 12042: u64 [a4 + 0xd8] = a0\n 12046: a0 = s1 + 0x14c0\n 12050: a1 = s1 + 0x14a0\n 12054: a2 = u64 [s1 + 0x108]\n 12058: u64 [a4 + 0xe0] = a2\n 12062: ra = 438, jump @14\n      : @401 [@dyn 219] (gas: 11)\n 12068: a3 = s1 + 0x100\n 12072: a0 = u64 [a3 + 0x48]\n 12075: a1 = u64 [a3 + 0x40]\n 12078: a0 = a0 | a1\n 12081: a1 = u64 [s1 + 0xb0]\n 12085: a2 = u64 [a3 + 0x58]\n 12088: a1 = a2 <u a1\n 12091: a2 = u64 [a3 + 0x50]\n 12094: a1 = 0 if a2 != 0\n 12096: a1 = 0 if a0 != 0\n 12098: jump @403 if a1 != 0\n      : @402 (gas: 1)\n 12101: jump @747\n      : @403 (gas: 16)\n 12104: a4 = s1 + 0x10d8\n 12108: a5 = a4 + 0x300\n 12112: a0 = u64 [a5 + 0xf8]\n 12116: a1 = u64 [a5 + 0xf0]\n 12120: a2 = u64 [a5 + 0xe8]\n 12124: a3 = u64 [s1 + 0xd8]\n 12128: a0 = a0 & a3\n 12131: a1 = a1 & 0xffffffffffffffff\n 12134: a2 = a2 & 0xffffffffffffffff\n 12137: u64 [a4 + 960] = 0\n 12141: u64 [a5 + 0xa8] = a2\n 12145: u64 [a5 + 0xb0] = a1\n 12149: a1 = s1 + 0x1480\n 12153: u64 [a5 + 0xb8] = a0\n 12157: a0 = u64 [s1 + 0x128]\n 12161: ra = 440, jump @12\n      : @404 [@dyn 220] (gas: 41)\n 12167: a4 = s1 + 0x100\n 12171: a1 = u64 [a4 + 0x18]\n 12174: a1 = a1 + 0x1\n 12177: a0 = a1 <u 0x1\n 12180: a2 = u64 [a4 + 0x20]\n 12183: a2 = a2 + a0\n 12186: u64 [a4 + 0x20] = a2\n 12189: u64 [a4 + 0x18] = a1\n 12192: a0 = a1 | a2\n 12195: a0 = a0 <u 0x1\n 12198: a1 = u64 [a4 + 0x10]\n 12201: a0 = a0 + a1\n 12204: a1 = a0 <u a1\n 12207: a2 = u64 [a4 + 0x8]\n 12210: a2 = a2 + a1\n 12213: u64 [a4 + 0x8] = a2\n 12216: a2 = u64 [a4 + 0x38]\n 12219: a2 = a2 + 0x1\n 12222: a1 = a2 <u 0x1\n 12225: a5 = u64 [s1 + 0xf8]\n 12229: a5 = a5 + a1\n 12232: u64 [a4 + 0x38] = a2\n 12235: a1 = a2 | a5\n 12238: a1 = a1 <u 0x1\n 12241: a2 = u64 [a4]\n 12243: a1 = a1 + a2\n 12246: a2 = a1 <u a2\n 12249: a3 = u64 [a4 + 0x30]\n 12252: a3 = a3 + a2\n 12255: u64 [a4 + 0x30] = a3\n 12258: a2 = u64 [a4 + 0x28]\n 12261: u64 [a4 + 0x58] = a2\n 12264: a2 = u64 [s1 + 0xf0]\n 12268: u64 [a4 + 0x50] = a2\n 12271: a2 = u64 [s1 + 0xe0]\n 12275: u64 [a4 + 0x48] = a2\n 12278: a2 = u64 [s1 + 0xe8]\n 12282: u64 [a4 + 0x40] = a2\n 12285: u64 [a4 + 0x10] = a0\n 12288: a3 = a1\n 12290: jump @398\n      : @405 (gas: 1)\n 12293: t0 = 442, jump @1201\n      : @406 [@dyn 221] (gas: 4)\n 12299: ra = 0x1bc\n 12303: ecalli 11 // 'value_transferred'\n 12305: t0 = 0x1be\n 12309: jump @1204\n      : @407 [@dyn 222] (gas: 1)\n 12312: t0 = 446, jump @1204\n      : @408 [@dyn 223] (gas: 1)\n 12318: jump @410 if a0 == 0\n      : @409 (gas: 1)\n 12321: jump @945\n      : @410 (gas: 1)\n 12324: t0 = 448, jump @1251\n      : @411 [@dyn 224] (gas: 1)\n 12330: jump @413 if a1 <u a0\n      : @412 (gas: 1)\n 12333: jump @945\n      : @413 (gas: 4)\n 12336: a0 = s1 + 0x1ce0\n 12340: ra = 0x1c2\n 12344: t0 = 0x4fc\n 12348: jump @1252\n      : @414 [@dyn 225] (gas: 3)\n 12351: t0 = 0x1c4\n 12355: a1 = s1 + 0x18d8\n 12359: fallthrough\n      : @415 [@dyn 226] (gas: 8)\n 12360: a0 = u64 [a1 + 0x408]\n 12364: u64 [s1 + 0x158] = a0\n 12368: a0 = u64 [a1 + 0x410]\n 12372: u64 [s1 + 0x150] = a0\n 12376: a0 = u32 [a1 + 0x418]\n 12380: u64 [s1 + 0x148] = a0\n 12384: a0 = s1 + 0x1cc0\n 12388: ra = 454, jump @1177\n      : @416 [@dyn 227] (gas: 12)\n 12394: a0 = s1 + 0x18d8\n 12398: u64 [a0 + 992] = 0\n 12402: a1 = u64 [s1 + 0x148]\n 12406: a3 = a0 + 0x300\n 12410: u64 [a3 + 0xd8] = a1\n 12414: a1 = u64 [s1 + 0x150]\n 12418: u64 [a3 + 0xd0] = a1\n 12422: a1 = s1 + 0x1ca0\n 12426: a2 = u64 [s1 + 0x158]\n 12430: u64 [a3 + 0xc8] = a2\n 12434: a0 = 0\n 12436: ra = 456, jump @12\n      : @417 [@dyn 228] (gas: 9)\n 12442: a0 = s1 + 0x18d8\n 12446: u64 [a0 + 960] = 0\n 12450: u64 [a0 + 952] = 0\n 12454: u64 [a0 + 944] = 0\n 12458: a3 = a0\n 12460: a0 = 0x20\n 12463: a1 = s1 + 0x1c80\n 12467: u64 [a3 + 936] = 0x1\n 12472: ra = 458, jump @12\n      : @418 [@dyn 229] (gas: 3)\n 12478: a1 = 0x40\n 12481: a0 = 0\n 12483: ra = 460, jump @0\n      : @419 [@dyn 230] (gas: 1)\n 12489: t0 = 462, jump @1202\n      : @420 [@dyn 231] (gas: 4)\n 12495: ra = 0x1d0\n 12499: ecalli 6 // 'hash_keccak_256'\n 12501: t0 = 0x1d2\n 12505: jump @1238\n      : @421 [@dyn 232] (gas: 1)\n 12508: t0 = 466, jump @1238\n      : @422 [@dyn 233] (gas: 10)\n 12514: u64 [s1 + 0x120] = a0\n 12518: a0 = reverse a1\n 12520: u64 [s1 + 0x128] = a0\n 12524: a0 = reverse a2\n 12526: u64 [s1 + 0x138] = a0\n 12530: a0 = reverse a3\n 12532: u64 [s1 + 0x130] = a0\n 12536: a0 = s1 + 0x1c60\n 12540: a1 = 0x40\n 12543: ra = 468, jump @10\n      : @423 [@dyn 234] (gas: 3)\n 12549: a1 = s1 + 0x18d8\n 12553: a5 = a1 + 0x300\n 12557: t0 = 470, jump @1223\n      : @424 [@dyn 235] (gas: 6)\n 12563: i32 a0 = a0 + 0xfffffffffffffc40\n 12567: a0 = a0 + s1\n 12570: u64 [a5 + 0x68] = a3\n 12573: ra = 0x1d8\n 12577: t0 = 0x558\n 12581: jump @1237\n      : @425 [@dyn 236] (gas: 3)\n 12584: a0 = s1 + 0x1c20\n 12588: a1 = 0x40\n 12591: ra = 474, jump @10\n      : @426 [@dyn 237] (gas: 28)\n 12597: a0 = s1 + 0x18d8\n 12601: a5 = a0 + 0x300\n 12605: a2 = u64 [a5 + 0x60]\n 12608: u64 [s1 + 0x118] = a2\n 12612: a3 = u64 [a5 + 0x58]\n 12615: u64 [s1 + 0x110] = a3\n 12619: a4 = u64 [a5 + 0x50]\n 12622: u64 [s1 + 0x108] = a4\n 12626: a1 = u64 [a5 + 0x48]\n 12629: u64 [s1 + 0x100] = a1\n 12633: u64 [a5] = a2\n 12635: a2 = a0 + 0x200\n 12639: u64 [a2 + 0xf8] = a3\n 12643: u64 [a2 + 0xf0] = a4\n 12647: u64 [a2 + 0xe8] = a1\n 12651: a1 = u64 [s1 + 0x130]\n 12655: u64 [a5 + 0x20] = a1\n 12658: a1 = u64 [s1 + 0x138]\n 12662: u64 [a5 + 0x18] = a1\n 12665: a1 = u64 [s1 + 0x128]\n 12669: u64 [a5 + 0x10] = a1\n 12672: a4 = a0\n 12674: a0 = s1 + 0x1c00\n 12678: a1 = s1 + 0x1be0\n 12682: a2 = s1 + 0x1bc0\n 12686: a3 = u64 [s1 + 0x120]\n 12690: u64 [a4 + 0x308] = a3\n 12694: ra = 476, jump @1084\n      : @427 [@dyn 238] (gas: 41)\n 12700: a1 = s1 + 0x18d8\n 12704: a5 = a1 + 0x300\n 12708: a0 = u64 [a5 + 0x30]\n 12711: a2 = u64 [a5 + 0x40]\n 12714: a4 = u64 [a5 + 0x28]\n 12717: u64 [s1 + 0xf8] = a4\n 12721: a3 = u64 [a5 + 0x38]\n 12724: t0 = u64 [s1 + 0x108]\n 12728: ra = a0 ^ t0\n 12731: a5 = a0 <u t0\n 12734: t1 = u64 [s1 + 0x100]\n 12738: t2 = a4 <u t1\n 12741: a5 = t2 if ra == 0\n 12744: a1 = u64 [s1 + 0x110]\n 12748: a4 = a3 - a1\n 12751: a3 = a3 <u a1\n 12754: ra = a1\n 12756: a1 = u64 [s1 + 0x118]\n 12760: a2 = a2 - a1\n 12763: a2 = a2 - a3\n 12766: a3 = a4 <u a5\n 12769: a2 = a2 - a3\n 12772: a4 = a4 - a5\n 12775: a0 = a0 - t0\n 12778: t2 = a0 - t2\n 12781: a3 = u64 [s1 + 0xf8]\n 12785: a3 = a3 - t1\n 12788: a0 = s1 + 0x18d8\n 12792: a5 = a0 + 0x200\n 12796: u64 [a5 + 0xa8] = a3\n 12800: u64 [a5 + 0xe0] = a1\n 12804: u64 [a0 + 0x2d8] = ra\n 12808: u64 [a0 + 0x2d0] = t0\n 12812: u64 [a0 + 0x2c8] = t1\n 12816: u64 [a0 + 0x2b0] = t2\n 12820: u64 [a5 + 0xb8] = a4\n 12824: a3 = a0\n 12826: a0 = s1 + 0x1ba0\n 12830: a1 = s1 + 0x1b80\n 12834: u64 [a3 + 0x2c0] = a2\n 12838: ra = 478, jump @1126\n      : @428 [@dyn 239] (gas: 1)\n 12844: t0 = 480, jump @1233\n      : @429 [@dyn 240] (gas: 1)\n 12850: jump @431 if a0 == 0\n      : @430 (gas: 1)\n 12853: jump @747\n      : @431 (gas: 13)\n 12856: a2 = s1 + 0x18d8\n 12860: a0 = u64 [s1 + 0x100]\n 12864: a3 = a2 + 0x200\n 12868: u64 [a3 + 0x88] = a0\n 12872: a0 = u64 [s1 + 0x108]\n 12876: u64 [a3 + 0x90] = a0\n 12880: a0 = u64 [s1 + 0x110]\n 12884: u64 [a3 + 0x98] = a0\n 12888: a1 = s1 + 0x1b60\n 12892: a0 = u64 [s1 + 0x118]\n 12896: u64 [a3 + 0xa0] = a0\n 12900: a0 = u64 [s1 + 0x158]\n 12904: ra = 482, jump @12\n      : @432 [@dyn 241] (gas: 3)\n 12910: a0 = s1 + 0x1b40\n 12914: a1 = 0x40\n 12917: ra = 484, jump @10\n      : @433 [@dyn 242] (gas: 34)\n 12923: a5 = s1 + 0x18d8\n 12927: t1 = u64 [a5 + 0x280]\n 12931: u64 [s1 + 0x118] = t1\n 12935: t2 = u64 [a5 + 0x278]\n 12939: u64 [s1 + 0x110] = t2\n 12943: ra = u64 [a5 + 0x270]\n 12947: u64 [s1 + 0x108] = ra\n 12951: t0 = u64 [a5 + 0x268]\n 12955: u64 [s1 + 0x100] = t0\n 12959: a3 = u64 [s1 + 0x120]\n 12963: a3 = a3 + 0x1\n 12966: a0 = a3 <u 0x1\n 12969: a1 = u64 [s1 + 0x128]\n 12973: a0 = a0 + a1\n 12976: a1 = a3 | a0\n 12979: a1 = a1 <u 0x1\n 12982: a2 = u64 [s1 + 0x138]\n 12986: a1 = a1 + a2\n 12989: a2 = a1 <u a2\n 12992: a4 = u64 [s1 + 0x130]\n 12996: a2 = a2 + a4\n 12999: u64 [a5 + 0x220] = t1\n 13003: u64 [a5 + 0x218] = t2\n 13007: u64 [a5 + 0x210] = ra\n 13011: u64 [a5 + 0x208] = t0\n 13015: a4 = a5 + 0x200\n 13019: u64 [a4 + 0x40] = a2\n 13022: u64 [a4 + 0x38] = a1\n 13025: u64 [a4 + 0x30] = a0\n 13028: a0 = s1 + 0x1b20\n 13032: a1 = s1 + 0x1b00\n 13036: a2 = s1 + 0x1ae0\n 13040: u64 [a4 + 0x28] = a3\n 13043: ra = 486, jump @1084\n      : @434 [@dyn 243] (gas: 40)\n 13049: a1 = s1 + 0x18d8\n 13053: a5 = a1 + 0x200\n 13057: a0 = u64 [a5 + 0x50]\n 13060: a2 = u64 [a5 + 0x60]\n 13063: a4 = u64 [a5 + 0x48]\n 13066: u64 [s1 + 0x138] = a4\n 13070: a3 = u64 [a5 + 0x58]\n 13073: t0 = u64 [s1 + 0x108]\n 13077: ra = a0 ^ t0\n 13080: a5 = a0 <u t0\n 13083: t1 = u64 [s1 + 0x100]\n 13087: t2 = a4 <u t1\n 13090: a5 = t2 if ra == 0\n 13093: a1 = u64 [s1 + 0x110]\n 13097: a4 = a3 - a1\n 13100: a3 = a3 <u a1\n 13103: ra = a1\n 13105: a1 = u64 [s1 + 0x118]\n 13109: a2 = a2 - a1\n 13112: a2 = a2 - a3\n 13115: a3 = a4 <u a5\n 13118: a2 = a2 - a3\n 13121: a4 = a4 - a5\n 13124: a0 = a0 - t0\n 13127: t2 = a0 - t2\n 13130: a3 = u64 [s1 + 0x138]\n 13134: a3 = a3 - t1\n 13137: a0 = s1 + 0x18d8\n 13141: u64 [a0 + 0x1c8] = a3\n 13145: u64 [a0 + 0x200] = a1\n 13149: u64 [a0 + 0x1f8] = ra\n 13153: u64 [a0 + 0x1f0] = t0\n 13157: u64 [a0 + 0x1e8] = t1\n 13161: u64 [a0 + 0x1d0] = t2\n 13165: u64 [a0 + 0x1d8] = a4\n 13169: a3 = a0\n 13171: a0 = s1 + 0x1ac0\n 13175: a1 = s1 + 0x1aa0\n 13179: u64 [a3 + 0x1e0] = a2\n 13183: ra = 488, jump @1126\n      : @435 [@dyn 244] (gas: 11)\n 13189: a3 = s1 + 0x100\n 13193: a0 = u64 [a3 + 0x48]\n 13196: a1 = u64 [a3 + 0x40]\n 13199: a0 = a0 | a1\n 13202: a1 = 0xffffffe0\n 13212: a2 = u64 [a3 + 0x58]\n 13215: a1 = a2 <u a1\n 13218: a2 = u64 [a3 + 0x50]\n 13221: a1 = 0 if a2 != 0\n 13223: a1 = 0 if a0 != 0\n 13225: jump @437 if a1 != 0\n      : @436 (gas: 1)\n 13228: jump @747\n      : @437 (gas: 16)\n 13231: a0 = u64 [s1 + 0x158]\n 13235: i32 a2 = a0 + 0x20\n 13238: a3 = s1 + 0x18d8\n 13242: a0 = u64 [s1 + 0x100]\n 13246: a4 = a3 + 0x100\n 13250: u64 [a4 + 0xa8] = a0\n 13254: a0 = u64 [s1 + 0x108]\n 13258: u64 [a4 + 0xb0] = a0\n 13262: a0 = u64 [s1 + 0x110]\n 13266: u64 [a4 + 0xb8] = a0\n 13270: a1 = s1 + 0x1a80\n 13274: a0 = u64 [s1 + 0x118]\n 13278: u64 [a4 + 0xc0] = a0\n 13282: u64 [s1 + 0x130] = a2\n 13286: a0 = a2\n 13288: ra = 490, jump @12\n      : @438 [@dyn 245] (gas: 3)\n 13294: a0 = s1 + 0x1a60\n 13298: a1 = 0x40\n 13301: ra = 492, jump @10\n      : @439 [@dyn 246] (gas: 18)\n 13307: a4 = s1 + 0x18d8\n 13311: a5 = a4 + 0x100\n 13315: a2 = u64 [a5 + 0xa0]\n 13319: a3 = u64 [a5 + 0x98]\n 13323: a1 = u64 [a5 + 0x90]\n 13327: a0 = u64 [a5 + 0x88]\n 13331: a5 = s1 + 0x100\n 13335: u64 [a5 + 0x50] = a1\n 13338: u64 [a5 + 0x48] = a2\n 13341: a2 = a2 | a1\n 13344: a1 = a0 | a3\n 13347: a1 = a1 | a2\n 13350: a1 = a1 >> 0x20\n 13353: u64 [a5 + 0x40] = a3\n 13356: a2 = a2 | a3\n 13359: a2 = a2 << 0x20\n 13362: a1 = a1 | a2\n 13365: jump @441 if a1 == 0\n      : @440 (gas: 1)\n 13368: jump @747\n      : @441 (gas: 7)\n 13371: u64 [a4 + 384] = 0\n 13375: u64 [a4 + 376] = 0\n 13379: u64 [a4 + 368] = 0\n 13383: a1 = s1 + 0x1a40\n 13387: u64 [a4 + 360] = 0x20\n 13392: u64 [s1 + 0x138] = a0\n 13396: ra = 494, jump @12\n      : @442 [@dyn 247] (gas: 3)\n 13402: a0 = s1 + 0x1a20\n 13406: a1 = u64 [s1 + 0x158]\n 13410: ra = 496, jump @10\n      : @443 [@dyn 248] (gas: 12)\n 13416: a5 = s1 + 0x100\n 13420: a1 = u64 [a5 + 0x38]\n 13423: a0 = u64 [a5 + 0x48]\n 13426: a2 = u64 [a5 + 0x40]\n 13429: a3 = a2 | a0\n 13432: a4 = 0x100000000\n 13442: a0 = 0xffffffe0\n 13452: a0 = a1 <u a0\n 13455: a2 = u64 [a5 + 0x50]\n 13458: a0 = 0 if a2 != 0\n 13460: a0 = 0 if a3 != 0\n 13462: jump @445 if a0 != 0\n      : @444 (gas: 1)\n 13465: jump @747\n      : @445 (gas: 21)\n 13468: a2 = s1 + 0x18d8\n 13472: a5 = a2 + 0x100\n 13476: a0 = u64 [a5 + 0x60]\n 13479: u64 [s1 + 0x118] = a0\n 13483: a0 = u64 [a5 + 0x58]\n 13486: u64 [s1 + 0x120] = a0\n 13490: a0 = u64 [a5 + 0x50]\n 13493: u64 [s1 + 0x128] = a0\n 13497: a0 = u64 [a5 + 0x48]\n 13500: u64 [s1 + 0x158] = a0\n 13504: i32 a1 = a1 + 0\n 13506: u64 [s1 + 0x100] = a1\n 13510: i32 a0 = a1 + 0x20\n 13513: u64 [a2 + 320] = 0\n 13517: u64 [a2 + 312] = 0\n 13521: u64 [a5 + 40] = 0x40\n 13525: a1 = s1 + 0x1a00\n 13529: u64 [a2 + 304] = 0\n 13533: u64 [s1 + 0x110] = a3\n 13537: u64 [s1 + 0x108] = a4\n 13541: ra = 498, jump @12\n      : @446 [@dyn 249] (gas: 6)\n 13547: a0 = u64 [s1 + 0x138]\n 13551: a0 = a0 + 0x60\n 13554: a1 = u64 [s1 + 0x138]\n 13558: a1 = a0 <u a1\n 13561: a3 = u64 [s1 + 0x150]\n 13565: t0 = 500, jump @1243\n      : @447 [@dyn 250] (gas: 23)\n 13571: a1 = u64 [s1 + 0x140]\n 13575: a3 = a3 + a1\n 13578: a1 = a3 <u a1\n 13581: a4 = u64 [s1 + 0x148]\n 13585: a4 = a4 + a1\n 13588: a1 = s1 + 0x18d8\n 13592: u64 [a1 + 0xd0] = a2\n 13596: u64 [a1 + 0xc8] = a0\n 13600: a0 = u64 [s1 + 0x118]\n 13604: u64 [a1 + 0x100] = a0\n 13608: a0 = u64 [s1 + 0x120]\n 13612: u64 [a1 + 0xf8] = a0\n 13616: a0 = u64 [s1 + 0x128]\n 13620: u64 [a1 + 0xf0] = a0\n 13624: a0 = u64 [s1 + 0x158]\n 13628: u64 [a1 + 0xe8] = a0\n 13632: u64 [a1 + 0xd8] = a3\n 13636: a3 = a1\n 13638: a0 = s1 + 0x19e0\n 13642: a1 = s1 + 0x19c0\n 13646: a2 = s1 + 0x19a0\n 13650: u64 [a3 + 0xe0] = a4\n 13654: ra = 502, jump @1057\n      : @448 [@dyn 251] (gas: 3)\n 13660: t0 = 0x1f8\n 13664: a1 = s1 + 0x18d8\n 13668: fallthrough\n      : @449 [@dyn 252] (gas: 12)\n 13669: a2 = a1 + 0x100\n 13673: a0 = u64 [a2 + 0x20]\n 13676: u64 [s1 + 0x118] = a0\n 13680: a0 = u64 [a2 + 0x18]\n 13683: u64 [s1 + 0x120] = a0\n 13687: a0 = u64 [a2 + 0x10]\n 13690: u64 [s1 + 0x128] = a0\n 13694: a0 = u64 [a2 + 0x8]\n 13697: u64 [s1 + 0x158] = a0\n 13701: a0 = s1 + 0x1980\n 13705: a1 = u64 [s1 + 0x130]\n 13709: ra = 506, jump @10\n      : @450 [@dyn 253] (gas: 10)\n 13715: a2 = s1 + 0x100\n 13719: a3 = u64 [a2 + 0x38]\n 13722: a0 = u64 [a2 + 0x8]\n 13725: a0 = a0 + 0xffffffffffffffc0\n 13728: a0 = a3 <u a0\n 13731: a1 = u64 [a2 + 0x50]\n 13734: a0 = 0 if a1 != 0\n 13736: a1 = u64 [a2 + 0x10]\n 13739: a0 = 0 if a1 != 0\n 13741: jump @452 if a0 != 0\n      : @451 (gas: 1)\n 13744: jump @747\n      : @452 (gas: 55)\n 13747: a1 = s1 + 0x18d8\n 13751: a0 = u64 [a1 + 0xc0]\n 13755: u64 [s1 + 0x110] = a0\n 13759: a0 = u64 [a1 + 0xb8]\n 13763: u64 [s1 + 0x130] = a0\n 13767: a0 = u64 [s1 + 0x158]\n 13771: a2 = a0 <u a3\n 13774: t2 = a0\n 13776: a4 = u64 [s1 + 0x150]\n 13780: a1 = u64 [s1 + 0x128]\n 13784: t0 = a1 ^ a4\n 13787: a0 = a1 <u a4\n 13790: a5 = a1\n 13792: a0 = a2 if t0 == 0\n 13795: t1 = u64 [s1 + 0x140]\n 13799: t0 = u64 [s1 + 0x120]\n 13803: ra = t0 - t1\n 13806: a1 = a3\n 13808: a3 = a5 - a4\n 13811: a4 = a3 - a2\n 13814: a3 = t2 - a1\n 13817: t2 = a3 + 0xffffffffffffffe0\n 13820: a5 = t2 <u a3\n 13823: a3 = a4 + a5\n 13826: a3 = a3 + 0xffffffffffffffff\n 13829: a1 = a3 ^ a4\n 13832: a4 = a3 <u a4\n 13835: a4 = a5 if a1 == 0\n 13838: t0 = t0 <u t1\n 13841: a2 = u64 [s1 + 0x148]\n 13845: a5 = u64 [s1 + 0x118]\n 13849: a5 = a5 - a2\n 13852: a5 = a5 - t0\n 13855: a1 = ra <u a0\n 13858: t0 = a5 - a1\n 13861: a5 = s1 + 0x18d8\n 13865: a1 = u64 [a5 + 0xb0]\n 13869: u64 [s1 + 0xf8] = a1\n 13873: a0 = ra - a0\n 13876: a1 = a0 <u 0x1\n 13879: a2 = t0 - a1\n 13882: a1 = u64 [a5 + 0xa8]\n 13886: u64 [s1 + 0x108] = a1\n 13890: a0 = a0 + 0xffffffffffffffff\n 13893: a4 = a4 + a0\n 13896: a0 = a4 <u a0\n 13899: a2 = a2 + a0\n 13902: a0 = u64 [s1 + 0x100]\n 13906: i32 a0 = a0 + 0x40\n 13909: u64 [a5 + 0x88] = t2\n 13913: u64 [a5 + 0x90] = a3\n 13917: u64 [a5 + 0x98] = a4\n 13921: a1 = s1 + 0x1960\n 13925: u64 [a5 + 0xa0] = a2\n 13929: ra = 508, jump @12\n      : @453 [@dyn 254] (gas: 22)\n 13935: a0 = s1 + 0x18d8\n 13939: a1 = u64 [s1 + 0x118]\n 13943: u64 [a0 + 0x40] = a1\n 13946: a1 = u64 [s1 + 0x120]\n 13950: u64 [a0 + 0x38] = a1\n 13953: a1 = u64 [s1 + 0x128]\n 13957: u64 [a0 + 0x30] = a1\n 13960: a1 = u64 [s1 + 0x158]\n 13964: u64 [a0 + 0x28] = a1\n 13967: a1 = u64 [s1 + 0x110]\n 13971: u64 [a0 + 0x60] = a1\n 13974: a1 = u64 [s1 + 0x130]\n 13978: u64 [a0 + 0x58] = a1\n 13981: a1 = u64 [s1 + 0xf8]\n 13985: u64 [a0 + 0x50] = a1\n 13988: a4 = a0\n 13990: a0 = s1 + 0x1940\n 13994: a1 = s1 + 0x1920\n 13998: a2 = s1 + 0x1900\n 14002: a3 = u64 [s1 + 0x108]\n 14006: u64 [a4 + 0x48] = a3\n 14009: ra = 510, jump @1057\n      : @454 [@dyn 255] (gas: 26)\n 14015: a1 = s1 + 0x18d8\n 14019: a0 = u64 [a1 + 0x70]\n 14022: t0 = u64 [a1 + 0x80]\n 14026: t1 = u64 [a1 + 0x68]\n 14029: a3 = u64 [a1 + 0x78]\n 14032: a1 = u64 [s1 + 0x150]\n 14036: a4 = a0 ^ a1\n 14039: a5 = a0 <u a1\n 14042: t2 = a1\n 14044: ra = u64 [s1 + 0x138]\n 14048: a1 = t1 <u ra\n 14051: a5 = a1 if a4 == 0\n 14054: a2 = u64 [s1 + 0x140]\n 14058: a4 = a3 - a2\n 14061: a3 = a3 <u a2\n 14064: a2 = u64 [s1 + 0x148]\n 14068: a2 = t0 - a2\n 14071: a2 = a2 - a3\n 14074: a3 = a4 <u a5\n 14077: a2 = a2 - a3\n 14080: a4 = a4 - a5\n 14083: a0 = a0 - t2\n 14086: a1 = a0 - a1\n 14089: a0 = t1 - ra\n 14092: a1 = a1 | a2\n 14095: t0 = 512, jump @1235\n      : @455 [@dyn 256] (gas: 1)\n 14101: jump @457 if a1 == 0\n      : @456 (gas: 1)\n 14104: jump @747\n      : @457 (gas: 5)\n 14107: i32 a1 = a0 + 0\n 14109: u64 [s1 + 0x158] = a1\n 14113: a0 = u64 [s1 + 0x100]\n 14117: ra = 0x4ec\n 14121: jump @0\n      : @458 (gas: 1)\n 14124: t0 = 514, jump @1201\n      : @459 [@dyn 257] (gas: 4)\n 14130: ra = 0x204\n 14134: ecalli 11 // 'value_transferred'\n 14136: t0 = 0x206\n 14140: jump @1204\n      : @460 [@dyn 258] (gas: 1)\n 14143: t0 = 518, jump @1204\n      : @461 [@dyn 259] (gas: 1)\n 14149: jump @463 if a0 == 0\n      : @462 (gas: 1)\n 14152: jump @945\n      : @463 (gas: 1)\n 14155: t0 = 520, jump @1251\n      : @464 [@dyn 260] (gas: 1)\n 14161: jump @466 if a1 <u a0\n      : @465 (gas: 1)\n 14164: jump @945\n      : @466 (gas: 4)\n 14167: a0 = s1 + 0x2ea0\n 14171: ra = 0x20a\n 14175: t0 = 0x4fc\n 14179: jump @1252\n      : @467 [@dyn 261] (gas: 16)\n 14182: a1 = s1 + 0x28d8\n 14186: a2 = a1 + 0x500\n 14190: a0 = u64 [a2 + 0xd8]\n 14194: u64 [s1 + 0x118] = a0\n 14198: a0 = u64 [a2 + 0xd0]\n 14202: u64 [s1 + 0xc0] = a0\n 14206: a0 = u64 [a2 + 0xc8]\n 14210: u64 [s1 + 0xc8] = a0\n 14214: u64 [a1 + 1440] = 0\n 14218: u64 [a1 + 1432] = 0\n 14222: u64 [a1 + 1424] = 0\n 14226: a2 = a1\n 14228: a0 = s1 + 0x2e80\n 14232: a1 = s1 + 0x2e60\n 14236: u64 [a2 + 1416] = 0\n 14240: ra = 524, jump @14\n      : @468 [@dyn 262] (gas: 41)\n 14246: a0 = s1 + 0x28d8\n 14250: a1 = u64 [a0 + 0x5b0]\n 14254: u64 [s1 + 0x158] = a1\n 14258: a1 = u64 [a0 + 0x5a8]\n 14262: u64 [s1 + 0x150] = a1\n 14266: a0 = u32 [a0 + 0x5b8]\n 14270: u64 [s1 + 0x148] = a0\n 14274: a0 = s1 + 0x4000\n 14278: i32 a0 = a0 + 0xfffffffffffffc00\n 14282: ecalli 3 // 'caller'\n 14284: a2 = s1 + 0x38d8\n 14288: a3 = a2 + 0x300\n 14292: a0 = u64 [a3 + 0x30]\n 14295: a1 = u64 [a3 + 0x28]\n 14298: a2 = i32 [a3 + 0x38]\n 14301: a0 = reverse a0\n 14303: a3 = a0 >> 0x20\n 14306: a1 = reverse a1\n 14308: a4 = a1 << 0x20\n 14311: a3 = a3 | a4\n 14314: a0 = a0 << 0x20\n 14317: a2 = reverse a2\n 14319: a2 = a2 >> 0x20\n 14322: a0 = a0 | a2\n 14325: a1 = a1 >> 0x20\n 14328: a2 = u64 [s1 + 0x148]\n 14332: a1 = a1 ^ a2\n 14335: a2 = u64 [s1 + 0x150]\n 14339: a0 = a0 ^ a2\n 14342: a0 = a0 | a1\n 14345: a1 = u64 [s1 + 0x158]\n 14349: a1 = a1 ^ a3\n 14352: a0 = a0 | a1\n 14355: a0 = a0 <u 0x1\n 14358: a1 = s1 + 0x28d8\n 14362: u64 [a1 + 1408] = 0\n 14366: u64 [a1 + 1400] = 0\n 14370: u64 [a1 + 0x568] = a0\n 14374: a0 = s1 + 0x2e40\n 14378: u64 [a1 + 1392] = 0\n 14382: ra = 526, jump @1185\n      : @469 [@dyn 263] (gas: 3)\n 14388: a0 = s1 + 0x2e20\n 14392: a1 = 0x40\n 14395: ra = 528, jump @10\n      : @470 [@dyn 264] (gas: 18)\n 14401: a4 = s1 + 0x28d8\n 14405: a5 = a4 + 0x500\n 14409: a2 = u64 [a5 + 0x60]\n 14412: a3 = u64 [a5 + 0x58]\n 14415: a0 = u64 [a5 + 0x50]\n 14418: a1 = u64 [a5 + 0x48]\n 14421: u64 [s1 + 0x128] = a2\n 14425: u64 [a5 + 0x40] = a2\n 14428: u64 [s1 + 0x120] = a3\n 14432: u64 [a5 + 0x38] = a3\n 14435: u64 [s1 + 0x130] = a0\n 14439: u64 [a5 + 0x30] = a0\n 14442: a0 = s1 + 0x2e00\n 14446: u64 [s1 + 0x138] = a1\n 14450: u64 [a5 + 0x28] = a1\n 14453: ra = 0x212\n 14457: t0 = 0x558\n 14461: jump @1237\n      : @471 [@dyn 265] (gas: 3)\n 14464: a0 = s1 + 0x2de0\n 14468: a1 = 0x40\n 14471: ra = 532, jump @10\n      : @472 [@dyn 266] (gas: 21)\n 14477: a0 = s1 + 0x28d8\n 14481: a3 = u64 [a0 + 0x520]\n 14485: u64 [s1 + 0x150] = a3\n 14489: a2 = u64 [a0 + 0x518]\n 14493: u64 [s1 + 0x148] = a2\n 14497: a5 = u64 [a0 + 0x510]\n 14501: u64 [s1 + 0x140] = a5\n 14505: a4 = u64 [a0 + 0x508]\n 14509: u64 [s1 + 0x158] = a4\n 14513: u64 [a0 + 1248] = 0\n 14517: u64 [a0 + 1240] = 0\n 14521: u64 [a0 + 1232] = 0\n 14525: u64 [a0 + 1224] = 0x40\n 14530: u64 [a0 + 0x500] = a3\n 14534: u64 [a0 + 0x4f8] = a2\n 14538: u64 [a0 + 0x4f0] = a5\n 14542: a2 = a0\n 14544: a0 = s1 + 0x2dc0\n 14548: a1 = s1 + 0x2da0\n 14552: u64 [a2 + 0x4e8] = a4\n 14556: ra = 534, jump @1126\n      : @473 [@dyn 267] (gas: 1)\n 14562: t0 = 536, jump @1232\n      : @474 [@dyn 268] (gas: 1)\n 14568: jump @476 if a0 == 0\n      : @475 (gas: 1)\n 14571: jump @747\n      : @476 (gas: 8)\n 14574: a2 = s1 + 0x28d8\n 14578: u64 [a2 + 1216] = 0\n 14582: u64 [a2 + 1208] = 0\n 14586: u64 [a2 + 1200] = 0\n 14590: a1 = s1 + 0x2d80\n 14594: u64 [a2 + 1192] = 0x8\n 14599: a0 = u64 [s1 + 0x158]\n 14603: ra = 538, jump @12\n      : @477 [@dyn 269] (gas: 11)\n 14609: a3 = s1 + 0x100\n 14613: a0 = u64 [a3 + 0x50]\n 14616: a1 = u64 [a3 + 0x48]\n 14619: a0 = a0 | a1\n 14622: a1 = 0xffffffe0\n 14632: a2 = u64 [a3 + 0x58]\n 14635: a1 = a2 <u a1\n 14638: a2 = u64 [a3 + 0x40]\n 14641: a1 = 0 if a2 != 0\n 14643: a1 = 0 if a0 != 0\n 14645: jump @479 if a1 != 0\n      : @478 (gas: 1)\n 14648: jump @747\n      : @479 (gas: 11)\n 14651: a0 = u64 [s1 + 0x158]\n 14655: i32 a0 = a0 + 0x20\n 14658: a3 = s1 + 0x28d8\n 14662: u64 [a3 + 1176] = 0\n 14666: a2 = u64 [0x20058]\n 14671: u64 [a3 + 1168] = 0\n 14675: u64 [a3 + 1160] = 0\n 14679: a1 = s1 + 0x2d60\n 14683: u64 [s1 + 0xb8] = a2\n 14687: u64 [a3 + 0x4a0] = a2\n 14691: ra = 540, jump @12\n      : @480 [@dyn 270] (gas: 13)\n 14697: a5 = s1 + 0x100\n 14701: a2 = u64 [a5 + 0x38]\n 14704: a4 = u64 [a5 + 0x20]\n 14707: a0 = a2 | a4\n 14710: a1 = u64 [a5 + 0x30]\n 14713: a3 = u64 [a5 + 0x28]\n 14716: a1 = a1 | a3\n 14719: a0 = a0 | a1\n 14722: a0 = a0 >> 0x20\n 14725: a1 = a1 | a4\n 14728: a1 = a1 << 0x20\n 14731: a0 = a0 | a1\n 14734: jump @482 if a0 == 0\n      : @481 (gas: 1)\n 14737: jump @747\n      : @482 (gas: 13)\n 14740: a3 = s1 + 0x28d8\n 14744: a0 = u64 [s1 + 0x158]\n 14748: a4 = a3 + 0x400\n 14752: u64 [a4 + 0x68] = a0\n 14755: a0 = u64 [s1 + 0x140]\n 14759: u64 [a4 + 0x70] = a0\n 14762: a0 = u64 [s1 + 0x148]\n 14766: u64 [a4 + 0x78] = a0\n 14769: a1 = s1 + 0x2d40\n 14773: a0 = u64 [s1 + 0x150]\n 14777: u64 [a4 + 0x80] = a0\n 14781: a0 = a2\n 14783: ra = 542, jump @12\n      : @483 [@dyn 271] (gas: 3)\n 14789: a0 = s1 + 0x2d20\n 14793: a1 = 0x40\n 14796: ra = 544, jump @10\n      : @484 [@dyn 272] (gas: 22)\n 14802: a0 = s1 + 0x28d8\n 14806: a2 = u64 [a0 + 0x460]\n 14810: u64 [s1 + 0x150] = a2\n 14814: a1 = u64 [a0 + 0x458]\n 14818: u64 [s1 + 0x148] = a1\n 14822: a4 = u64 [a0 + 0x450]\n 14826: u64 [s1 + 0x140] = a4\n 14830: a3 = u64 [a0 + 0x448]\n 14834: u64 [s1 + 0x158] = a3\n 14838: u64 [a0 + 1056] = 0\n 14842: u64 [a0 + 1048] = 0\n 14846: u64 [a0 + 1040] = 0\n 14850: u64 [a0 + 1032] = 0x40\n 14855: a5 = a0 + 0x400\n 14859: u64 [a5 + 0x40] = a2\n 14862: u64 [a5 + 0x38] = a1\n 14865: u64 [a5 + 0x30] = a4\n 14868: a2 = a0\n 14870: a0 = s1 + 0x2d00\n 14874: a1 = s1 + 0x2ce0\n 14878: u64 [a2 + 0x428] = a3\n 14882: ra = 546, jump @1126\n      : @485 [@dyn 273] (gas: 1)\n 14888: t0 = 548, jump @1232\n      : @486 [@dyn 274] (gas: 1)\n 14894: jump @488 if a0 == 0\n      : @487 (gas: 1)\n 14897: jump @747\n      : @488 (gas: 8)\n 14900: a2 = s1 + 0x28d8\n 14904: u64 [a2 + 1024] = 0\n 14908: u64 [a2 + 1016] = 0\n 14912: u64 [a2 + 1008] = 0\n 14916: a1 = s1 + 0x2cc0\n 14920: u64 [a2 + 1000] = 0x3\n 14925: a0 = u64 [s1 + 0x158]\n 14929: ra = 550, jump @12\n      : @489 [@dyn 275] (gas: 11)\n 14935: a4 = s1 + 0x100\n 14939: a0 = u64 [a4 + 0x50]\n 14942: a1 = u64 [a4 + 0x48]\n 14945: a0 = a0 | a1\n 14948: a3 = 0xffffffe0\n 14958: a1 = u64 [a4 + 0x58]\n 14961: a1 = a1 <u a3\n 14964: a2 = u64 [a4 + 0x40]\n 14967: a1 = 0 if a2 != 0\n 14969: a1 = 0 if a0 != 0\n 14971: jump @491 if a1 != 0\n      : @490 (gas: 1)\n 14974: jump @747\n      : @491 (gas: 11)\n 14977: a0 = u64 [s1 + 0x158]\n 14981: i32 a0 = a0 + 0x20\n 14984: a2 = s1 + 0x28d8\n 14988: u64 [a2 + 984] = 0\n 14992: u64 [a2 + 976] = 0\n 14996: a1 = 0x4450540000000000\n 15006: u64 [a2 + 0x3e0] = a1\n 15010: a1 = s1 + 0x2ca0\n 15014: u64 [a2 + 968] = 0\n 15018: u64 [s1 + 0x110] = a3\n 15022: ra = 552, jump @12\n      : @492 [@dyn 276] (gas: 11)\n 15028: a4 = s1 + 0x100\n 15032: a0 = u64 [a4 + 0x28]\n 15035: a1 = u64 [a4 + 0x20]\n 15038: a0 = a0 | a1\n 15041: a2 = u64 [a4 + 0x38]\n 15044: a1 = u64 [a4 + 0x10]\n 15047: a1 = a2 <u a1\n 15050: a3 = u64 [a4 + 0x30]\n 15053: a1 = 0 if a3 != 0\n 15055: a1 = 0 if a0 != 0\n 15057: jump @494 if a1 != 0\n      : @493 (gas: 1)\n 15060: jump @747\n      : @494 (gas: 14)\n 15063: i32 a0 = a2 + 0x20\n 15066: a4 = s1 + 0x28d8\n 15070: a1 = u64 [s1 + 0x158]\n 15074: a2 = a4 + 0x300\n 15078: u64 [a2 + 0xa8] = a1\n 15082: a1 = u64 [s1 + 0x140]\n 15086: u64 [a2 + 0xb0] = a1\n 15090: a1 = u64 [s1 + 0x148]\n 15094: u64 [a2 + 0xb8] = a1\n 15098: a1 = s1 + 0x2c80\n 15102: a3 = u64 [s1 + 0x150]\n 15106: u64 [a2 + 0xc0] = a3\n 15110: u64 [s1 + 0x80] = a0\n 15114: ra = 554, jump @12\n      : @495 [@dyn 277] (gas: 15)\n 15120: a0 = u64 [s1 + 0x118]\n 15124: a0 = a0 << 0x20\n 15127: a0 = a0 >> 0x20\n 15130: a2 = s1 + 0x28d8\n 15134: u64 [a2 + 928] = 0\n 15138: u64 [s1 + 0x78] = a0\n 15141: a3 = a2 + 0x300\n 15145: u64 [a3 + 0x98] = a0\n 15149: a0 = u64 [s1 + 0xc0]\n 15153: u64 [a3 + 0x90] = a0\n 15157: a1 = s1 + 0x2c60\n 15161: a0 = u64 [s1 + 0xc8]\n 15165: u64 [a3 + 0x88] = a0\n 15169: a0 = 0\n 15171: ra = 556, jump @12\n      : @496 [@dyn 278] (gas: 8)\n 15177: a2 = s1 + 0x28d8\n 15181: u64 [a2 + 896] = 0\n 15185: u64 [a2 + 888] = 0\n 15189: u64 [a2 + 872] = 0x1\n 15194: a0 = 0x20\n 15197: a1 = s1 + 0x2c40\n 15201: u64 [a2 + 880] = 0\n 15205: ra = 558, jump @12\n      : @497 [@dyn 279] (gas: 3)\n 15211: a1 = 0x40\n 15214: a0 = 0\n 15216: ra = 560, jump @0\n      : @498 [@dyn 280] (gas: 1)\n 15222: t0 = 562, jump @1202\n      : @499 [@dyn 281] (gas: 14)\n 15228: ecalli 6 // 'hash_keccak_256'\n 15230: a2 = s1 + 0x100\n 15234: a1 = u64 [a2 + 0x58]\n 15237: a0 = u64 [a1 + 0x18]\n 15240: u64 [a2 + 0x48] = a0\n 15243: a0 = u64 [a1 + 0x10]\n 15246: u64 [a2 + 0x40] = a0\n 15249: a0 = u64 [a1 + 0x8]\n 15252: u64 [a2 + 0x30] = a0\n 15255: a0 = u64 [a1]\n 15257: u64 [a2 + 0x28] = a0\n 15260: a0 = s1 + 0x2c20\n 15264: a1 = u64 [a2 + 0x38]\n 15267: ra = 564, jump @10\n      : @500 [@dyn 282] (gas: 17)\n 15273: a1 = s1 + 0x28d8\n 15277: a4 = a1 + 0x300\n 15281: a2 = u64 [a4 + 0x60]\n 15284: a3 = u64 [a4 + 0x58]\n 15287: a0 = u64 [a4 + 0x50]\n 15290: a1 = u64 [a4 + 0x48]\n 15293: u64 [s1 + 0xf8] = a0\n 15297: u64 [s1 + 0xf0] = a2\n 15301: a0 = a0 | a2\n 15304: a2 = a1 | a3\n 15307: a2 = a2 | a0\n 15310: a2 = a2 >> 0x20\n 15313: u64 [s1 + 0xe8] = a3\n 15317: a0 = a0 | a3\n 15320: a0 = a0 << 0x20\n 15323: a0 = a0 | a2\n 15326: jump @502 if a0 == 0\n      : @501 (gas: 1)\n 15329: jump @747\n      : @502 (gas: 3)\n 15332: a0 = s1 + 0x2c00\n 15336: u64 [s1 + 0xd8] = a1\n 15340: ra = 566, jump @10\n      : @503 [@dyn 283] (gas: 14)\n 15346: a2 = s1 + 0x28d8\n 15350: a4 = a2 + 0x300\n 15354: a1 = u64 [a4 + 0x40]\n 15357: a0 = u64 [a4 + 0x38]\n 15360: a3 = u64 [a4 + 0x30]\n 15363: u64 [s1 + 0x88] = a0\n 15367: a4 = s1 + 0x100\n 15371: u64 [a4 + 0x58] = a1\n 15374: a1 = a1 | a0\n 15377: u64 [a4 + 0x50] = a3\n 15380: a0 = a3 <u 0x1\n 15383: u64 [a4 + 0x38] = a1\n 15386: a0 = 0 if a1 != 0\n 15388: jump @505 if a0 != 0\n      : @504 (gas: 1)\n 15391: jump @1019\n      : @505 (gas: 22)\n 15394: a0 = u64 [s1 + 0x128]\n 15398: a3 = reverse a0\n 15400: u64 [s1 + 0xa8] = a3\n 15404: a0 = u64 [a2 + 0x328]\n 15408: u64 [s1 + 0xb0] = a0\n 15412: a0 = u64 [s1 + 0x130]\n 15416: a1 = reverse a0\n 15418: u64 [s1 + 0xa0] = a1\n 15422: a0 = u64 [s1 + 0x140]\n 15426: a4 = reverse a0\n 15428: u64 [s1 + 0x98] = a4\n 15432: a0 = u64 [s1 + 0x148]\n 15436: a0 = reverse a0\n 15438: u64 [s1 + 0x90] = a0\n 15442: a5 = a2 + 0x200\n 15446: u64 [a5 + 0xe8] = a0\n 15450: u64 [a5 + 0xf0] = a4\n 15454: u64 [a5 + 0xf8] = a1\n 15458: a0 = s1 + 0x2be0\n 15462: a1 = s1 + 0x2bc0\n 15466: u64 [a2 + 0x300] = a3\n 15470: ra = 568, jump @14\n      : @506 [@dyn 284] (gas: 14)\n 15476: a4 = s1 + 0x28d8\n 15480: a5 = a4 + 0x300\n 15484: a2 = u64 [a5 + 0x8]\n 15487: a0 = u64 [a5 + 0x10]\n 15490: a1 = u64 [a5 + 0x18]\n 15493: a3 = u64 [a5 + 0x20]\n 15496: a5 = a4 + 0x200\n 15500: u64 [a5 + 0xc0] = a3\n 15504: u64 [a5 + 0xb8] = a1\n 15508: u64 [a5 + 0xb0] = a0\n 15512: a0 = s1 + 0x2ba0\n 15516: a1 = s1 + 0x2b80\n 15520: u64 [a5 + 0xa8] = a2\n 15524: ra = 570, jump @1075\n      : @507 [@dyn 285] (gas: 30)\n 15530: a4 = s1 + 0x28d8\n 15534: a5 = a4 + 0x200\n 15538: a0 = u64 [a5 + 0xc8]\n 15542: a1 = u64 [a5 + 0xd0]\n 15546: a2 = u64 [a5 + 0xd8]\n 15550: a3 = u64 [a5 + 0xe0]\n 15554: u64 [a5 + 0x80] = a3\n 15558: a3 = u64 [s1 + 0x158]\n 15562: u64 [a5 + 0x60] = a3\n 15565: a3 = u64 [s1 + 0x88]\n 15569: u64 [a5 + 0x58] = a3\n 15572: a3 = u64 [s1 + 0x150]\n 15576: u64 [a5 + 0x50] = a3\n 15579: a3 = u64 [s1 + 0xb0]\n 15583: u64 [a5 + 0x48] = a3\n 15586: u64 [a5 + 0x78] = a2\n 15589: u64 [a5 + 0x70] = a1\n 15592: u64 [a5 + 0x68] = a0\n 15595: a0 = u64 [s1 + 0xa8]\n 15599: u64 [a5 + 0xa0] = a0\n 15603: a0 = u64 [s1 + 0xa0]\n 15607: u64 [a5 + 0x98] = a0\n 15611: a0 = u64 [s1 + 0x98]\n 15615: u64 [a5 + 0x90] = a0\n 15619: a0 = s1 + 0x2b60\n 15623: a1 = s1 + 0x2b40\n 15627: a2 = s1 + 0x2b20\n 15631: a3 = u64 [s1 + 0x90]\n 15635: u64 [a5 + 0x88] = a3\n 15639: ra = 572, jump @1152\n      : @508 [@dyn 286] (gas: 31)\n 15645: t0 = u64 [s1 + 0xb0]\n 15649: a5 = u64 [s1 + 0x150]\n 15653: a0 = a5 >u 0\n 15655: a1 = t0 <u 0x20\n 15658: a1 = a1 ^ 0x1\n 15661: a1 = a0 if a5 != 0\n 15664: a4 = u64 [s1 + 0x88]\n 15668: a0 = a4 >u 0\n 15670: a3 = u64 [s1 + 0x158]\n 15674: a2 = a3 >u 0\n 15676: a2 = a0 if a3 == 0\n 15679: a0 = u64 [s1 + 0x138]\n 15683: a2 = a1 if a0 == 0\n 15686: a0 = a5 | a3\n 15689: u64 [s1 + 0xe0] = a0\n 15693: t1 = t0 >> 0x3f\n 15696: t2 = a5 << 0x1\n 15699: a5 = a5 >> 0x3f\n 15702: a0 = a4\n 15704: ra = a4 << 0x1\n 15707: a4 = a4 >> 0x3f\n 15710: a3 = a3 << 0x1\n 15713: a1 = t0 << 0x1\n 15716: u64 [s1 + 0x70] = a1\n 15719: u64 [s1 + 0x68] = a5\n 15722: u64 [s1 + 0x60] = t1\n 15725: u64 [s1 + 0x58] = ra\n 15728: u64 [s1 + 0x50] = t2\n 15731: u64 [s1 + 0x48] = a4\n 15734: u64 [s1 + 0x40] = a3\n 15737: jump @510 if a2 != 0\n      : @509 (gas: 1)\n 15740: jump @748\n      : @510 (gas: 15)\n 15743: a5 = t0 & 0xffffffffffffffe0\n 15746: u64 [s1 + 0xd0] = a5\n 15750: a0 = u64 [s1 + 0x90]\n 15754: a2 = s1 + 0x28d8\n 15758: a3 = a2 + 0x200\n 15762: u64 [a3 + 0x8] = a0\n 15765: a0 = u64 [s1 + 0x98]\n 15769: u64 [a3 + 0x10] = a0\n 15772: a0 = u64 [s1 + 0xa0]\n 15776: u64 [a3 + 0x18] = a0\n 15779: a1 = s1 + 0x2ae0\n 15783: a0 = u64 [s1 + 0xa8]\n 15787: u64 [a3 + 0x20] = a0\n 15790: a0 = 0\n 15792: ra = 574, jump @12\n      : @511 [@dyn 287] (gas: 3)\n 15798: a1 = 0x20\n 15801: a0 = 0\n 15803: ra = 576, jump @0\n      : @512 [@dyn 288] (gas: 4)\n 15809: a1 = sp + 0xffffffffffffffe0\n 15812: a1 = a1 & 0xffffffffffffffe0\n 15815: u64 [s1 + 0x150] = a1\n 15819: t0 = 578, jump @1215\n      : @513 [@dyn 289] (gas: 25)\n 15825: ecalli 6 // 'hash_keccak_256'\n 15827: u64 [s1 + 344] = 0x20\n 15832: t1 = 0\n 15834: t0 = 0\n 15836: t2 = 0\n 15838: u64 [s1 + 304] = 0\n 15842: ra = 0\n 15844: a5 = 0\n 15846: a4 = s1 + 0x100\n 15850: a3 = u64 [a4 + 0x50]\n 15853: a0 = u64 [a3]\n 15855: a1 = u64 [a3 + 0x8]\n 15858: a2 = u64 [a3 + 0x10]\n 15861: a3 = u64 [a3 + 0x18]\n 15864: a0 = reverse a0\n 15866: u64 [a4 + 0x40] = a0\n 15869: a0 = reverse a1\n 15871: u64 [a4 + 0x38] = a0\n 15874: a0 = reverse a2\n 15876: a2 = 0\n 15878: u64 [a4 + 0x48] = a0\n 15881: a0 = reverse a3\n 15883: a3 = u64 [a4 + 0x30]\n 15886: u64 [a4 + 0x50] = a0\n 15889: fallthrough\n      : @514 (gas: 21)\n 15890: a0 = u64 [s1 + 0xd0]\n 15894: u64 [s1 + 0x130] = a3\n 15898: a0 = a3 <u a0\n 15901: a4 = a0 ^ 0x1\n 15904: u64 [s1 + 0x120] = ra\n 15908: a4 = 0x1 if ra != 0\n 15911: u64 [s1 + 0x128] = a2\n 15915: a0 = a2 | a5\n 15918: a4 = 0x1 if a0 != 0\n 15921: a1 = u64 [s1 + 0xd8]\n 15925: a0 = u64 [s1 + 0x158]\n 15929: a1 = a1 + a0\n 15932: a3 = u64 [s1 + 0xf8]\n 15936: ra = t1 + a3\n 15939: a2 = u64 [s1 + 0xe8]\n 15943: a2 = a2 + t0\n 15946: a0 = u64 [s1 + 0xf0]\n 15950: a3 = t1\n 15952: t1 = t2 + a0\n 15955: a0 = u64 [s1 + 0xe0]\n 15959: jump @516 if a4 == 0\n      : @515 (gas: 1)\n 15962: jump @750\n      : @516 (gas: 23)\n 15965: u64 [s1 + 0x110] = a5\n 15969: u64 [s1 + 0x118] = t2\n 15973: a0 = u64 [s1 + 0x158]\n 15977: a4 = a1 <u a0\n 15980: ra = ra + a4\n 15983: a0 = t0\n 15985: t0 = ra ^ a3\n 15988: a5 = ra <u a3\n 15991: a5 = a4 if t0 == 0\n 15994: a4 = a0\n 15996: a5 = a5 + a2\n 15999: t0 = a5 <u a2\n 16002: a2 = a2 <u a0\n 16005: a0 = t1 + a2\n 16008: a0 = a0 + t0\n 16011: a2 = a1 | a5\n 16014: a0 = ra | a0\n 16017: a2 = a2 | a0\n 16020: a2 = a2 >> 0x20\n 16023: a0 = a0 | a5\n 16026: a0 = a0 << 0x20\n 16029: a0 = a0 | a2\n 16032: jump @518 if a0 == 0\n      : @517 (gas: 1)\n 16035: jump @747\n      : @518 (gas: 4)\n 16038: a0 = s1 + 0x2660\n 16042: u64 [s1 + 0x108] = a4\n 16046: u64 [s1 + 0x100] = a3\n 16050: ra = 580, jump @10\n      : @519 [@dyn 290] (gas: 21)\n 16056: a4 = s1 + 0x20d8\n 16060: a5 = a4 + 0x500\n 16064: a0 = u64 [a5 + 0x88]\n 16068: a1 = u64 [a5 + 0x90]\n 16072: a2 = u64 [a5 + 0x98]\n 16076: a3 = u64 [a5 + 0xa0]\n 16080: u64 [a5 + 0x60] = a3\n 16083: u64 [a5 + 0x58] = a2\n 16086: u64 [a5 + 0x50] = a1\n 16089: u64 [a5 + 0x48] = a0\n 16092: a0 = u64 [s1 + 0x140]\n 16096: u64 [a5 + 0x80] = a0\n 16100: a0 = u64 [s1 + 0x138]\n 16104: u64 [a5 + 0x78] = a0\n 16107: a0 = u64 [s1 + 0x148]\n 16111: u64 [a5 + 0x70] = a0\n 16114: a0 = s1 + 0x2640\n 16118: a1 = s1 + 0x2620\n 16122: a2 = u64 [s1 + 0x150]\n 16126: u64 [a5 + 0x68] = a2\n 16129: ra = 582, jump @16\n      : @520 [@dyn 291] (gas: 1)\n 16135: t0 = 584, jump @1212\n      : @521 [@dyn 292] (gas: 36)\n 16141: t0 = a1 + a0\n 16144: a1 = t0 <u a1\n 16147: a0 = u64 [s1 + 0x140]\n 16151: a0 = a0 + a1\n 16154: u64 [s1 + 0x140] = a0\n 16158: a0 = u64 [s1 + 0x158]\n 16162: t1 = a0 + 0x20\n 16165: a3 = t1 <u a0\n 16168: a0 = u64 [s1 + 0x100]\n 16172: a2 = a0 + a3\n 16175: a4 = a2 <u a0\n 16178: a4 = a3 if a3 == 0\n 16181: a0 = u64 [s1 + 0x108]\n 16185: a4 = a4 + a0\n 16188: a3 = a4 <u a0\n 16191: t2 = u64 [s1 + 0x118]\n 16195: t2 = t2 + a3\n 16198: a0 = u64 [s1 + 0x130]\n 16202: a3 = a0 + 0x20\n 16205: a5 = a3 <u a0\n 16208: a1 = u64 [s1 + 0x120]\n 16212: a0 = a1 + a5\n 16215: a1 = a0 <u a1\n 16218: a1 = a5 if a5 == 0\n 16221: a5 = u64 [s1 + 0x128]\n 16225: a1 = a1 + a5\n 16228: a5 = a1 <u a5\n 16231: ra = u64 [s1 + 0x110]\n 16235: a5 = a5 + ra\n 16238: u64 [s1 + 0x138] = t0\n 16242: u64 [s1 + 0x158] = t1\n 16246: t1 = a2\n 16248: t0 = a4\n 16250: ra = a0\n 16252: a2 = a1\n 16254: jump @514\n      : @522 (gas: 1)\n 16257: t0 = 586, jump @1201\n      : @523 [@dyn 293] (gas: 4)\n 16263: ra = 0x24c\n 16267: ecalli 11 // 'value_transferred'\n 16269: t0 = 0x24e\n 16273: jump @1204\n      : @524 [@dyn 294] (gas: 1)\n 16276: t0 = 590, jump @1204\n      : @525 [@dyn 295] (gas: 1)\n 16282: jump @527 if a0 == 0\n      : @526 (gas: 1)\n 16285: jump @945\n      : @527 (gas: 1)\n 16288: t0 = 592, jump @1251\n      : @528 [@dyn 296] (gas: 1)\n 16294: jump @530 if a1 <u a0\n      : @529 (gas: 1)\n 16297: jump @945\n      : @530 (gas: 7)\n 16300: a0 = s1 + 0x4000\n 16304: i32 a0 = a0 + 0xfffffffffffffb60\n 16308: a1 = 0x4\n 16311: ra = 0x252\n 16315: ecalli 1 // 'call_data_load'\n 16317: t0 = 0x254\n 16321: jump @1253\n      : @531 [@dyn 297] (gas: 1)\n 16324: t0 = 596, jump @1253\n      : @532 [@dyn 298] (gas: 13)\n 16330: a0 = u64 [a4 + 0x88]\n 16334: a1 = u64 [a4 + 0x90]\n 16338: a2 = u64 [a4 + 0x98]\n 16342: a3 = u64 [a4 + 0xa0]\n 16346: a4 = s1 + 0x10d8\n 16350: a5 = a4 + 0x100\n 16354: u64 [a5 + 0x40] = a3\n 16357: u64 [a5 + 0x38] = a2\n 16360: u64 [a5 + 0x30] = a1\n 16363: a1 = s1 + 0x1200\n 16367: u64 [a5 + 0x28] = a0\n 16370: a0 = 0\n 16372: ra = 598, jump @12\n      : @533 [@dyn 299] (gas: 3)\n 16378: t0 = 0x258\n 16382: a2 = s1 + 0x10d8\n 16386: fallthrough\n      : @534 [@dyn 300] (gas: 7)\n 16387: u64 [a2 + 288] = 0\n 16391: u64 [a2 + 280] = 0\n 16395: u64 [a2 + 264] = 0x4\n 16400: a0 = 0x20\n 16403: a1 = s1 + 0x11e0\n 16407: u64 [a2 + 272] = 0\n 16411: ra = 602, jump @12\n      : @535 [@dyn 301] (gas: 3)\n 16417: a1 = 0x40\n 16420: a0 = 0\n 16422: ra = 604, jump @0\n      : @536 [@dyn 302] (gas: 1)\n 16428: t0 = 606, jump @1202\n      : @537 [@dyn 303] (gas: 4)\n 16434: ra = 0x260\n 16438: ecalli 6 // 'hash_keccak_256'\n 16440: t0 = 0x262\n 16444: jump @1225\n      : @538 [@dyn 304] (gas: 1)\n 16447: t0 = 610, jump @1225\n      : @539 [@dyn 305] (gas: 9)\n 16453: i32 a3 = a3 + 0xd8\n 16457: a3 = a3 + s1\n 16460: u64 [a3 + 0xe0] = a2\n 16464: u64 [a3 + 0xd8] = a1\n 16468: u64 [a3 + 0xd0] = a0\n 16472: a0 = s1 + 0x11c0\n 16476: a1 = s1 + 0x11a0\n 16480: u64 [a3 + 0xc8] = a4\n 16484: ra = 612, jump @14\n      : @540 [@dyn 306] (gas: 6)\n 16490: a0 = s1 + 0x10d8\n 16494: a0 = u64 [a0 + 0xe8]\n 16498: u64 [s1 + 0x158] = a0\n 16502: a0 = s1 + 0x1180\n 16506: a1 = 0x40\n 16509: ra = 614, jump @10\n      : @541 [@dyn 307] (gas: 6)\n 16515: a3 = s1 + 0x10d8\n 16519: a4 = u64 [a3 + 0xc0]\n 16523: a1 = u64 [a3 + 0xb8]\n 16527: a2 = u64 [a3 + 0xb0]\n 16531: a0 = u64 [a3 + 0xa8]\n 16535: t0 = 616, jump @1242\n      : @542 [@dyn 308] (gas: 1)\n 16541: jump @544 if a1 == 0\n      : @543 (gas: 1)\n 16544: jump @747\n      : @544 (gas: 10)\n 16547: a1 = u8 [s1 + 0x158]\n 16551: a1 = a1 >u 0\n 16553: u64 [a3 + 160] = 0\n 16557: u64 [a3 + 152] = 0\n 16561: u64 [a3 + 0x88] = a1\n 16565: a1 = s1 + 0x1160\n 16569: u64 [a3 + 144] = 0\n 16573: u64 [s1 + 0x158] = a0\n 16577: ra = 0x316\n 16581: jump @12\n      : @545 (gas: 1)\n 16584: t0 = 618, jump @1201\n      : @546 [@dyn 309] (gas: 4)\n 16590: ra = 0x26c\n 16594: ecalli 11 // 'value_transferred'\n 16596: t0 = 0x26e\n 16600: jump @1204\n      : @547 [@dyn 310] (gas: 1)\n 16603: t0 = 622, jump @1204\n      : @548 [@dyn 311] (gas: 1)\n 16609: jump @550 if a0 == 0\n      : @549 (gas: 1)\n 16612: jump @945\n      : @550 (gas: 1)\n 16615: t0 = 624, jump @1251\n      : @551 [@dyn 312] (gas: 1)\n 16621: jump @553 if a1 <u a0\n      : @552 (gas: 1)\n 16624: jump @945\n      : @553 (gas: 19)\n 16627: a0 = s1 + 0x4000\n 16631: i32 a0 = a0 + 0xfffffffffffffc60\n 16635: a1 = 0x4\n 16638: ecalli 1 // 'call_data_load'\n 16640: a3 = s1 + 0x38d8\n 16644: a4 = a3 + 0x300\n 16648: a0 = u64 [a4 + 0x88]\n 16652: a1 = u64 [a4 + 0x90]\n 16656: a2 = u64 [a4 + 0x98]\n 16660: a3 = u64 [a4 + 0xa0]\n 16664: a4 = s1 + 0x30d8\n 16668: a5 = a4 + 0x200\n 16672: u64 [a5 + 0x60] = a3\n 16675: u64 [a5 + 0x58] = a2\n 16678: u64 [a5 + 0x50] = a1\n 16681: a1 = s1 + 0x3320\n 16685: u64 [a5 + 0x48] = a0\n 16688: a0 = 0\n 16690: ra = 626, jump @12\n      : @554 [@dyn 313] (gas: 3)\n 16696: t0 = 0x274\n 16700: a2 = s1 + 0x30d8\n 16704: fallthrough\n      : @555 [@dyn 314] (gas: 7)\n 16705: u64 [a2 + 576] = 0\n 16709: u64 [a2 + 568] = 0\n 16713: u64 [a2 + 552] = 0x2\n 16718: a0 = 0x20\n 16721: a1 = s1 + 0x3300\n 16725: u64 [a2 + 560] = 0\n 16729: ra = 630, jump @12\n      : @556 [@dyn 315] (gas: 3)\n 16735: a1 = 0x40\n 16738: a0 = 0\n 16740: ra = 632, jump @0\n      : @557 [@dyn 316] (gas: 1)\n 16746: t0 = 634, jump @1202\n      : @558 [@dyn 317] (gas: 5)\n 16752: ra = 0x27c\n 16756: ecalli 6 // 'hash_keccak_256'\n 16758: a3 = u64 [s1 + 0x158]\n 16762: t0 = 0x27e\n 16766: jump @1213\n      : @559 [@dyn 318] (gas: 2)\n 16769: a3 = u64 [s1 + 0x158]\n 16773: t0 = 638, jump @1213\n      : @560 [@dyn 319] (gas: 8)\n 16779: u64 [a3 + 0x200] = a2\n 16783: a2 = a3 + 0x100\n 16787: u64 [a2 + 0xf8] = a1\n 16791: u64 [a2 + 0xf0] = a0\n 16795: a0 = s1 + 0x32e0\n 16799: a1 = s1 + 0x32c0\n 16803: u64 [a2 + 0xe8] = a4\n 16807: ra = 640, jump @14\n      : @561 [@dyn 320] (gas: 14)\n 16813: a0 = s1 + 0x30d8\n 16817: a2 = a0 + 0x200\n 16821: a1 = u64 [a2 + 0x20]\n 16824: a0 = s1 + 0x100\n 16828: u64 [a0 + 0x58] = a1\n 16831: a1 = u64 [a2 + 0x18]\n 16834: u64 [a0 + 0x50] = a1\n 16837: a1 = u64 [a2 + 0x10]\n 16840: u64 [a0 + 0x48] = a1\n 16843: a1 = u64 [a2 + 0x8]\n 16846: u64 [a0 + 0x40] = a1\n 16849: a0 = s1 + 0x32a0\n 16853: a1 = 0x40\n 16856: ra = 642, jump @10\n      : @562 [@dyn 321] (gas: 7)\n 16862: a3 = s1 + 0x30d8\n 16866: a5 = a3 + 0x100\n 16870: a0 = u64 [a5 + 0xe0]\n 16874: a1 = u64 [a5 + 0xd8]\n 16878: a2 = u64 [a5 + 0xd0]\n 16882: a4 = u64 [a5 + 0xc8]\n 16886: t0 = 644, jump @1241\n      : @563 [@dyn 322] (gas: 1)\n 16892: jump @565 if a0 == 0\n      : @564 (gas: 1)\n 16895: jump @747\n      : @565 (gas: 15)\n 16898: a2 = s1 + 0x100\n 16902: a0 = u64 [a2 + 0x40]\n 16905: a5 = a3 + 0x100\n 16909: u64 [a5 + 0xa8] = a0\n 16913: a0 = u64 [a2 + 0x48]\n 16916: u64 [a5 + 0xb0] = a0\n 16920: a0 = u64 [a2 + 0x50]\n 16923: u64 [a5 + 0xb8] = a0\n 16927: a1 = s1 + 0x3280\n 16931: a0 = u64 [a2 + 0x58]\n 16934: u64 [a5 + 0xc0] = a0\n 16938: a0 = a4\n 16940: u64 [s1 + 0x158] = a4\n 16944: ra = 0x316\n 16948: jump @12\n      : @566 (gas: 1)\n 16951: t0 = 646, jump @1201\n      : @567 [@dyn 323] (gas: 4)\n 16957: ra = 0x288\n 16961: ecalli 11 // 'value_transferred'\n 16963: t0 = 0x28a\n 16967: jump @1204\n      : @568 [@dyn 324] (gas: 1)\n 16970: t0 = 650, jump @1204\n      : @569 [@dyn 325] (gas: 1)\n 16976: jump @571 if a0 == 0\n      : @570 (gas: 1)\n 16979: jump @945\n      : @571 (gas: 4)\n 16982: a0 = u64 [s1 + 0x158]\n 16986: a0 = i32 [a0]\n 16988: a1 = 0x43\n 16991: jump @573 if a1 <u a0\n      : @572 (gas: 1)\n 16994: jump @945\n      : @573 (gas: 4)\n 16997: a0 = s1 + 0x3980\n 17001: ra = 0x28c\n 17005: t0 = 0x508\n 17009: jump @1252\n      : @574 [@dyn 326] (gas: 24)\n 17012: a1 = s1 + 0x38d8\n 17016: a0 = u64 [a1 + 0xa8]\n 17020: u64 [s1 + 0x158] = a0\n 17024: a0 = u64 [a1 + 0xb0]\n 17028: u64 [s1 + 0x150] = a0\n 17032: a0 = u32 [a1 + 0xb8]\n 17036: u64 [s1 + 0x148] = a0\n 17040: a0 = s1 + 0x4000\n 17044: i32 a0 = a0 + 0xfffffffffffffcc0\n 17048: a1 = 0x4\n 17051: ecalli 1 // 'call_data_load'\n 17053: a4 = s1 + 0x38d8\n 17057: a3 = a4 + 0x300\n 17061: a0 = u64 [a3 + 0xe8]\n 17065: a1 = u64 [a3 + 0xf0]\n 17069: a2 = u64 [a3 + 0xf8]\n 17073: a3 = u64 [a4 + 0x400]\n 17077: u64 [a4 + 0xa0] = a3\n 17081: u64 [a4 + 0x98] = a2\n 17085: u64 [a4 + 0x90] = a1\n 17089: a1 = s1 + 0x3960\n 17093: u64 [a4 + 0x88] = a0\n 17097: a0 = 0\n 17099: ra = 654, jump @12\n      : @575 [@dyn 327] (gas: 8)\n 17105: a2 = s1 + 0x38d8\n 17109: u64 [a2 + 128] = 0\n 17113: u64 [a2 + 120] = 0\n 17116: u64 [a2 + 104] = 0x6\n 17120: a0 = 0x20\n 17123: a1 = s1 + 0x3940\n 17127: u64 [a2 + 112] = 0\n 17130: ra = 656, jump @12\n      : @576 [@dyn 328] (gas: 3)\n 17136: a1 = 0x40\n 17139: a0 = 0\n 17141: ra = 658, jump @0\n      : @577 [@dyn 329] (gas: 32)\n 17147: a1 = sp + 0xffffffffffffffe0\n 17150: a1 = a1 & 0xffffffffffffffe0\n 17153: u64 [s1 + 0x140] = a1\n 17157: sp = a1\n 17159: i32 a0 = a0 + 0\n 17161: i32 a2 = a1 + 0\n 17163: a1 = 0x40\n 17166: ecalli 6 // 'hash_keccak_256'\n 17168: a3 = u64 [s1 + 0x140]\n 17172: a0 = u64 [a3 + 0x18]\n 17175: a1 = u64 [a3 + 0x10]\n 17178: a2 = u64 [a3 + 0x8]\n 17181: a3 = u64 [a3]\n 17183: a0 = reverse a0\n 17185: u64 [s1 + 0x140] = a0\n 17189: a0 = reverse a1\n 17191: u64 [s1 + 0x138] = a0\n 17195: a0 = reverse a2\n 17197: u64 [s1 + 0x130] = a0\n 17201: a0 = reverse a3\n 17203: u64 [s1 + 0x128] = a0\n 17207: a2 = s1 + 0x38d8\n 17211: u64 [a2 + 96] = 0\n 17214: a0 = u64 [s1 + 0x148]\n 17218: u64 [a2 + 0x58] = a0\n 17221: a0 = u64 [s1 + 0x150]\n 17225: u64 [a2 + 0x50] = a0\n 17228: a1 = s1 + 0x3920\n 17232: a0 = u64 [s1 + 0x158]\n 17236: u64 [a2 + 0x48] = a0\n 17239: a0 = 0\n 17241: ra = 660, jump @12\n      : @578 [@dyn 330] (gas: 12)\n 17247: a2 = s1 + 0x38d8\n 17251: a0 = u64 [s1 + 0x128]\n 17255: u64 [a2 + 0x40] = a0\n 17258: a0 = u64 [s1 + 0x130]\n 17262: u64 [a2 + 0x38] = a0\n 17265: a0 = u64 [s1 + 0x138]\n 17269: u64 [a2 + 0x30] = a0\n 17272: a0 = 0x20\n 17275: a1 = s1 + 0x3900\n 17279: a3 = u64 [s1 + 0x140]\n 17283: u64 [a2 + 0x28] = a3\n 17286: ra = 662, jump @12\n      : @579 [@dyn 331] (gas: 3)\n 17292: a1 = 0x40\n 17295: a0 = 0\n 17297: ra = 664, jump @0\n      : @580 [@dyn 332] (gas: 1)\n 17303: t0 = 666, jump @1202\n      : @581 [@dyn 333] (gas: 5)\n 17309: ra = 0x29c\n 17313: ecalli 6 // 'hash_keccak_256'\n 17315: a3 = u64 [s1 + 0x158]\n 17319: t0 = 0x29e\n 17323: jump @1216\n      : @582 [@dyn 334] (gas: 2)\n 17326: a3 = u64 [s1 + 0x158]\n 17330: t0 = 670, jump @1216\n      : @583 [@dyn 335] (gas: 9)\n 17336: a3 = s1 + 0x38d8\n 17340: u64 [a3] = a2\n 17342: a2 = a3 + 0xffffffffffffff00\n 17346: u64 [a2 + 0xf8] = a1\n 17350: u64 [a2 + 0xf0] = a0\n 17354: a0 = s1 + 0x38e0\n 17358: a1 = s1 + 0x38c0\n 17362: u64 [a2 + 0xe8] = a4\n 17366: ra = 672, jump @14\n      : @584 [@dyn 336] (gas: 6)\n 17372: a0 = s1 + 0x38d8\n 17376: a0 = u64 [a0 + 0x8]\n 17379: u64 [s1 + 0x158] = a0\n 17383: a0 = s1 + 0x38a0\n 17387: a1 = 0x40\n 17390: ra = 674, jump @10\n      : @585 [@dyn 337] (gas: 7)\n 17396: a3 = s1 + 0x30d8\n 17400: a5 = a3 + 0x700\n 17404: a4 = u64 [a5 + 0xe0]\n 17408: a1 = u64 [a5 + 0xd8]\n 17412: a2 = u64 [a5 + 0xd0]\n 17416: a0 = u64 [a5 + 0xc8]\n 17420: t0 = 676, jump @1242\n      : @586 [@dyn 338] (gas: 1)\n 17426: jump @588 if a1 == 0\n      : @587 (gas: 1)\n 17429: jump @747\n      : @588 (gas: 10)\n 17432: a1 = u8 [s1 + 0x158]\n 17436: a1 = a1 >u 0\n 17438: u64 [a3 + 1984] = 0\n 17442: u64 [a3 + 1976] = 0\n 17446: u64 [a3 + 0x7a8] = a1\n 17450: a1 = s1 + 0x3880\n 17454: u64 [a3 + 1968] = 0\n 17458: u64 [s1 + 0x158] = a0\n 17462: ra = 0x316\n 17466: jump @12\n      : @589 (gas: 1)\n 17469: t0 = 678, jump @1201\n      : @590 [@dyn 339] (gas: 4)\n 17475: ra = 0x2a8\n 17479: ecalli 11 // 'value_transferred'\n 17481: t0 = 0x2aa\n 17485: jump @1204\n      : @591 [@dyn 340] (gas: 1)\n 17488: t0 = 682, jump @1204\n      : @592 [@dyn 341] (gas: 1)\n 17494: jump @594 if a0 == 0\n      : @593 (gas: 1)\n 17497: jump @945\n      : @594 (gas: 3)\n 17500: a0 = u64 [s1 + 0x158]\n 17504: a0 = i32 [a0]\n 17506: jump @596 if a0 >u 67\n      : @595 (gas: 1)\n 17510: jump @945\n      : @596 (gas: 18)\n 17513: a0 = s1 + 0x4000\n 17517: i32 a0 = a0 + 0xfffffffffffffc20\n 17521: a1 = 0x4\n 17524: ecalli 1 // 'call_data_load'\n 17526: a1 = s1 + 0x38d8\n 17530: a2 = a1 + 0x300\n 17534: a0 = u64 [a2 + 0x60]\n 17537: u64 [s1 + 0x140] = a0\n 17541: a0 = u64 [a2 + 0x58]\n 17544: u64 [s1 + 0x148] = a0\n 17548: a0 = u64 [a2 + 0x50]\n 17551: u64 [s1 + 0x150] = a0\n 17555: a0 = u64 [a2 + 0x48]\n 17558: u64 [s1 + 0x158] = a0\n 17562: a0 = s1 + 0x3260\n 17566: ra = 0x2ac\n 17570: t0 = 0x508\n 17574: jump @1252\n      : @597 [@dyn 342] (gas: 15)\n 17577: a0 = s1 + 0x30d8\n 17581: a1 = u64 [a0 + 0x188]\n 17585: u64 [s1 + 0x138] = a1\n 17589: a1 = u64 [a0 + 0x190]\n 17593: u64 [s1 + 0x130] = a1\n 17597: a1 = u32 [a0 + 0x198]\n 17601: u64 [s1 + 0x128] = a1\n 17605: u64 [a0 + 352] = 0\n 17609: u64 [a0 + 344] = 0\n 17613: u64 [a0 + 336] = 0\n 17617: a2 = a0\n 17619: a0 = s1 + 0x3240\n 17623: a1 = s1 + 0x3220\n 17627: u64 [a2 + 328] = 0\n 17631: ra = 686, jump @14\n      : @598 [@dyn 343] (gas: 12)\n 17637: a0 = s1 + 0x30d8\n 17641: a1 = u64 [a0 + 0x170]\n 17645: u64 [s1 + 0x120] = a1\n 17649: a1 = u64 [a0 + 0x168]\n 17653: u64 [s1 + 0x118] = a1\n 17657: a0 = u32 [a0 + 0x178]\n 17661: u64 [s1 + 0x110] = a0\n 17665: a0 = s1 + 0x4000\n 17669: i32 a0 = a0 + 0xfffffffffffffc40\n 17673: ra = 0x2b0\n 17677: ecalli 3 // 'caller'\n 17679: fallthrough\n      : @599 [@dyn 344] (gas: 6)\n 17680: a2 = s1 + 0x38d8\n 17684: a3 = a2 + 0x300\n 17688: a0 = u64 [a3 + 0x70]\n 17691: a1 = u64 [a3 + 0x68]\n 17694: a2 = i32 [a3 + 0x78]\n 17697: t0 = 690, jump @1211\n      : @600 [@dyn 345] (gas: 6)\n 17703: u64 [a1 + 320] = 0\n 17707: u64 [a1 + 312] = 0\n 17711: u64 [a1 + 0x128] = a0\n 17715: a0 = s1 + 0x3200\n 17719: u64 [a1 + 304] = 0\n 17723: ra = 692, jump @1185\n      : @601 [@dyn 346] (gas: 1)\n 17729: t0 = 694, jump @1248\n      : @602 [@dyn 347] (gas: 11)\n 17735: a3 = a2 + 0x100\n 17739: u64 [a3 + 0x20] = a0\n 17742: a0 = u64 [s1 + 0x148]\n 17746: u64 [a3 + 0x18] = a0\n 17749: a0 = u64 [s1 + 0x150]\n 17753: u64 [a3 + 0x10] = a0\n 17756: a1 = s1 + 0x31e0\n 17760: a0 = u64 [s1 + 0x158]\n 17764: u64 [a3 + 0x8] = a0\n 17767: a0 = 0\n 17769: ra = 696, jump @12\n      : @603 [@dyn 348] (gas: 9)\n 17775: a0 = s1 + 0x30d8\n 17779: u64 [a0 + 256] = 0\n 17783: u64 [a0 + 248] = 0\n 17787: u64 [a0 + 240] = 0\n 17791: a3 = a0\n 17793: a0 = 0x20\n 17796: a1 = s1 + 0x31c0\n 17800: u64 [a3 + 232] = 0x6\n 17805: ra = 698, jump @12\n      : @604 [@dyn 349] (gas: 3)\n 17811: a1 = 0x40\n 17814: a0 = 0\n 17816: ra = 700, jump @0\n      : @605 [@dyn 350] (gas: 1)\n 17822: t0 = 702, jump @1205\n      : @606 [@dyn 351] (gas: 4)\n 17828: ra = 0x2c0\n 17832: ecalli 6 // 'hash_keccak_256'\n 17834: t0 = 0x2c2\n 17838: jump @1203\n      : @607 [@dyn 352] (gas: 1)\n 17841: t0 = 706, jump @1203\n      : @608 [@dyn 353] (gas: 10)\n 17847: u64 [a2 + 224] = 0\n 17851: a0 = u64 [s1 + 0x128]\n 17855: u64 [a2 + 0xd8] = a0\n 17859: a0 = u64 [s1 + 0x130]\n 17863: u64 [a2 + 0xd0] = a0\n 17867: a1 = s1 + 0x31a0\n 17871: a0 = u64 [s1 + 0x138]\n 17875: u64 [a2 + 0xc8] = a0\n 17879: a0 = 0\n 17881: ra = 708, jump @12\n      : @609 [@dyn 354] (gas: 4)\n 17887: t0 = 0x2c6\n 17891: a2 = s1 + 0x30d8\n 17895: a0 = u64 [s1 + 0x108]\n 17899: fallthrough\n      : @610 [@dyn 355] (gas: 10)\n 17900: u64 [a2 + 0xc0] = a0\n 17904: a0 = u64 [s1 + 0x110]\n 17908: u64 [a2 + 0xb8] = a0\n 17912: a0 = u64 [s1 + 0x118]\n 17916: u64 [a2 + 0xb0] = a0\n 17920: a0 = 0x20\n 17923: a1 = s1 + 0x3180\n 17927: a3 = u64 [s1 + 0x120]\n 17931: u64 [a2 + 0xa8] = a3\n 17935: ra = 712, jump @12\n      : @611 [@dyn 356] (gas: 3)\n 17941: a1 = 0x40\n 17944: a0 = 0\n 17946: ra = 714, jump @0\n      : @612 [@dyn 357] (gas: 1)\n 17952: t0 = 716, jump @1205\n      : @613 [@dyn 358] (gas: 5)\n 17958: ra = 0x2ce\n 17962: ecalli 6 // 'hash_keccak_256'\n 17964: a3 = u64 [s1 + 0x120]\n 17968: t0 = 0x2d0\n 17972: jump @1213\n      : @614 [@dyn 359] (gas: 2)\n 17975: a3 = u64 [s1 + 0x120]\n 17979: t0 = 720, jump @1213\n      : @615 [@dyn 360] (gas: 7)\n 17985: u64 [a3 + 0x80] = a2\n 17989: u64 [a3 + 0x78] = a1\n 17992: u64 [a3 + 0x70] = a0\n 17995: a0 = s1 + 0x3160\n 17999: a1 = s1 + 0x3140\n 18003: u64 [a3 + 0x68] = a4\n 18006: ra = 722, jump @14\n      : @616 [@dyn 361] (gas: 3)\n 18012: t0 = 0x2d4\n 18016: a2 = s1 + 0x30d8\n 18020: fallthrough\n      : @617 [@dyn 362] (gas: 2)\n 18021: a0 = u8 [a2 + 0x88]\n 18025: jump @619 if a0 == 0\n      : @618 (gas: 1)\n 18028: jump @976\n      : @619 (gas: 3)\n 18031: a0 = s1 + 0x2fc0\n 18035: a1 = 0x40\n 18038: ra = 726, jump @10\n      : @620 [@dyn 363] (gas: 14)\n 18044: a2 = s1 + 0x28d8\n 18048: t0 = u64 [a2 + 0x700]\n 18052: a1 = a2 + 0x600\n 18056: a5 = u64 [a1 + 0xf8]\n 18060: a3 = u64 [a1 + 0xf0]\n 18064: a0 = u64 [a1 + 0xe8]\n 18068: a4 = a3 | t0\n 18071: a1 = a0 | a5\n 18074: a1 = a1 | a4\n 18077: a1 = a1 >> 0x20\n 18080: a4 = a4 | a5\n 18083: a4 = a4 << 0x20\n 18086: a1 = a1 | a4\n 18089: jump @622 if a1 == 0\n      : @621 (gas: 1)\n 18092: jump @747\n      : @622 (gas: 11)\n 18095: u64 [a2 + 1752] = 0\n 18099: u64 [a2 + 1744] = 0\n 18103: u64 [a2 + 1736] = 0\n 18107: a4 = 0x8c379a000000000\n 18117: a1 = s1 + 0x2fa0\n 18121: u64 [a2 + 0x6e0] = a4\n 18125: u64 [s1 + 0x158] = a3\n 18129: u64 [s1 + 0x150] = a0\n 18133: u64 [s1 + 0x140] = t0\n 18137: u64 [s1 + 0x148] = a5\n 18141: ra = 728, jump @12\n      : @623 [@dyn 364] (gas: 1)\n 18147: t0 = 730, jump @1206\n      : @624 [@dyn 365] (gas: 1)\n 18153: jump @626 if a0 != 0\n      : @625 (gas: 1)\n 18156: jump @747\n      : @626 (gas: 12)\n 18159: i32 a0 = a2 + 0\n 18161: u64 [s1 + 0x138] = a0\n 18165: i32 a0 = a0 + 0x4\n 18168: a2 = s1 + 0x28d8\n 18172: u64 [a2 + 1728] = 0\n 18176: u64 [a2 + 1720] = 0\n 18180: u64 [a2 + 1704] = 0x20\n 18185: a1 = s1 + 0x2f80\n 18189: u64 [a2 + 1712] = 0\n 18193: u64 [s1 + 0x148] = a3\n 18197: u64 [s1 + 0x140] = a4\n 18201: ra = 732, jump @12\n      : @627 [@dyn 366] (gas: 1)\n 18207: t0 = 734, jump @1214\n      : @628 [@dyn 367] (gas: 1)\n 18213: jump @630 if a0 != 0\n      : @629 (gas: 1)\n 18216: jump @747\n      : @630 (gas: 9)\n 18219: a0 = u64 [s1 + 0x138]\n 18223: i32 a0 = a0 + 0x24\n 18226: a4 = s1 + 0x28d8\n 18230: u64 [a4 + 1696] = 0\n 18234: u64 [a4 + 1688] = 0\n 18238: u64 [a4 + 1672] = 0xb\n 18243: a1 = s1 + 0x2f60\n 18247: u64 [a4 + 1680] = 0\n 18251: ra = 736, jump @12\n      : @631 [@dyn 368] (gas: 1)\n 18257: t0 = 738, jump @1208\n      : @632 [@dyn 369] (gas: 1)\n 18263: jump @634 if a0 != 0\n      : @633 (gas: 1)\n 18266: jump @747\n      : @634 (gas: 12)\n 18269: a0 = u64 [s1 + 0x138]\n 18273: i32 a0 = a0 + 0x44\n 18276: a1 = u64 [0x20050]\n 18281: a2 = s1 + 0x28d8\n 18285: u64 [a2 + 1648] = 0\n 18289: u64 [a2 + 0x680] = a1\n 18293: a1 = 0x7465640000000000\n 18303: u64 [a2 + 0x678] = a1\n 18307: a1 = s1 + 0x2f40\n 18311: u64 [a2 + 1640] = 0\n 18315: ra = 0x35e\n 18319: jump @12\n      : @635 (gas: 1)\n 18322: jump @637 if a0 == 2087806282\n      : @636 (gas: 1)\n 18329: jump @945\n      : @637 (gas: 1)\n 18332: t0 = 740, jump @1201\n      : @638 [@dyn 370] (gas: 4)\n 18338: ra = 0x2e6\n 18342: ecalli 11 // 'value_transferred'\n 18344: t0 = 0x2e8\n 18348: jump @1204\n      : @639 [@dyn 371] (gas: 1)\n 18351: t0 = 744, jump @1204\n      : @640 [@dyn 372] (gas: 1)\n 18357: jump @642 if a0 == 0\n      : @641 (gas: 1)\n 18360: jump @945\n      : @642 (gas: 1)\n 18363: t0 = 746, jump @1251\n      : @643 [@dyn 373] (gas: 1)\n 18369: jump @645 if a1 <u a0\n      : @644 (gas: 1)\n 18372: jump @945\n      : @645 (gas: 23)\n 18375: a0 = s1 + 0x4000\n 18379: i32 a0 = a0 + 0xfffffffffffffbe0\n 18383: a1 = 0x4\n 18386: ecalli 1 // 'call_data_load'\n 18388: a0 = s1 + 0x38d8\n 18392: a5 = a0 + 0x300\n 18396: a1 = u64 [a5 + 0x20]\n 18399: a2 = u64 [a5 + 0x18]\n 18402: a3 = u64 [a5 + 0x10]\n 18405: a4 = u64 [a5 + 0x8]\n 18408: a0 = s1 + 0x20d8\n 18412: u64 [s1 + 0x150] = a1\n 18416: u64 [a0 + 0x500] = a1\n 18420: u64 [s1 + 0x148] = a2\n 18424: a5 = a0 + 0x400\n 18428: u64 [a5 + 0xf8] = a2\n 18432: u64 [s1 + 0x140] = a3\n 18436: u64 [a5 + 0xf0] = a3\n 18440: a1 = s1 + 0x25c0\n 18444: u64 [s1 + 0x138] = a4\n 18448: u64 [a5 + 0xe8] = a4\n 18452: a0 = 0\n 18454: ra = 748, jump @12\n      : @646 [@dyn 374] (gas: 9)\n 18460: a0 = s1 + 0x20d8\n 18464: u64 [a0 + 1248] = 0\n 18468: u64 [a0 + 1240] = 0\n 18472: u64 [a0 + 1232] = 0\n 18476: a3 = a0\n 18478: a0 = 0x20\n 18481: a1 = s1 + 0x25a0\n 18485: u64 [a3 + 1224] = 0x2\n 18490: ra = 750, jump @12\n      : @647 [@dyn 375] (gas: 3)\n 18496: a1 = 0x40\n 18499: a0 = 0\n 18501: ra = 752, jump @0\n      : @648 [@dyn 376] (gas: 1)\n 18507: t0 = 754, jump @1202\n      : @649 [@dyn 377] (gas: 4)\n 18513: ra = 0x2f4\n 18517: ecalli 6 // 'hash_keccak_256'\n 18519: t0 = 0x2f6\n 18523: jump @1210\n      : @650 [@dyn 378] (gas: 1)\n 18526: t0 = 758, jump @1210\n      : @651 [@dyn 379] (gas: 8)\n 18532: a5 = a3 + 0x400\n 18536: u64 [a5 + 0xa0] = a2\n 18540: u64 [a5 + 0x98] = a1\n 18544: u64 [a5 + 0x90] = a0\n 18548: a0 = s1 + 0x2580\n 18552: a1 = s1 + 0x2560\n 18556: u64 [a5 + 0x88] = a4\n 18560: ra = 760, jump @14\n      : @652 [@dyn 380] (gas: 10)\n 18566: a2 = s1 + 0x20d8\n 18570: t0 = u64 [a2 + 0x4c0]\n 18574: a0 = a2 + 0x400\n 18578: a5 = u64 [a0 + 0xb8]\n 18582: a3 = u64 [a0 + 0xb0]\n 18586: a4 = u64 [a0 + 0xa8]\n 18590: a0 = a3 | t0\n 18593: a1 = a4 | a5\n 18596: a0 = a0 | a1\n 18599: jump @669 if a0 != 0\n      : @653 (gas: 3)\n 18603: a0 = s1 + 0x2400\n 18607: a1 = 0x40\n 18610: ra = 762, jump @10\n      : @654 [@dyn 381] (gas: 14)\n 18616: a2 = s1 + 0x20d8\n 18620: t0 = u64 [a2 + 0x340]\n 18624: a1 = a2 + 0x300\n 18628: a5 = u64 [a1 + 0x38]\n 18631: a3 = u64 [a1 + 0x30]\n 18634: a0 = u64 [a1 + 0x28]\n 18637: a4 = a3 | t0\n 18640: a1 = a0 | a5\n 18643: a1 = a1 | a4\n 18646: a1 = a1 >> 0x20\n 18649: a4 = a4 | a5\n 18652: a4 = a4 << 0x20\n 18655: a1 = a1 | a4\n 18658: jump @656 if a1 == 0\n      : @655 (gas: 1)\n 18661: jump @747\n      : @656 (gas: 11)\n 18664: u64 [a2 + 792] = 0\n 18668: u64 [a2 + 784] = 0\n 18672: u64 [a2 + 776] = 0\n 18676: a4 = 0x8c379a000000000\n 18686: a1 = s1 + 0x23e0\n 18690: u64 [a2 + 0x320] = a4\n 18694: u64 [s1 + 0x158] = a3\n 18698: u64 [s1 + 0x150] = a0\n 18702: u64 [s1 + 0x140] = t0\n 18706: u64 [s1 + 0x148] = a5\n 18710: ra = 764, jump @12\n      : @657 [@dyn 382] (gas: 1)\n 18716: t0 = 766, jump @1206\n      : @658 [@dyn 383] (gas: 1)\n 18722: jump @660 if a0 != 0\n      : @659 (gas: 1)\n 18725: jump @747\n      : @660 (gas: 6)\n 18728: i32 a0 = a2 + 0\n 18730: u64 [s1 + 0x138] = a0\n 18734: i32 a0 = a0 + 0x4\n 18737: t0 = 0x300\n 18741: a2 = s1 + 0x20d8\n 18745: fallthrough\n      : @661 [@dyn 384] (gas: 8)\n 18746: u64 [a2 + 768] = 0\n 18750: u64 [a2 + 760] = 0\n 18754: u64 [a2 + 744] = 0x20\n 18759: a1 = s1 + 0x23c0\n 18763: u64 [a2 + 752] = 0\n 18767: u64 [s1 + 0x148] = a3\n 18771: u64 [s1 + 0x140] = a4\n 18775: ra = 770, jump @12\n      : @662 [@dyn 385] (gas: 10)\n 18781: a1 = s1 + 0x100\n 18785: a3 = u64 [a1 + 0x48]\n 18788: a4 = u64 [a1 + 0x50]\n 18791: a2 = u64 [a1 + 0x58]\n 18794: a0 = u64 [a1 + 0x40]\n 18797: a0 = a0 + 0xffffffffffffffdc\n 18800: a0 = a4 <u a0\n 18803: a0 = 0 if a2 != 0\n 18805: a0 = 0 if a3 != 0\n 18807: jump @664 if a0 != 0\n      : @663 (gas: 1)\n 18810: jump @747\n      : @664 (gas: 9)\n 18813: a0 = u64 [s1 + 0x138]\n 18817: i32 a0 = a0 + 0x24\n 18820: a3 = s1 + 0x20d8\n 18824: u64 [a3 + 736] = 0\n 18828: u64 [a3 + 728] = 0\n 18832: u64 [a3 + 712] = 0x14\n 18837: a1 = s1 + 0x23a0\n 18841: u64 [a3 + 720] = 0\n 18845: ra = 772, jump @12\n      : @665 [@dyn 386] (gas: 1)\n 18851: t0 = 774, jump @1208\n      : @666 [@dyn 387] (gas: 1)\n 18857: jump @668 if a0 != 0\n      : @667 (gas: 1)\n 18860: jump @747\n      : @668 (gas: 14)\n 18863: a0 = u64 [s1 + 0x138]\n 18867: i32 a0 = a0 + 0x44\n 18870: a1 = u64 [0x20080]\n 18875: a2 = u64 [0x20088]\n 18880: a3 = s1 + 0x20d8\n 18884: a4 = a3 + 0x200\n 18888: u64 [a4 + 0xc0] = a1\n 18892: u64 [a4 + 0xb8] = a2\n 18896: a1 = 0x6164656400000000\n 18906: u64 [a4 + 0xb0] = a1\n 18910: a1 = s1 + 0x2380\n 18914: u64 [a3 + 680] = 0\n 18918: ra = 0x35e\n 18922: jump @12\n      : @669 (gas: 15)\n 18925: a0 = u64 [s1 + 0x138]\n 18929: u64 [a2 + 0x468] = a0\n 18933: a0 = u64 [s1 + 0x140]\n 18937: u64 [a2 + 0x470] = a0\n 18941: a0 = u64 [s1 + 0x148]\n 18945: u64 [a2 + 0x478] = a0\n 18949: a1 = s1 + 0x2540\n 18953: a0 = u64 [s1 + 0x150]\n 18957: u64 [a2 + 0x480] = a0\n 18961: a0 = 0\n 18963: u64 [s1 + 0x158] = t0\n 18967: u64 [s1 + 0x140] = a4\n 18971: u64 [s1 + 0x150] = a5\n 18975: u64 [s1 + 0x148] = a3\n 18979: ra = 776, jump @12\n      : @670 [@dyn 388] (gas: 11)\n 18985: a0 = s1 + 0x20d8\n 18989: u64 [a0 + 1120] = 0\n 18993: a0 = s1 + 0x20d8\n 18997: u64 [a0 + 1112] = 0\n 19001: a0 = s1 + 0x20d8\n 19005: u64 [a0 + 1096] = 0x2\n 19010: a0 = 0x20\n 19013: a1 = s1 + 0x2520\n 19017: a2 = s1 + 0x20d8\n 19021: u64 [a2 + 1104] = 0\n 19025: ra = 778, jump @12\n      : @671 [@dyn 389] (gas: 3)\n 19031: a1 = 0x40\n 19034: a0 = 0\n 19036: ra = 780, jump @0\n      : @672 [@dyn 390] (gas: 49)\n 19042: a1 = sp + 0xffffffffffffffe0\n 19045: a1 = a1 & 0xffffffffffffffe0\n 19048: u64 [s1 + 0x138] = a1\n 19052: sp = a1\n 19054: i32 a0 = a0 + 0\n 19056: i32 a2 = a1 + 0\n 19058: a1 = 0x40\n 19061: ecalli 6 // 'hash_keccak_256'\n 19063: a3 = u64 [s1 + 0x138]\n 19067: a0 = u64 [a3 + 0x18]\n 19070: a1 = u64 [a3 + 0x10]\n 19073: a2 = u64 [a3 + 0x8]\n 19076: a4 = u64 [a3]\n 19078: t0 = reverse a0\n 19080: t1 = reverse a1\n 19082: t2 = reverse a2\n 19084: a2 = reverse a4\n 19086: a0 = u64 [s1 + 0x140]\n 19090: a4 = a0 <u 0x1\n 19093: a5 = u64 [s1 + 0x148]\n 19097: a4 = a5 - a4\n 19100: a5 = a5 | a0\n 19103: a5 = a5 <u 0x1\n 19106: a1 = u64 [s1 + 0x150]\n 19110: a3 = a1 - a5\n 19113: a5 = a1 <u a5\n 19116: a1 = u64 [s1 + 0x158]\n 19120: a5 = a1 - a5\n 19123: a0 = a0 + 0xffffffffffffffff\n 19126: a1 = s1 + 0x20d8\n 19130: u64 [a1 + 0x3e0] = a5\n 19134: a1 = s1 + 0x20d8\n 19138: u64 [a1 + 0x3d8] = a3\n 19142: a1 = s1 + 0x20d8\n 19146: u64 [a1 + 0x3d0] = a4\n 19150: a1 = s1 + 0x20d8\n 19154: u64 [a1 + 0x3c8] = a0\n 19158: a0 = s1 + 0x20d8\n 19162: u64 [a0 + 0x400] = a2\n 19166: a0 = s1 + 0x20d8\n 19170: u64 [a0 + 0x3f8] = t2\n 19174: a0 = s1 + 0x20d8\n 19178: u64 [a0 + 0x3f0] = t1\n 19182: a0 = s1 + 0x24e0\n 19186: a1 = s1 + 0x24c0\n 19190: a2 = s1 + 0x24a0\n 19194: a3 = s1 + 0x20d8\n 19198: u64 [a3 + 0x3e8] = t0\n 19202: ra = 782, jump @1136\n      : @673 [@dyn 391] (gas: 19)\n 19208: a0 = s1 + 0x20d8\n 19212: a2 = u64 [a0 + 0x408]\n 19216: a0 = s1 + 0x20d8\n 19220: a0 = u64 [a0 + 0x410]\n 19224: a1 = s1 + 0x20d8\n 19228: a1 = u64 [a1 + 0x418]\n 19232: a3 = s1 + 0x20d8\n 19236: a3 = u64 [a3 + 0x420]\n 19240: a4 = s1 + 0x20d8\n 19244: u64 [a4 + 0x3a0] = a3\n 19248: a3 = s1 + 0x20d8\n 19252: u64 [a3 + 0x398] = a1\n 19256: a1 = s1 + 0x20d8\n 19260: u64 [a1 + 0x390] = a0\n 19264: a0 = s1 + 0x2480\n 19268: a1 = s1 + 0x2460\n 19272: a3 = s1 + 0x20d8\n 19276: u64 [a3 + 0x388] = a2\n 19280: ra = 784, jump @14\n      : @674 [@dyn 392] (gas: 16)\n 19286: a0 = s1 + 0x20d8\n 19290: a0 = u64 [a0 + 0x3c0]\n 19294: a1 = s1 + 0x100\n 19298: u64 [a1 + 0x58] = a0\n 19301: a0 = s1 + 0x20d8\n 19305: a0 = u64 [a0 + 0x3b8]\n 19309: u64 [a1 + 0x50] = a0\n 19312: a0 = s1 + 0x20d8\n 19316: a0 = u64 [a0 + 0x3b0]\n 19320: u64 [a1 + 0x48] = a0\n 19323: a0 = s1 + 0x20d8\n 19327: a0 = u64 [a0 + 0x3a8]\n 19331: u64 [a1 + 0x40] = a0\n 19334: a0 = s1 + 0x2440\n 19338: a1 = 0x40\n 19341: ra = 786, jump @10\n      : @675 [@dyn 393] (gas: 7)\n 19347: a3 = s1 + 0x20d8\n 19351: a5 = a3 + 0x300\n 19355: a0 = u64 [a5 + 0x80]\n 19359: a1 = u64 [a5 + 0x78]\n 19362: a2 = u64 [a5 + 0x70]\n 19365: a4 = u64 [a5 + 0x68]\n 19368: t0 = 788, jump @1241\n      : @676 [@dyn 394] (gas: 1)\n 19374: jump @747 if a0 != 0\n      : @677 (gas: 14)\n 19378: a2 = s1 + 0x100\n 19382: a0 = u64 [a2 + 0x40]\n 19385: a5 = a3 + 0x300\n 19389: u64 [a5 + 0x48] = a0\n 19392: a0 = u64 [a2 + 0x48]\n 19395: u64 [a5 + 0x50] = a0\n 19398: a0 = u64 [a2 + 0x50]\n 19401: u64 [a5 + 0x58] = a0\n 19404: a1 = s1 + 0x2420\n 19408: a0 = u64 [a2 + 0x58]\n 19411: u64 [a5 + 0x60] = a0\n 19414: a0 = a4\n 19416: u64 [s1 + 0x158] = a4\n 19420: ra = 790, jump @12\n      : @678 [@dyn 395] (gas: 3)\n 19426: a0 = i32 [s1 + 0x158]\n 19430: a1 = 0x20\n 19433: ra = 792, jump @0\n      : @679 [@dyn 396] (gas: 5)\n 19439: i32 a1 = a0 + 0\n 19441: a2 = 0x20\n 19444: a0 = 0\n 19446: ecalli 8 // 'seal_return'\n 19448: fallthrough\n      : @680 (gas: 39)\n 19449: a0 = u64 [s1 + 0xb8]\n 19453: ra = u64 [s1 + 0x158]\n 19457: a1 = ra <u a0\n 19460: u64 [s1 + 0x138] = a1\n 19464: a5 = u64 [s1 + 0xa0]\n 19468: t0 = u64 [s1 + 0x150]\n 19472: a3 = t0 ^ a5\n 19475: a2 = t0 <u a5\n 19478: a2 = a1 if a3 == 0\n 19481: t1 = u64 [s1 + 0xa8]\n 19485: a3 = u64 [s1 + 0x148]\n 19489: t2 = a3 - t1\n 19492: a3 = a3 <u t1\n 19495: a1 = u64 [s1 + 0xb0]\n 19499: a4 = u64 [s1 + 0x140]\n 19503: a4 = a4 - a1\n 19506: a4 = a4 - a3\n 19509: a3 = t2 <u a2\n 19512: a4 = a4 - a3\n 19515: u64 [s1 + 0x148] = a4\n 19519: t2 = t2 - a2\n 19522: a2 = t0 - a5\n 19525: a3 = u64 [s1 + 0x138]\n 19529: a2 = a2 - a3\n 19532: a4 = ra - a0\n 19535: a3 = s1 + 0x10d8\n 19539: u64 [a3 + 0x288] = a0\n 19543: u64 [a3 + 0x268] = a4\n 19547: a4 = a3 + 0x200\n 19551: u64 [a4 + 0x90] = a5\n 19555: u64 [a3 + 0x298] = t1\n 19559: u64 [a4 + 0x70] = a2\n 19562: u64 [a4 + 0xa0] = a1\n 19566: u64 [a3 + 0x278] = t2\n 19570: a0 = s1 + 0x1360\n 19574: a1 = s1 + 0x1340\n 19578: a2 = u64 [s1 + 0x148]\n 19582: u64 [a4 + 0x80] = a2\n 19586: ra = 794, jump @1126\n      : @681 [@dyn 397] (gas: 3)\n 19592: a0 = s1 + 0x1320\n 19596: a1 = 0x40\n 19599: ra = 796, jump @10\n      : @682 [@dyn 398] (gas: 2)\n 19605: a2 = s1 + 0x10d8\n 19609: fallthrough\n      : @683 (gas: 13)\n 19610: t0 = u64 [a2 + 0x260]\n 19614: a1 = a2 + 0x200\n 19618: a5 = u64 [a1 + 0x58]\n 19621: a4 = u64 [a1 + 0x50]\n 19624: a0 = u64 [a1 + 0x48]\n 19627: a3 = a4 | t0\n 19630: a1 = a0 | a5\n 19633: a1 = a1 | a3\n 19636: a1 = a1 >> 0x20\n 19639: a3 = a3 | a5\n 19642: a3 = a3 << 0x20\n 19645: a1 = a1 | a3\n 19648: jump @747 if a1 != 0\n      : @684 (gas: 22)\n 19652: a1 = a0 + 0x20\n 19655: u64 [s1 + 0x150] = a1\n 19659: t1 = a1 <u a0\n 19662: a1 = a4 + t1\n 19665: u64 [s1 + 0x158] = a1\n 19669: a1 = a1 <u a4\n 19672: a1 = t1 if t1 == 0\n 19675: a1 = a1 + a5\n 19678: u64 [s1 + 0x140] = a1\n 19682: a1 = a1 <u a5\n 19685: a1 = a1 + t0\n 19688: u64 [s1 + 0x148] = a1\n 19692: u64 [a2 + 576] = 0\n 19696: u64 [a2 + 568] = 0\n 19700: u64 [a2 + 560] = 0\n 19704: a1 = s1 + 0x1300\n 19708: u64 [a2 + 552] = 0x20\n 19713: u64 [s1 + 0xf0] = a0\n 19717: u64 [s1 + 0xe8] = a4\n 19721: u64 [s1 + 0xe0] = t0\n 19725: u64 [s1 + 0xb0] = a5\n 19729: ra = 798, jump @12\n      : @685 [@dyn 399] (gas: 3)\n 19735: a0 = s1 + 0x12e0\n 19739: a1 = u64 [s1 + 0xb8]\n 19743: ra = 800, jump @10\n      : @686 [@dyn 400] (gas: 13)\n 19749: a4 = s1 + 0x100\n 19753: a5 = u64 [a4 + 0x50]\n 19756: a2 = u64 [a4 + 0x40]\n 19759: a0 = a5 | a2\n 19762: a1 = u64 [a4 + 0x58]\n 19765: a3 = u64 [a4 + 0x48]\n 19768: a1 = a1 | a3\n 19771: a0 = a0 | a1\n 19774: a0 = a0 >> 0x20\n 19777: a1 = a1 | a2\n 19780: a1 = a1 << 0x20\n 19783: a0 = a0 | a1\n 19786: jump @747 if a0 != 0\n      : @687 (gas: 20)\n 19790: a2 = s1 + 0x10d8\n 19794: t0 = u64 [a2 + 0x220]\n 19798: a0 = a2 + 0x200\n 19802: a1 = u64 [a0 + 0x18]\n 19805: a3 = u64 [a0 + 0x10]\n 19808: a4 = u64 [a0 + 0x8]\n 19811: a0 = i32 [s1 + 0xf0]\n 19815: u64 [s1 + 0xb8] = a0\n 19819: u64 [s1 + 0xf8] = a4\n 19823: a0 = a2 + 0x100\n 19827: u64 [a0 + 0xe8] = a4\n 19831: u64 [s1 + 0x100] = a3\n 19835: u64 [a0 + 0xf0] = a3\n 19839: u64 [s1 + 0x108] = a1\n 19843: u64 [a0 + 0xf8] = a1\n 19847: a1 = s1 + 0x12c0\n 19851: u64 [s1 + 0x110] = t0\n 19855: u64 [a2 + 0x200] = t0\n 19859: a0 = a5\n 19861: ra = 802, jump @12\n      : @688 [@dyn 401] (gas: 24)\n 19867: ra = 0\n 19869: a4 = 0\n 19871: t0 = 0\n 19873: t2 = 0\n 19875: a1 = u64 [s1 + 0xf0]\n 19879: a0 = a1 + 0x40\n 19882: a3 = s1 + 0x100\n 19886: u64 [a3 + 0x50] = a0\n 19889: a0 = a0 <u a1\n 19892: a2 = u64 [s1 + 0xe8]\n 19896: a1 = a2 + a0\n 19899: u64 [a3 + 0x48] = a1\n 19902: a1 = a1 <u a2\n 19905: a1 = a0 if a0 == 0\n 19908: a0 = u64 [s1 + 0xb0]\n 19912: a1 = a1 + a0\n 19915: u64 [a3 + 0x40] = a1\n 19918: a0 = a1 <u a0\n 19921: a1 = u64 [s1 + 0xe0]\n 19925: a0 = a0 + a1\n 19928: u64 [a3 + 0x58] = a0\n 19931: a1 = u64 [s1 + 0xc8]\n 19935: t1 = u64 [s1 + 0xc0]\n 19939: fallthrough\n      : @689 (gas: 17)\n 19940: a0 = u64 [s1 + 0xf8]\n 19944: a0 = ra <u a0\n 19947: a2 = u64 [s1 + 0x100]\n 19951: a3 = a4 ^ a2\n 19954: u64 [s1 + 0x138] = a4\n 19958: a2 = a4 <u a2\n 19961: a2 = a0 if a3 == 0\n 19964: a5 = u64 [s1 + 0x108]\n 19968: a0 = t0 <u a5\n 19971: a3 = u64 [s1 + 0x110]\n 19975: a4 = t2 ^ a3\n 19978: a3 = t2 <u a3\n 19981: a3 = a0 if a4 == 0\n 19984: a0 = t0 ^ a5\n 19987: a0 = a0 | a4\n 19990: a3 = a2 if a0 == 0\n 19993: jump @745 if a3 == 0\n      : @690 (gas: 10)\n 19997: a0 = a1 | t1\n 20000: a2 = u64 [s1 + 0xd8]\n 20004: a3 = u64 [s1 + 0xd0]\n 20008: a2 = a2 | a3\n 20011: a0 = a0 | a2\n 20014: a0 = a0 >> 0x20\n 20017: a2 = a2 | t1\n 20020: a2 = a2 << 0x20\n 20023: a0 = a0 | a2\n 20026: jump @747 if a0 != 0\n      : @691 (gas: 7)\n 20030: u64 [s1 + 0x120] = t0\n 20034: u64 [s1 + 0x128] = t2\n 20038: u64 [s1 + 0x130] = ra\n 20042: u64 [s1 + 0xc0] = t1\n 20046: a0 = s1 + 0x12a0\n 20050: u64 [s1 + 0xc8] = a1\n 20054: ra = 804, jump @10\n      : @692 [@dyn 402] (gas: 13)\n 20060: a1 = s1 + 0x100\n 20064: a5 = u64 [a1 + 0x50]\n 20067: a2 = u64 [a1 + 0x40]\n 20070: a0 = a5 | a2\n 20073: a3 = u64 [a1 + 0x58]\n 20076: t1 = u64 [s1 + 0x148]\n 20080: a1 = t1 | a3\n 20083: a0 = a0 | a1\n 20086: a0 = a0 >> 0x20\n 20089: a1 = a1 | a2\n 20092: a1 = a1 << 0x20\n 20095: a0 = a0 | a1\n 20098: jump @747 if a0 != 0\n      : @693 (gas: 17)\n 20102: a4 = s1 + 0x10d8\n 20106: u64 [s1 + 0x140] = a2\n 20110: t0 = u64 [a4 + 0x1e0]\n 20114: a2 = a4 + 0x100\n 20118: a1 = u64 [a2 + 0xd8]\n 20122: a0 = u64 [a2 + 0xd0]\n 20126: u64 [s1 + 0x158] = a3\n 20130: a3 = u64 [a2 + 0xc8]\n 20134: u64 [a2 + 0xa8] = a3\n 20138: u64 [a2 + 0xb0] = a0\n 20142: u64 [a2 + 0xb8] = a1\n 20146: a1 = s1 + 0x1280\n 20150: u64 [a4 + 0x1c0] = t0\n 20154: a0 = a5\n 20156: u64 [s1 + 0x150] = a5\n 20160: u64 [s1 + 0x148] = t1\n 20164: ra = 806, jump @12\n      : @694 [@dyn 403] (gas: 50)\n 20170: a1 = u64 [s1 + 0x150]\n 20174: a0 = a1 + 0x20\n 20177: u64 [s1 + 0x118] = a0\n 20181: a2 = a0 <u a1\n 20184: a0 = u64 [s1 + 0x148]\n 20188: t1 = a0 + a2\n 20191: a3 = t1 <u a0\n 20194: a3 = a2 if a2 == 0\n 20197: a0 = u64 [s1 + 0x140]\n 20201: t0 = a0 + a3\n 20204: a3 = t0 <u a0\n 20207: a0 = u64 [s1 + 0x158]\n 20211: a0 = a0 + a3\n 20214: u64 [s1 + 0x158] = a0\n 20218: a0 = u64 [s1 + 0xc8]\n 20222: a3 = a0 + 0x20\n 20225: a4 = a3 <u a0\n 20228: a0 = u64 [s1 + 0xd0]\n 20232: a5 = a0 + a4\n 20235: a0 = a5 <u a0\n 20238: a0 = a4 if a4 == 0\n 20241: a1 = u64 [s1 + 0xc0]\n 20245: a2 = a1 + a0\n 20248: a4 = a2 <u a1\n 20251: a0 = u64 [s1 + 0xd8]\n 20255: a0 = a0 + a4\n 20258: u64 [s1 + 0xd8] = a0\n 20262: ra = u64 [s1 + 0x130]\n 20266: ra = ra + 0x1\n 20269: a4 = ra <u 0x1\n 20272: t2 = u64 [s1 + 0x138]\n 20276: t2 = t2 + a4\n 20279: a4 = ra | t2\n 20282: a4 = a4 <u 0x1\n 20285: a0 = u64 [s1 + 0x120]\n 20289: a4 = a4 + a0\n 20292: a1 = a4 <u a0\n 20295: a0 = u64 [s1 + 0x128]\n 20299: a0 = a0 + a1\n 20302: a1 = u64 [s1 + 0x118]\n 20306: u64 [s1 + 0x150] = a1\n 20310: u64 [s1 + 0x148] = t1\n 20314: u64 [s1 + 0x140] = t0\n 20318: a1 = a3\n 20320: u64 [s1 + 0xd0] = a5\n 20324: t1 = a2\n 20326: t0 = a4\n 20328: a4 = t2\n 20330: t2 = a0\n 20332: jump @689\n      : @695 (gas: 6)\n 20335: a0 = t1 | a5\n 20338: a0 = a0 >> 0x20\n 20341: a1 = a1 | a5\n 20344: a1 = a1 << 0x20\n 20347: a0 = a0 | a1\n 20350: jump @747 if a0 != 0\n      : @696 (gas: 12)\n 20354: u64 [t2 + 1632] = 0\n 20358: u64 [t2 + 1624] = 0\n 20362: u64 [t2 + 1616] = 0\n 20366: a0 = 0x8c379a000000000\n 20376: a1 = s1 + 0x7ff\n 20380: a1 = a1 + 0x721\n 20384: u64 [t2 + 0x668] = a0\n 20388: a0 = a3\n 20390: u64 [s1 + 0x108] = a3\n 20394: u64 [s1 + 0x100] = t0\n 20398: u64 [s1 + 0xf8] = a4\n 20402: ra = 808, jump @12\n      : @697 [@dyn 404] (gas: 9)\n 20408: a1 = u64 [s1 + 0x108]\n 20412: a3 = 0x100000000\n 20422: a0 = 0xfffffffc\n 20432: a0 = a1 <u a0\n 20435: a2 = u64 [s1 + 0xf8]\n 20439: a0 = 0 if a2 != 0\n 20441: a2 = u64 [s1 + 0x100]\n 20445: a0 = 0 if a2 != 0\n 20447: jump @747 if a0 == 0\n      : @698 (gas: 13)\n 20451: i32 a0 = a1 + 0\n 20453: u64 [s1 + 0x150] = a0\n 20457: i32 a0 = a0 + 0x4\n 20460: a2 = s1 + 0x7ff\n 20464: a2 = a2 + 0xd1\n 20468: u64 [a2 + 1608] = 0\n 20472: u64 [a2 + 1600] = 0\n 20476: u64 [a2 + 1584] = 0x20\n 20481: a1 = s1 + 0x7ff\n 20485: a1 = a1 + 0x701\n 20489: u64 [a2 + 1592] = 0\n 20493: u64 [s1 + 0x158] = a3\n 20497: ra = 810, jump @12\n      : @699 [@dyn 405] (gas: 10)\n 20503: a4 = u64 [s1 + 0xf8]\n 20507: a1 = s1 + 0x100\n 20511: a3 = u64 [a1]\n 20513: a2 = u64 [a1 + 0x8]\n 20516: a0 = u64 [a1 + 0x58]\n 20519: a0 = a0 + 0xffffffffffffffdc\n 20522: a0 = a2 <u a0\n 20525: a0 = 0 if a4 != 0\n 20527: a0 = 0 if a3 != 0\n 20529: jump @747 if a0 == 0\n      : @700 (gas: 11)\n 20533: a0 = u64 [s1 + 0x150]\n 20537: i32 a0 = a0 + 0x24\n 20540: a5 = s1 + 0x7ff\n 20544: a5 = a5 + 0xd1\n 20548: u64 [a5 + 1576] = 0\n 20552: u64 [a5 + 1568] = 0\n 20556: u64 [a5 + 1552] = 0xc\n 20561: a1 = s1 + 0x7ff\n 20565: a1 = a1 + 0x6e1\n 20569: u64 [a5 + 1560] = 0\n 20573: ra = 812, jump @12\n      : @701 [@dyn 406] (gas: 2)\n 20579: a0 = 0xffffffbc\n 20589: t0 = 814, jump @1245\n      : @702 [@dyn 407] (gas: 1)\n 20595: jump @747 if a0 == 0\n      : @703 (gas: 13)\n 20599: a0 = u64 [s1 + 0x150]\n 20603: i32 a0 = a0 + 0x44\n 20606: a1 = u64 [0x200c0]\n 20611: a2 = s1 + 0x7ff\n 20615: a2 = a2 + 0xd1\n 20619: u64 [a2 + 1528] = 0\n 20623: u64 [a2 + 0x608] = a1\n 20627: a1 = 0x6164657200000000\n 20637: u64 [a2 + 0x600] = a1\n 20641: a1 = s1 + 0x7ff\n 20645: a1 = a1 + 0x6c1\n 20649: u64 [a2 + 1520] = 0\n 20653: ra = 816, jump @12\n      : @704 [@dyn 408] (gas: 4)\n 20659: a1 = 0x64\n 20662: a0 = u64 [s1 + 0x150]\n 20666: ra = 0x360\n 20670: jump @0\n      : @705 (gas: 37)\n 20673: t0 = u64 [s1 + 0x70]\n 20676: a2 = u64 [s1 + 0x128]\n 20680: t2 = a2 <u t0\n 20683: ra = u64 [s1 + 0x78]\n 20686: a3 = a1 ^ ra\n 20689: a2 = a1 <u ra\n 20692: a2 = t2 if a3 == 0\n 20695: a5 = u64 [s1 + 0x80]\n 20699: a3 = a4 - a5\n 20702: t1 = a3 <u a2\n 20705: a4 = a4 <u a5\n 20708: a4 = a4 + t1\n 20711: u64 [s1 + 0x158] = a4\n 20715: t1 = u64 [s1 + 0x88]\n 20719: a4 = a0 - t1\n 20722: a0 = u64 [s1 + 0x158]\n 20726: a0 = a4 - a0\n 20729: u64 [s1 + 0x158] = a0\n 20733: a4 = a3 - a2\n 20736: a2 = a1 - ra\n 20739: a2 = a2 - t2\n 20742: a0 = u64 [s1 + 0x128]\n 20746: a0 = a0 - t0\n 20749: a3 = s1 + 0x10d8\n 20753: u64 [a3 + 0x5e8] = t0\n 20757: u64 [a3 + 0x5c8] = a0\n 20761: u64 [a3 + 0x5f0] = ra\n 20765: u64 [a3 + 0x5f8] = a5\n 20769: a5 = a3 + 0x500\n 20773: u64 [a5 + 0xd0] = a2\n 20777: u64 [a3 + 0x600] = t1\n 20781: u64 [a5 + 0xd8] = a4\n 20785: a0 = s1 + 0x16c0\n 20789: a1 = s1 + 0x16a0\n 20793: a2 = u64 [s1 + 0x158]\n 20797: u64 [a5 + 0xe0] = a2\n 20801: ra = 818, jump @1126\n      : @706 [@dyn 409] (gas: 10)\n 20807: a0 = u64 [s1 + 0x98]\n 20811: a1 = u64 [s1 + 0x90]\n 20815: a0 = a0 | a1\n 20818: a1 = 0xffffffe0\n 20828: a2 = u64 [s1 + 0xa8]\n 20832: a1 = a2 <u a1\n 20835: a3 = u64 [s1 + 0xa0]\n 20839: a1 = 0 if a3 != 0\n 20841: a1 = 0 if a0 != 0\n 20843: jump @747 if a1 == 0\n      : @707 (gas: 14)\n 20847: i32 a0 = a2 + 0x20\n 20850: a4 = s1 + 0x10d8\n 20854: a1 = u64 [s1 + 0x70]\n 20857: a2 = a4 + 0x500\n 20861: u64 [a2 + 0xa8] = a1\n 20865: a1 = u64 [s1 + 0x78]\n 20868: u64 [a2 + 0xb0] = a1\n 20872: a1 = u64 [s1 + 0x80]\n 20876: u64 [a2 + 0xb8] = a1\n 20880: a1 = s1 + 0x1680\n 20884: a3 = u64 [s1 + 0x88]\n 20888: u64 [a2 + 0xc0] = a3\n 20892: u64 [s1 + 0x158] = a0\n 20896: ra = 820, jump @12\n      : @708 [@dyn 410] (gas: 3)\n 20902: a0 = s1 + 0x1660\n 20906: a1 = 0x40\n 20909: ra = 822, jump @10\n      : @709 [@dyn 411] (gas: 14)\n 20915: t0 = s1 + 0x10d8\n 20919: a1 = t0 + 0x500\n 20923: a3 = u64 [a1 + 0xa0]\n 20927: a5 = u64 [a1 + 0x98]\n 20931: a4 = u64 [a1 + 0x90]\n 20935: a0 = u64 [a1 + 0x88]\n 20939: a2 = a4 | a3\n 20942: a1 = a0 | a5\n 20945: a1 = a1 | a2\n 20948: a1 = a1 >> 0x20\n 20951: a2 = a2 | a5\n 20954: a2 = a2 << 0x20\n 20957: a1 = a1 | a2\n 20960: jump @747 if a1 != 0\n      : @710 (gas: 10)\n 20964: u64 [t0 + 1408] = 0\n 20968: u64 [t0 + 1400] = 0\n 20972: u64 [t0 + 1392] = 0\n 20976: u64 [s1 + 0x88] = a3\n 20980: a1 = s1 + 0x1640\n 20984: u64 [t0 + 1384] = 0x20\n 20989: u64 [s1 + 0x98] = a0\n 20993: u64 [s1 + 0x90] = a4\n 20997: u64 [s1 + 0x80] = a5\n 21001: ra = 824, jump @12\n      : @711 [@dyn 412] (gas: 3)\n 21007: a0 = s1 + 0x1620\n 21011: a1 = u64 [s1 + 0xa8]\n 21015: ra = 826, jump @10\n      : @712 [@dyn 413] (gas: 11)\n 21021: t0 = u64 [s1 + 0x80]\n 21025: a3 = u64 [s1 + 0x88]\n 21029: a1 = u64 [s1 + 0x98]\n 21033: a5 = t0 | a3\n 21036: a4 = 0x100000000\n 21046: a0 = 0xffffffe0\n 21056: a0 = a1 <u a0\n 21059: a2 = u64 [s1 + 0x90]\n 21063: a0 = 0 if a2 != 0\n 21065: a0 = 0 if a5 != 0\n 21067: jump @747 if a0 == 0\n      : @713 (gas: 3)\n 21071: t0 = 0x33c\n 21075: a2 = s1 + 0x10d8\n 21079: fallthrough\n      : @714 [@dyn 414] (gas: 20)\n 21080: a3 = a2 + 0x500\n 21084: a0 = u64 [a3 + 0x60]\n 21087: u64 [s1 + 0x128] = a0\n 21091: a0 = u64 [a3 + 0x58]\n 21094: u64 [s1 + 0x140] = a0\n 21098: a0 = u64 [a3 + 0x50]\n 21101: u64 [s1 + 0x148] = a0\n 21105: a0 = u64 [a3 + 0x48]\n 21108: u64 [s1 + 0x150] = a0\n 21112: i32 a1 = a1 + 0\n 21114: u64 [s1 + 0x78] = a1\n 21117: i32 a0 = a1 + 0x20\n 21120: u64 [a2 + 1344] = 0\n 21124: u64 [a2 + 1336] = 0\n 21128: u64 [a3 + 40] = 0x40\n 21132: a1 = s1 + 0x1600\n 21136: u64 [a2 + 1328] = 0\n 21140: u64 [s1 + 0x138] = a5\n 21144: u64 [s1 + 0x130] = a4\n 21148: ra = 830, jump @12\n      : @715 [@dyn 415] (gas: 33)\n 21154: a0 = u64 [s1 + 0x98]\n 21158: a0 = a0 + 0x60\n 21161: a1 = u64 [s1 + 0x98]\n 21165: a1 = a0 <u a1\n 21168: a2 = u64 [s1 + 0x90]\n 21172: a2 = a2 + a1\n 21175: a3 = u64 [s1 + 0x90]\n 21179: a3 = a2 <u a3\n 21182: a3 = a1 if a1 == 0\n 21185: a1 = u64 [s1 + 0x80]\n 21189: a3 = a3 + a1\n 21192: a1 = a3 <u a1\n 21195: a4 = u64 [s1 + 0x88]\n 21199: a4 = a4 + a1\n 21202: a1 = s1 + 0x10d8\n 21206: a5 = a1 + 0x400\n 21210: u64 [a5 + 0xd0] = a2\n 21214: u64 [a5 + 0xc8] = a0\n 21218: a0 = u64 [s1 + 0x128]\n 21222: u64 [a1 + 0x500] = a0\n 21226: a0 = u64 [s1 + 0x140]\n 21230: u64 [a5 + 0xf8] = a0\n 21234: a0 = u64 [s1 + 0x148]\n 21238: u64 [a5 + 0xf0] = a0\n 21242: a0 = u64 [s1 + 0x150]\n 21246: u64 [a5 + 0xe8] = a0\n 21250: u64 [a5 + 0xd8] = a3\n 21254: a3 = a1\n 21256: a0 = s1 + 0x15e0\n 21260: a1 = s1 + 0x15c0\n 21264: a2 = s1 + 0x15a0\n 21268: u64 [a3 + 0x4e0] = a4\n 21272: ra = 832, jump @1057\n      : @716 [@dyn 416] (gas: 13)\n 21278: a1 = s1 + 0x10d8\n 21282: a2 = a1 + 0x500\n 21286: a0 = u64 [a2 + 0x20]\n 21289: u64 [s1 + 0x140] = a0\n 21293: a0 = u64 [a2 + 0x18]\n 21296: u64 [s1 + 0x148] = a0\n 21300: a0 = u64 [a2 + 0x10]\n 21303: u64 [s1 + 0x150] = a0\n 21307: a0 = u64 [a2 + 0x8]\n 21310: u64 [s1 + 0x110] = a0\n 21314: a0 = s1 + 0x1580\n 21318: a1 = u64 [s1 + 0x158]\n 21322: ra = 834, jump @10\n      : @717 [@dyn 417] (gas: 9)\n 21328: a3 = u64 [s1 + 0x90]\n 21332: a5 = u64 [s1 + 0x98]\n 21336: a0 = u64 [s1 + 0x130]\n 21340: a0 = a0 + 0xffffffffffffffc0\n 21343: a0 = a5 <u a0\n 21346: a0 = 0 if a3 != 0\n 21348: a1 = u64 [s1 + 0x138]\n 21352: a0 = 0 if a1 != 0\n 21354: jump @747 if a0 == 0\n      : @718 (gas: 51)\n 21358: t1 = s1 + 0x10d8\n 21362: a0 = u64 [t1 + 0x4c0]\n 21366: u64 [s1 + 0x138] = a0\n 21370: a0 = u64 [t1 + 0x4b8]\n 21374: u64 [s1 + 0x130] = a0\n 21378: a1 = u64 [s1 + 0x110]\n 21382: a2 = a1 <u a5\n 21385: a4 = u64 [s1 + 0x150]\n 21389: t0 = a4 ^ a3\n 21392: a0 = a4 <u a3\n 21395: a0 = a2 if t0 == 0\n 21398: t2 = u64 [s1 + 0x148]\n 21402: t0 = u64 [s1 + 0x80]\n 21406: t1 = t2 - t0\n 21409: a3 = a4 - a3\n 21412: a4 = a3 - a2\n 21415: a3 = a1 - a5\n 21418: ra = a3 + 0xffffffffffffffe0\n 21421: a5 = ra <u a3\n 21424: a3 = a4 + a5\n 21427: a3 = a3 + 0xffffffffffffffff\n 21430: a1 = a3 ^ a4\n 21433: a4 = a3 <u a4\n 21436: a4 = a5 if a1 == 0\n 21439: a1 = t2 <u t0\n 21442: a5 = u64 [s1 + 0x140]\n 21446: a2 = u64 [s1 + 0x88]\n 21450: a5 = a5 - a2\n 21453: a5 = a5 - a1\n 21456: a1 = t1 <u a0\n 21459: a5 = a5 - a1\n 21462: a2 = s1 + 0x10d8\n 21466: a1 = u64 [a2 + 0x4b0]\n 21470: u64 [s1 + 0x128] = a1\n 21474: a0 = t1 - a0\n 21477: a1 = a0 <u 0x1\n 21480: a5 = a5 - a1\n 21483: a1 = u64 [a2 + 0x4a8]\n 21487: u64 [s1 + 0x158] = a1\n 21491: a0 = a0 + 0xffffffffffffffff\n 21494: a4 = a4 + a0\n 21497: a0 = a4 <u a0\n 21500: a5 = a5 + a0\n 21503: a0 = u64 [s1 + 0x78]\n 21506: i32 a0 = a0 + 0x40\n 21509: u64 [a2 + 0x488] = ra\n 21513: u64 [a2 + 0x490] = a3\n 21517: u64 [a2 + 0x498] = a4\n 21521: a1 = s1 + 0x1560\n 21525: u64 [a2 + 0x4a0] = a5\n 21529: ra = 836, jump @12\n      : @719 [@dyn 418] (gas: 13)\n 21535: a5 = s1 + 0x100\n 21539: a1 = u64 [a5 + 0x58]\n 21542: a3 = u64 [a5 + 0x28]\n 21545: a2 = u64 [a5 + 0x30]\n 21548: a0 = a1 | a2\n 21551: a4 = u64 [a5 + 0x38]\n 21554: a4 = a4 | a3\n 21557: a0 = a0 | a4\n 21560: a0 = a0 >> 0x20\n 21563: a4 = a4 | a2\n 21566: a4 = a4 << 0x20\n 21569: a0 = a0 | a4\n 21572: jump @747 if a0 != 0\n      : @720 (gas: 2)\n 21576: a0 = s1 + 0x1540\n 21580: ra = 838, jump @10\n      : @721 [@dyn 419] (gas: 13)\n 21586: a5 = s1 + 0x100\n 21590: a2 = u64 [a5 + 0x48]\n 21593: a4 = u64 [a5 + 0x10]\n 21596: a0 = a4 | a2\n 21599: a1 = u64 [a5 + 0x40]\n 21602: a3 = u64 [a5 + 0x50]\n 21605: a1 = a1 | a3\n 21608: a0 = a0 | a1\n 21611: a0 = a0 >> 0x20\n 21614: a1 = a1 | a2\n 21617: a1 = a1 << 0x20\n 21620: a0 = a0 | a1\n 21623: jump @747 if a0 != 0\n      : @722 (gas: 18)\n 21627: a3 = a4\n 21629: a0 = s1 + 0x10d8\n 21633: a2 = u64 [a0 + 0x480]\n 21637: a1 = u64 [a0 + 0x478]\n 21641: a4 = u64 [a0 + 0x470]\n 21645: a5 = u64 [a0 + 0x468]\n 21649: u64 [s1 + 0xa0] = a5\n 21653: u64 [a0 + 0x448] = a5\n 21657: u64 [s1 + 0xa8] = a4\n 21661: a5 = a0 + 0x400\n 21665: u64 [a5 + 0x50] = a4\n 21668: u64 [s1 + 0xb0] = a1\n 21672: u64 [a5 + 0x58] = a1\n 21675: a1 = s1 + 0x1520\n 21679: u64 [s1 + 0xb8] = a2\n 21683: u64 [a5 + 0x60] = a2\n 21686: a0 = a3\n 21688: ra = 840, jump @12\n      : @723 [@dyn 420] (gas: 8)\n 21694: a5 = u64 [s1 + 0x110]\n 21698: a2 = 0\n 21700: a3 = 0\n 21702: t2 = 0\n 21704: ra = 0\n 21706: a0 = 0xffffffe0\n 21716: u64 [s1 + 0x108] = a0\n 21720: fallthrough\n      : @724 (gas: 32)\n 21721: t0 = a5 + 0x20\n 21724: a0 = u64 [s1 + 0xa0]\n 21728: u64 [s1 + 0x100] = a2\n 21732: a0 = a2 <u a0\n 21735: a2 = u64 [s1 + 0xa8]\n 21739: a1 = a3 ^ a2\n 21742: u64 [s1 + 0xf8] = a3\n 21746: a2 = a3 <u a2\n 21749: a2 = a0 if a1 == 0\n 21752: t1 = u64 [s1 + 0xb0]\n 21756: a0 = t2 <u t1\n 21759: a3 = u64 [s1 + 0xb8]\n 21763: a1 = ra ^ a3\n 21766: u64 [s1 + 0xf0] = ra\n 21770: a3 = ra <u a3\n 21773: a3 = a0 if a1 == 0\n 21776: a0 = t2 ^ t1\n 21779: a0 = a0 | a1\n 21782: u64 [s1 + 0x120] = t0\n 21786: a4 = a5\n 21788: a5 = t0 <u a5\n 21791: a3 = a2 if a0 == 0\n 21794: a0 = u64 [s1 + 0x150]\n 21798: a1 = a0 + a5\n 21801: a0 = a1 <u a0\n 21804: a0 = a5 if a5 == 0\n 21807: a2 = u64 [s1 + 0x148]\n 21811: a5 = a2 + a0\n 21814: a0 = a5 <u a2\n 21817: a2 = u64 [s1 + 0x140]\n 21821: a0 = a0 + a2\n 21824: jump @791 if a3 == 0\n      : @725 (gas: 16)\n 21828: u64 [s1 + 0xc8] = a0\n 21832: u64 [s1 + 0xd0] = a5\n 21836: u64 [s1 + 0xe0] = a1\n 21840: u64 [s1 + 0xe8] = t2\n 21844: a5 = s1 + 0x100\n 21848: u64 [a5 + 0x10] = a4\n 21851: a0 = u64 [a5 + 0x38]\n 21854: a1 = u64 [a5 + 0x30]\n 21857: a0 = a0 | a1\n 21860: a2 = u64 [a5 + 0x58]\n 21863: a1 = u64 [a5 + 0x8]\n 21866: a1 = a2 <u a1\n 21869: a3 = u64 [a5 + 0x28]\n 21872: a1 = 0 if a3 != 0\n 21874: a1 = 0 if a0 != 0\n 21876: jump @747 if a1 == 0\n      : @726 (gas: 5)\n 21880: a1 = a2 + 0x20\n 21883: a0 = s1 + 0x1500\n 21887: u64 [s1 + 0x118] = a1\n 21891: u64 [s1 + 0x158] = a2\n 21895: ra = 842, jump @10\n      : @727 [@dyn 421] (gas: 11)\n 21901: a3 = s1 + 0x100\n 21905: a0 = u64 [a3 + 0x48]\n 21908: a1 = u64 [a3 + 0x40]\n 21911: a0 = a0 | a1\n 21914: a1 = u64 [a3 + 0x10]\n 21917: a2 = u64 [a3 + 0x8]\n 21920: a1 = a1 <u a2\n 21923: a2 = u64 [a3 + 0x50]\n 21926: a1 = 0 if a2 != 0\n 21928: a1 = 0 if a0 != 0\n 21930: jump @747 if a1 == 0\n      : @728 (gas: 32)\n 21934: a0 = u64 [s1 + 0x118]\n 21938: a1 = u64 [s1 + 0x158]\n 21942: a0 = a0 <u a1\n 21945: a1 = u64 [s1 + 0x128]\n 21949: a2 = a1 + a0\n 21952: u64 [s1 + 0x110] = a2\n 21956: a1 = a2 <u a1\n 21959: a1 = a0 if a0 == 0\n 21962: a0 = u64 [s1 + 0x130]\n 21966: a1 = a1 + a0\n 21969: u64 [s1 + 0xc0] = a1\n 21973: a0 = a1 <u a0\n 21976: a4 = s1 + 0x10d8\n 21980: a1 = u64 [a4 + 0x438]\n 21984: a2 = u64 [a4 + 0x430]\n 21988: a3 = u64 [a4 + 0x428]\n 21992: a5 = u64 [s1 + 0x138]\n 21996: a5 = a5 + a0\n 21999: u64 [s1 + 0x138] = a5\n 22003: a0 = u64 [s1 + 0xd8]\n 22007: a0 = a0 & a1\n 22010: a5 = 0xffffffffffffffff\n 22013: a1 = a2 & a5\n 22016: a2 = a3 & a5\n 22019: u64 [a4 + 1056] = 0\n 22023: a3 = a4 + 0x400\n 22027: u64 [a3 + 0x8] = a2\n 22030: u64 [a3 + 0x10] = a1\n 22033: a1 = s1 + 0x14e0\n 22037: u64 [a3 + 0x18] = a0\n 22040: a0 = u64 [s1 + 0x120]\n 22044: ra = 844, jump @12\n      : @729 [@dyn 422] (gas: 27)\n 22050: a4 = s1 + 0x100\n 22054: a2 = u64 [a4]\n 22056: a2 = a2 + 0x1\n 22059: a0 = a2 <u 0x1\n 22062: a3 = u64 [s1 + 0xf8]\n 22066: a3 = a3 + a0\n 22069: a0 = a2 | a3\n 22072: a0 = a0 <u 0x1\n 22075: a1 = u64 [s1 + 0xe8]\n 22079: t2 = a1 + a0\n 22082: a1 = t2 <u a1\n 22085: ra = u64 [s1 + 0xf0]\n 22089: ra = ra + a1\n 22092: a5 = u64 [a4 + 0x20]\n 22095: a1 = u64 [s1 + 0xe0]\n 22099: u64 [a4 + 0x50] = a1\n 22102: a1 = u64 [s1 + 0xd0]\n 22106: u64 [a4 + 0x48] = a1\n 22109: a1 = u64 [s1 + 0xc8]\n 22113: u64 [a4 + 0x40] = a1\n 22116: a1 = u64 [a4 + 0x18]\n 22119: u64 [a4 + 0x58] = a1\n 22122: a1 = u64 [a4 + 0x10]\n 22125: u64 [a4 + 0x28] = a1\n 22128: a1 = u64 [s1 + 0xc0]\n 22132: u64 [a4 + 0x30] = a1\n 22135: jump @724\n      : @730 (gas: 3)\n 22138: a0 = s1 + 0x2220\n 22142: a1 = 0x40\n 22145: ra = 846, jump @10\n      : @731 [@dyn 423] (gas: 14)\n 22151: a2 = s1 + 0x20d8\n 22155: t0 = u64 [a2 + 0x160]\n 22159: a1 = a2 + 0x100\n 22163: a5 = u64 [a1 + 0x58]\n 22166: a3 = u64 [a1 + 0x50]\n 22169: a0 = u64 [a1 + 0x48]\n 22172: a4 = a3 | t0\n 22175: a1 = a0 | a5\n 22178: a1 = a1 | a4\n 22181: a1 = a1 >> 0x20\n 22184: a4 = a4 | a5\n 22187: a4 = a4 << 0x20\n 22190: a1 = a1 | a4\n 22193: jump @747 if a1 != 0\n      : @732 (gas: 11)\n 22197: u64 [a2 + 312] = 0\n 22201: u64 [a2 + 304] = 0\n 22205: u64 [a2 + 296] = 0\n 22209: a4 = 0x8c379a000000000\n 22219: a1 = s1 + 0x2200\n 22223: u64 [a2 + 0x140] = a4\n 22227: u64 [s1 + 0x158] = a3\n 22231: u64 [s1 + 0x150] = a0\n 22235: u64 [s1 + 0x140] = t0\n 22239: u64 [s1 + 0x148] = a5\n 22243: ra = 848, jump @12\n      : @733 [@dyn 424] (gas: 1)\n 22249: t0 = 850, jump @1206\n      : @734 [@dyn 425] (gas: 1)\n 22255: jump @747 if a0 == 0\n      : @735 (gas: 6)\n 22259: i32 a0 = a2 + 0\n 22261: u64 [s1 + 0x138] = a0\n 22265: i32 a0 = a0 + 0x4\n 22268: t0 = 0x354\n 22272: a2 = s1 + 0x20d8\n 22276: fallthrough\n      : @736 [@dyn 426] (gas: 8)\n 22277: u64 [a2 + 288] = 0\n 22281: u64 [a2 + 280] = 0\n 22285: u64 [a2 + 264] = 0x20\n 22290: a1 = s1 + 0x21e0\n 22294: u64 [a2 + 272] = 0\n 22298: u64 [s1 + 0x148] = a3\n 22302: u64 [s1 + 0x140] = a4\n 22306: ra = 854, jump @12\n      : @737 [@dyn 427] (gas: 1)\n 22312: t0 = 856, jump @1214\n      : @738 [@dyn 428] (gas: 1)\n 22318: jump @747 if a0 == 0\n      : @739 (gas: 9)\n 22322: a0 = u64 [s1 + 0x138]\n 22326: i32 a0 = a0 + 0x24\n 22329: a4 = s1 + 0x20d8\n 22333: u64 [a4 + 256] = 0\n 22337: u64 [a4 + 248] = 0\n 22341: u64 [a4 + 232] = 0xf\n 22346: a1 = s1 + 0x21c0\n 22350: u64 [a4 + 240] = 0\n 22354: ra = 858, jump @12\n      : @740 [@dyn 429] (gas: 1)\n 22360: t0 = 860, jump @1208\n      : @741 [@dyn 430] (gas: 1)\n 22366: jump @747 if a0 == 0\n      : @742 (gas: 12)\n 22370: a0 = u64 [s1 + 0x138]\n 22374: i32 a0 = a0 + 0x44\n 22377: a1 = u64 [0x20090]\n 22382: a2 = u64 [0x20098]\n 22387: a3 = s1 + 0x20d8\n 22391: u64 [a3 + 0xe0] = a1\n 22395: a4 = 0\n 22397: u64 [a3 + 208] = 0\n 22401: u64 [a3 + 0xd8] = a2\n 22405: a1 = s1 + 0x21a0\n 22409: u64 [a3 + 200] = 0\n 22413: ra = 862, jump @12\n      : @743 [@dyn 431] (gas: 3)\n 22419: a1 = 0x64\n 22422: a0 = u64 [s1 + 0x138]\n 22426: ra = 864, jump @0\n      : @744 [@dyn 432] (gas: 5)\n 22432: i32 a1 = a0 + 0\n 22434: a0 = 0x1\n 22437: a2 = 0x64\n 22440: ecalli 8 // 'seal_return'\n 22442: fallthrough\n      : @745 (gas: 30)\n 22443: t0 = u64 [s1 + 0xf0]\n 22447: t2 = u64 [s1 + 0x150]\n 22451: ra = t2 <u t0\n 22454: a5 = u64 [s1 + 0xe8]\n 22458: a1 = u64 [s1 + 0x148]\n 22462: a3 = a1 ^ a5\n 22465: a2 = a1 <u a5\n 22468: a2 = ra if a3 == 0\n 22471: a3 = u64 [s1 + 0xb0]\n 22475: a4 = u64 [s1 + 0x140]\n 22479: a0 = a4 - a3\n 22482: t1 = a4 <u a3\n 22485: a4 = u64 [s1 + 0xe0]\n 22489: a3 = u64 [s1 + 0x158]\n 22493: a4 = a3 - a4\n 22496: a4 = a4 - t1\n 22499: a3 = a0 <u a2\n 22502: a4 = a4 - a3\n 22505: a0 = a0 - a2\n 22508: a2 = a1 - a5\n 22511: a2 = a2 - ra\n 22514: a5 = t2 - t0\n 22517: a2 = a2 | a4\n 22520: a3 = a5 | a0\n 22523: a3 = a3 | a2\n 22526: a1 = a2 | a0\n 22529: a3 = a3 >> 0x20\n 22532: a1 = a1 << 0x20\n 22535: a1 = a1 | a3\n 22538: jump @747 if a1 != 0\n      : @746 (gas: 1)\n 22541: jump @1021\n      : @747 (gas: 1)\n 22544: trap\n      : @748 (gas: 4)\n 22545: a0 = t0 | a0\n 22548: a2 = u64 [s1 + 0xe0]\n 22552: a0 = a0 | a2\n 22555: jump @761 if a0 != 0\n      : @749 (gas: 5)\n 22559: u64 [s1 + 312] = 0\n 22563: u64 [s1 + 320] = 0\n 22567: u64 [s1 + 336] = 0\n 22571: u64 [s1 + 328] = 0\n 22575: jump @764\n      : @750 (gas: 7)\n 22578: a4 = u64 [s1 + 0xb0]\n 22582: a5 = u64 [s1 + 0xd0]\n 22586: a4 = a4 ^ a5\n 22589: a5 = u64 [s1 + 0x88]\n 22593: a4 = a4 | a5\n 22596: a4 = a4 | a0\n 22599: jump @760 if a4 == 0\n      : @751 (gas: 20)\n 22603: t2 = a3\n 22605: a0 = u64 [s1 + 0x158]\n 22609: a4 = a1 <u a0\n 22612: a3 = ra + a4\n 22615: a0 = a3 ^ t2\n 22618: a5 = a3 <u t2\n 22621: a5 = a4 if a0 == 0\n 22624: a5 = a5 + a2\n 22627: a4 = a5 <u a2\n 22630: a2 = a2 <u t0\n 22633: a0 = t1 + a2\n 22636: a0 = a0 + a4\n 22639: a2 = a1 | a5\n 22642: a0 = a0 | a3\n 22645: a2 = a2 | a0\n 22648: a2 = a2 >> 0x20\n 22651: a0 = a0 | a5\n 22654: a0 = a0 << 0x20\n 22657: a0 = a0 | a2\n 22660: jump @747 if a0 != 0\n      : @752 (gas: 2)\n 22663: a0 = s1 + 0x2ac0\n 22667: ra = 866, jump @10\n      : @753 [@dyn 433] (gas: 12)\n 22673: a0 = s1 + 0x28d8\n 22677: a1 = u64 [a0 + 0x200]\n 22681: u64 [s1 + 0x130] = a1\n 22685: a2 = a0 + 0x100\n 22689: a1 = u64 [a2 + 0xf8]\n 22693: u64 [s1 + 0x128] = a1\n 22697: a1 = u64 [a2 + 0xf0]\n 22701: u64 [s1 + 0x120] = a1\n 22705: a0 = u64 [a2 + 0xe8]\n 22709: u64 [s1 + 0x118] = a0\n 22713: a0 = u64 [s1 + 0xb0]\n 22717: t0 = 868, jump @1244\n      : @754 [@dyn 434] (gas: 1)\n 22723: ra = 870, jump @1260\n      : @755 [@dyn 435] (gas: 6)\n 22729: u64 [s1 + 0x110] = a0\n 22733: u64 [s1 + 0xf8] = a1\n 22737: a0 = 0xffffffffffffffff\n 22740: a1 = 0xffffffffffffffff\n 22743: a2 = u64 [s1 + 0x158]\n 22747: ra = 872, jump @1255\n      : @756 [@dyn 436] (gas: 1)\n 22753: t0 = 874, jump @1234\n      : @757 [@dyn 437] (gas: 1)\n 22759: ra = 876, jump @1255\n      : @758 [@dyn 438] (gas: 1)\n 22765: t0 = 878, jump @1207\n      : @759 [@dyn 439] (gas: 17)\n 22771: a4 = u64 [s1 + 0x140]\n 22775: a5 = s1 + 0x28d8\n 22779: u64 [a5 + 0x1e0] = a4\n 22783: a4 = u64 [s1 + 0x138]\n 22787: u64 [a5 + 0x1d8] = a4\n 22791: a4 = u64 [s1 + 0x148]\n 22795: u64 [a5 + 0x1d0] = a4\n 22799: a4 = u64 [s1 + 0x150]\n 22803: u64 [a5 + 0x1c8] = a4\n 22807: a4 = a5 + 0x100\n 22811: u64 [a4 + 0xc0] = a3\n 22815: u64 [a4 + 0xb8] = a1\n 22819: u64 [a4 + 0xb0] = a0\n 22823: a0 = s1 + 0x2aa0\n 22827: a1 = s1 + 0x2a80\n 22831: u64 [a4 + 0xa8] = a2\n 22835: ra = 880, jump @16\n      : @760 [@dyn 440] (gas: 12)\n 22841: a0 = u64 [s1 + 0x60]\n 22844: a2 = u64 [s1 + 0x50]\n 22847: a2 = a2 | a0\n 22850: a0 = u64 [s1 + 0x68]\n 22853: a1 = u64 [s1 + 0x58]\n 22856: a0 = a0 | a1\n 22859: a1 = u64 [s1 + 0x48]\n 22862: a3 = u64 [s1 + 0x40]\n 22865: a1 = a1 | a3\n 22868: a3 = u64 [s1 + 0x70]\n 22871: a3 = a3 + 0x1\n 22874: jump @768\n      : @761 (gas: 10)\n 22877: a0 = u64 [s1 + 0xf0]\n 22881: a1 = u64 [s1 + 0xe8]\n 22885: a0 = a0 | a1\n 22888: a1 = 0xffffffe0\n 22898: a2 = u64 [s1 + 0xd8]\n 22902: a1 = a2 <u a1\n 22905: a3 = u64 [s1 + 0xf8]\n 22909: a1 = 0 if a3 != 0\n 22911: a1 = 0 if a0 != 0\n 22913: jump @747 if a1 == 0\n      : @762 (gas: 3)\n 22917: i32 a1 = a2 + 0x20\n 22920: a0 = s1 + 0x2b00\n 22924: ra = 882, jump @10\n      : @763 [@dyn 441] (gas: 13)\n 22930: a0 = s1 + 0x28d8\n 22934: a2 = a0 + 0x200\n 22938: a1 = u64 [a2 + 0x40]\n 22941: a3 = s1 + 0x100\n 22945: u64 [a3 + 0x48] = a1\n 22948: a1 = u64 [a2 + 0x38]\n 22951: u64 [a3 + 0x50] = a1\n 22954: a1 = u64 [a2 + 0x30]\n 22957: u64 [a3 + 0x40] = a1\n 22960: a0 = u64 [a2 + 0x28]\n 22963: u64 [a3 + 0x38] = a0\n 22966: t0 = u64 [s1 + 0xb0]\n 22970: fallthrough\n      : @764 (gas: 6)\n 22971: a1 = t0 << 0x3\n 22974: u64 [s1 + 0x158] = a1\n 22978: i32 a2 = 0x80 - a1\n 22982: a0 = 0xffffffffffffffff\n 22985: a1 = 0xffffffffffffffff\n 22988: ra = 884, jump @1260\n      : @765 [@dyn 442] (gas: 7)\n 22994: u64 [s1 + 0x130] = a0\n 22998: u64 [s1 + 0x118] = a1\n 23002: a0 = u64 [s1 + 0xb0]\n 23006: i32 a2 = a0 << 0x3\n 23009: a0 = 0xffffffffffffffff\n 23012: a1 = 0xffffffffffffffff\n 23015: ra = 886, jump @1255\n      : @766 [@dyn 443] (gas: 10)\n 23021: u64 [s1 + 0x120] = a0\n 23025: u64 [s1 + 0x128] = a1\n 23029: a0 = u64 [s1 + 0x118]\n 23033: a0 = a0 | a1\n 23036: u64 [s1 + 0x118] = a0\n 23040: a0 = u64 [s1 + 0x158]\n 23044: i32 a2 = a0 + 0xffffffffffffff80\n 23047: a0 = 0xffffffffffffffff\n 23050: a1 = 0xffffffffffffffff\n 23053: ra = 888, jump @1255\n      : @767 [@dyn 444] (gas: 37)\n 23059: a4 = u64 [s1 + 0x158]\n 23063: a2 = a4 <u 0x80\n 23067: a3 = u64 [s1 + 0x118]\n 23071: a1 = a3 if a2 != 0\n 23074: a5 = u64 [s1 + 0x120]\n 23078: a3 = u64 [s1 + 0x130]\n 23082: a3 = a3 | a5\n 23085: a3 = a0 if a2 == 0\n 23088: a1 = 0xffffffffffffffff if a4 == 0\n 23091: a3 = 0xffffffffffffffff if a4 == 0\n 23094: a5 = 0 if a2 == 0\n 23096: t1 = a5\n 23098: a5 = u64 [s1 + 0x128]\n 23102: a5 = 0 if a2 == 0\n 23104: a0 = u64 [s1 + 0x60]\n 23107: a2 = u64 [s1 + 0x50]\n 23110: t0 = a2 | a0\n 23113: a0 = u64 [s1 + 0x48]\n 23116: a4 = u64 [s1 + 0x40]\n 23119: a4 = a4 | a0\n 23122: a0 = u64 [s1 + 0x68]\n 23125: a2 = u64 [s1 + 0x58]\n 23128: a2 = a2 | a0\n 23131: a0 = u64 [s1 + 0x138]\n 23135: t2 = a0 & ~a3\n 23138: a0 = u64 [s1 + 0x140]\n 23142: a3 = a0 & ~a1\n 23145: a0 = u64 [s1 + 0x148]\n 23149: a1 = a0 & ~a5\n 23152: a0 = u64 [s1 + 0x150]\n 23156: a0 = a0 & ~t1\n 23159: a0 = a0 | a2\n 23162: a1 = a1 | a4\n 23165: a2 = a3 | t0\n 23168: a4 = u64 [s1 + 0x70]\n 23171: a3 = t2 | a4\n 23174: fallthrough\n      : @768 (gas: 17)\n 23175: a4 = s1 + 0x28d8\n 23179: a5 = a4 + 0x100\n 23183: u64 [a5 + 0x68] = a3\n 23186: a3 = u64 [s1 + 0x90]\n 23190: u64 [a5 + 0x88] = a3\n 23194: u64 [a5 + 0x70] = a2\n 23197: a2 = u64 [s1 + 0x98]\n 23201: u64 [a5 + 0x90] = a2\n 23205: u64 [a5 + 0x78] = a0\n 23208: a0 = u64 [s1 + 0xa0]\n 23212: u64 [a5 + 0x98] = a0\n 23216: u64 [a5 + 0x80] = a1\n 23220: a0 = s1 + 0x2a60\n 23224: a1 = s1 + 0x2a40\n 23228: a2 = u64 [s1 + 0xa8]\n 23232: u64 [a5 + 0xa0] = a2\n 23236: ra = 890, jump @16\n      : @769 [@dyn 445] (gas: 3)\n 23242: a0 = s1 + 0x2a20\n 23246: a1 = u64 [s1 + 0x80]\n 23250: ra = 892, jump @10\n      : @770 [@dyn 446] (gas: 17)\n 23256: a0 = s1 + 0x28d8\n 23260: a5 = a0 + 0x100\n 23264: a3 = u64 [a5 + 0x60]\n 23267: a4 = u64 [a5 + 0x58]\n 23270: a2 = u64 [a5 + 0x50]\n 23273: a1 = u64 [a5 + 0x48]\n 23276: u64 [s1 + 0xf8] = a2\n 23280: u64 [s1 + 0xf0] = a3\n 23284: a0 = a2 | a3\n 23287: a2 = a1 | a4\n 23290: a2 = a2 | a0\n 23293: a2 = a2 >> 0x20\n 23296: u64 [s1 + 0xe8] = a4\n 23300: a0 = a0 | a4\n 23303: a0 = a0 << 0x20\n 23306: a0 = a0 | a2\n 23309: jump @747 if a0 != 0\n      : @771 (gas: 3)\n 23313: a0 = s1 + 0x2a00\n 23317: u64 [s1 + 0xe0] = a1\n 23321: ra = 894, jump @10\n      : @772 [@dyn 447] (gas: 19)\n 23327: t0 = s1 + 0x28d8\n 23331: a0 = t0 + 0x100\n 23335: a5 = u64 [a0 + 0x40]\n 23338: a4 = u64 [a0 + 0x38]\n 23341: a1 = u64 [a0 + 0x30]\n 23344: a0 = a5 >u 0\n 23346: a3 = a4 >u 0\n 23348: a3 = a0 if a5 != 0\n 23351: u64 [s1 + 0xb0] = a1\n 23355: a0 = a1 >u 0\n 23357: u64 [s1 + 0x88] = a4\n 23361: u64 [s1 + 0x80] = a5\n 23365: a1 = a4 | a5\n 23368: a2 = s1 + 0x100\n 23372: u64 [a2 + 0x48] = a0\n 23375: u64 [a2 + 0x58] = a3\n 23378: u64 [a2 + 0x50] = a1\n 23381: a0 = a3 if a1 != 0\n 23384: jump @774 if a0 == 0\n      : @773 (gas: 1)\n 23387: jump @1023\n      : @774 (gas: 27)\n 23390: a0 = u64 [s1 + 0x90]\n 23394: a3 = a0 + 0x1\n 23397: a0 = a3 <u 0x1\n 23400: a1 = u64 [s1 + 0x98]\n 23404: a1 = a1 + a0\n 23407: a0 = a3 | a1\n 23410: a4 = a1\n 23412: u64 [s1 + 0x98] = a1\n 23416: u64 [s1 + 0x90] = a3\n 23420: a0 = a0 <u 0x1\n 23423: a1 = u64 [t0 + 0x128]\n 23427: u64 [s1 + 0xd0] = a1\n 23431: a1 = u64 [s1 + 0xa0]\n 23435: a5 = a1 + a0\n 23438: u64 [s1 + 0x70] = a5\n 23441: a0 = a5 <u a1\n 23444: a1 = u64 [s1 + 0xa8]\n 23448: a2 = a1 + a0\n 23451: u64 [s1 + 0xa8] = a2\n 23455: a0 = t0\n 23457: u64 [a0 + 0xe8] = a3\n 23461: u64 [a0 + 0xf0] = a4\n 23465: u64 [a0 + 0xf8] = a5\n 23469: a0 = s1 + 0x29e0\n 23473: a1 = s1 + 0x29c0\n 23477: u64 [t0 + 0x100] = a2\n 23481: ra = 896, jump @14\n      : @775 [@dyn 448] (gas: 13)\n 23487: a4 = s1 + 0x28d8\n 23491: a5 = a4 + 0x100\n 23495: a2 = u64 [a5 + 0x8]\n 23498: a0 = u64 [a5 + 0x10]\n 23501: a1 = u64 [a5 + 0x18]\n 23504: a3 = u64 [a5 + 0x20]\n 23507: u64 [a4 + 0xc0] = a3\n 23511: u64 [a4 + 0xb8] = a1\n 23515: u64 [a4 + 0xb0] = a0\n 23519: a0 = s1 + 0x29a0\n 23523: a1 = s1 + 0x2980\n 23527: u64 [a4 + 0xa8] = a2\n 23531: ra = 898, jump @1075\n      : @776 [@dyn 449] (gas: 29)\n 23537: a4 = s1 + 0x28d8\n 23541: a0 = u64 [a4 + 0xc8]\n 23545: a1 = u64 [a4 + 0xd0]\n 23549: a2 = u64 [a4 + 0xd8]\n 23553: a3 = u64 [a4 + 0xe0]\n 23557: u64 [a4 + 0x80] = a3\n 23561: a3 = u64 [s1 + 0x80]\n 23565: u64 [a4 + 0x60] = a3\n 23568: a3 = u64 [s1 + 0x88]\n 23572: u64 [a4 + 0x58] = a3\n 23575: a3 = u64 [s1 + 0xb0]\n 23579: u64 [a4 + 0x50] = a3\n 23582: a3 = u64 [s1 + 0xd0]\n 23586: u64 [a4 + 0x48] = a3\n 23589: u64 [a4 + 0x78] = a2\n 23592: u64 [a4 + 0x70] = a1\n 23595: u64 [a4 + 0x68] = a0\n 23598: a0 = u64 [s1 + 0xa8]\n 23602: u64 [a4 + 0xa0] = a0\n 23606: a0 = u64 [s1 + 0x70]\n 23609: u64 [a4 + 0x98] = a0\n 23613: a0 = u64 [s1 + 0x98]\n 23617: u64 [a4 + 0x90] = a0\n 23621: a0 = s1 + 0x2960\n 23625: a1 = s1 + 0x2940\n 23629: a2 = s1 + 0x2920\n 23633: a3 = u64 [s1 + 0x90]\n 23637: u64 [a4 + 0x88] = a3\n 23641: ra = 900, jump @1152\n      : @777 [@dyn 450] (gas: 11)\n 23647: a1 = u64 [s1 + 0xd0]\n 23651: a0 = a1 <u 0x20\n 23654: a0 = a0 ^ 0x1\n 23657: a5 = s1 + 0x100\n 23661: a2 = u64 [a5 + 0x48]\n 23664: a4 = u64 [s1 + 0xb0]\n 23668: a0 = a2 if a4 != 0\n 23671: a2 = u64 [a5 + 0x58]\n 23674: a3 = u64 [a5 + 0x50]\n 23677: a0 = a2 if a3 != 0\n 23680: jump @789 if a0 == 0\n      : @778 (gas: 14)\n 23684: a1 = a1 & 0xffffffffffffffe0\n 23687: u64 [s1 + 0xd8] = a1\n 23691: a0 = s1 + 0x28d8\n 23695: a1 = u64 [s1 + 0x90]\n 23699: u64 [a0 + 0x8] = a1\n 23702: a1 = u64 [s1 + 0x98]\n 23706: u64 [a0 + 0x10] = a1\n 23709: a1 = u64 [s1 + 0x70]\n 23712: u64 [a0 + 0x18] = a1\n 23715: a1 = s1 + 0x28e0\n 23719: a2 = u64 [s1 + 0xa8]\n 23723: u64 [a0 + 0x20] = a2\n 23726: a0 = 0\n 23728: ra = 902, jump @12\n      : @779 [@dyn 451] (gas: 3)\n 23734: a1 = 0x20\n 23737: a0 = 0\n 23739: ra = 904, jump @0\n      : @780 [@dyn 452] (gas: 4)\n 23745: a1 = sp + 0xffffffffffffffe0\n 23748: a1 = a1 & 0xffffffffffffffe0\n 23751: u64 [s1 + 0x150] = a1\n 23755: t0 = 906, jump @1215\n      : @781 [@dyn 453] (gas: 25)\n 23761: ecalli 6 // 'hash_keccak_256'\n 23763: u64 [s1 + 344] = 0x20\n 23768: t0 = 0\n 23770: t2 = 0\n 23772: ra = 0\n 23774: u64 [s1 + 304] = 0\n 23778: t1 = 0\n 23780: a5 = 0\n 23782: a4 = s1 + 0x100\n 23786: a3 = u64 [a4 + 0x50]\n 23789: a0 = u64 [a3]\n 23791: a1 = u64 [a3 + 0x8]\n 23794: a2 = u64 [a3 + 0x10]\n 23797: a3 = u64 [a3 + 0x18]\n 23800: a0 = reverse a0\n 23802: u64 [a4 + 0x40] = a0\n 23805: a0 = reverse a1\n 23807: u64 [a4 + 0x38] = a0\n 23810: a0 = reverse a2\n 23812: a2 = 0\n 23814: u64 [a4 + 0x48] = a0\n 23817: a0 = reverse a3\n 23819: a3 = u64 [a4 + 0x30]\n 23822: u64 [a4 + 0x50] = a0\n 23825: fallthrough\n      : @782 (gas: 20)\n 23826: a0 = u64 [s1 + 0xd8]\n 23830: u64 [s1 + 0x130] = a3\n 23834: a0 = a3 <u a0\n 23837: a4 = a0 ^ 0x1\n 23840: u64 [s1 + 0x118] = t1\n 23844: a4 = 0x1 if t1 != 0\n 23847: u64 [s1 + 0x128] = a5\n 23851: u64 [s1 + 0x120] = a2\n 23855: a0 = a2 | a5\n 23858: a4 = 0x1 if a0 != 0\n 23861: a1 = u64 [s1 + 0xe0]\n 23865: t1 = u64 [s1 + 0x158]\n 23869: a1 = a1 + t1\n 23872: a3 = u64 [s1 + 0xf8]\n 23876: a3 = a3 + t0\n 23879: a2 = u64 [s1 + 0xe8]\n 23883: a2 = a2 + t2\n 23886: a0 = u64 [s1 + 0xf0]\n 23890: a0 = a0 + ra\n 23893: jump @793 if a4 != 0\n      : @783 (gas: 9)\n 23897: u64 [s1 + 0x110] = ra\n 23901: a4 = a1 <u t1\n 23904: a3 = a3 + a4\n 23907: a5 = t0\n 23909: t0 = a3 ^ t0\n 23912: u64 [s1 + 0x108] = a5\n 23916: a5 = a3 <u a5\n 23919: a5 = a4 if t0 == 0\n 23922: t0 = 908, jump @1218\n      : @784 [@dyn 454] (gas: 1)\n 23928: jump @747 if a0 != 0\n      : @785 (gas: 2)\n 23932: a0 = s1 + 0x2700\n 23936: ra = 910, jump @10\n      : @786 [@dyn 455] (gas: 22)\n 23942: a4 = s1 + 0x20d8\n 23946: a5 = a4 + 0x600\n 23950: a0 = u64 [a5 + 0x28]\n 23953: a1 = u64 [a5 + 0x30]\n 23956: a2 = u64 [a5 + 0x38]\n 23959: a3 = u64 [a5 + 0x40]\n 23962: u64 [a5] = a3\n 23964: a3 = a4 + 0x500\n 23968: u64 [a3 + 0xf8] = a2\n 23972: u64 [a3 + 0xf0] = a1\n 23976: u64 [a3 + 0xe8] = a0\n 23980: a0 = u64 [s1 + 0x140]\n 23984: u64 [a5 + 0x20] = a0\n 23987: a0 = u64 [s1 + 0x138]\n 23991: u64 [a5 + 0x18] = a0\n 23994: a0 = u64 [s1 + 0x148]\n 23998: u64 [a5 + 0x10] = a0\n 24001: a0 = s1 + 0x26e0\n 24005: a1 = s1 + 0x26c0\n 24009: a2 = u64 [s1 + 0x150]\n 24013: u64 [a5 + 0x8] = a2\n 24016: ra = 912, jump @16\n      : @787 [@dyn 456] (gas: 1)\n 24022: t0 = 914, jump @1212\n      : @788 [@dyn 457] (gas: 36)\n 24028: t0 = a1 + a0\n 24031: a1 = t0 <u a1\n 24034: a0 = u64 [s1 + 0x140]\n 24038: a0 = a0 + a1\n 24041: u64 [s1 + 0x140] = a0\n 24045: a0 = u64 [s1 + 0x158]\n 24049: t1 = a0 + 0x20\n 24052: a3 = t1 <u a0\n 24055: a0 = u64 [s1 + 0x108]\n 24059: t2 = a0 + a3\n 24062: a4 = t2 <u a0\n 24065: a4 = a3 if a3 == 0\n 24068: a0 = u64 [s1 + 0x100]\n 24072: a4 = a4 + a0\n 24075: a3 = a4 <u a0\n 24078: ra = u64 [s1 + 0x110]\n 24082: ra = ra + a3\n 24085: a0 = u64 [s1 + 0x130]\n 24089: a3 = a0 + 0x20\n 24092: a5 = a3 <u a0\n 24095: a1 = u64 [s1 + 0x118]\n 24099: a0 = a1 + a5\n 24102: a1 = a0 <u a1\n 24105: a1 = a5 if a5 == 0\n 24108: a2 = u64 [s1 + 0x120]\n 24112: a1 = a1 + a2\n 24115: a5 = a1 <u a2\n 24118: a2 = u64 [s1 + 0x128]\n 24122: a5 = a5 + a2\n 24125: u64 [s1 + 0x138] = t0\n 24129: u64 [s1 + 0x158] = t1\n 24133: t0 = t2\n 24135: t2 = a4\n 24137: t1 = a0\n 24139: a2 = a1\n 24141: jump @782\n      : @789 (gas: 6)\n 24144: a0 = u64 [s1 + 0x88]\n 24148: a0 = a0 | a1\n 24151: a1 = u64 [s1 + 0x80]\n 24155: a1 = a1 | a4\n 24158: a0 = a0 | a1\n 24161: jump @805 if a0 != 0\n      : @790 (gas: 5)\n 24165: u64 [s1 + 304] = 0\n 24169: u64 [s1 + 312] = 0\n 24173: u64 [s1 + 328] = 0\n 24177: u64 [s1 + 320] = 0\n 24181: jump @808\n      : @791 (gas: 27)\n 24184: t1 = u64 [s1 + 0x98]\n 24188: t2 = u64 [s1 + 0x120]\n 24192: ra = t2 <u t1\n 24195: a4 = u64 [s1 + 0x90]\n 24199: a3 = a1 ^ a4\n 24202: a2 = a1 <u a4\n 24205: a2 = ra if a3 == 0\n 24208: a3 = u64 [s1 + 0x80]\n 24212: t0 = a5 - a3\n 24215: a3 = a5 <u a3\n 24218: a5 = u64 [s1 + 0x88]\n 24222: a0 = a0 - a5\n 24225: a5 = t0 <u a2\n 24228: a3 = a3 + a5\n 24231: a3 = a0 - a3\n 24234: a5 = t0 - a2\n 24237: a2 = a1 - a4\n 24240: a2 = a2 - ra\n 24243: a0 = t2 - t1\n 24246: a2 = a2 | a3\n 24249: a3 = a0 | a5\n 24252: a3 = a3 | a2\n 24255: a1 = a2 | a5\n 24258: a3 = a3 >> 0x20\n 24261: a1 = a1 << 0x20\n 24264: a1 = a1 | a3\n 24267: jump @747 if a1 != 0\n      : @792 (gas: 5)\n 24271: i32 a1 = a0 + 0\n 24273: u64 [s1 + 0x158] = a1\n 24277: a0 = u64 [s1 + 0x78]\n 24280: ra = 0x4ec\n 24284: jump @0\n      : @793 (gas: 11)\n 24287: ra = t0\n 24289: a4 = u64 [s1 + 0xd0]\n 24293: a5 = u64 [s1 + 0xd8]\n 24297: a4 = a4 ^ a5\n 24300: a5 = u64 [s1 + 0x88]\n 24304: t0 = a4 | a5\n 24307: a5 = u64 [s1 + 0x80]\n 24311: a4 = u64 [s1 + 0xb0]\n 24315: a5 = a5 | a4\n 24318: a4 = t0 | a5\n 24321: jump @804 if a4 == 0\n      : @794 (gas: 6)\n 24325: a4 = a1 <u t1\n 24328: a3 = a3 + a4\n 24331: t0 = a3 ^ ra\n 24334: a5 = a3 <u ra\n 24337: a5 = a4 if t0 == 0\n 24340: t0 = 916, jump @1226\n      : @795 [@dyn 458] (gas: 1)\n 24346: jump @747 if a0 != 0\n      : @796 (gas: 2)\n 24350: a0 = s1 + 0x28c0\n 24354: ra = 918, jump @10\n      : @797 [@dyn 459] (gas: 12)\n 24360: a0 = s1 + 0x28d8\n 24364: a1 = u64 [a0]\n 24366: u64 [s1 + 0x130] = a1\n 24370: a2 = a0 + 0xffffffffffffff00\n 24374: a1 = u64 [a2 + 0xf8]\n 24378: u64 [s1 + 0x128] = a1\n 24382: a1 = u64 [a2 + 0xf0]\n 24386: u64 [s1 + 0x120] = a1\n 24390: a0 = u64 [a2 + 0xe8]\n 24394: u64 [s1 + 0x118] = a0\n 24398: a0 = u64 [s1 + 0xd0]\n 24402: t0 = 920, jump @1244\n      : @798 [@dyn 460] (gas: 1)\n 24408: ra = 922, jump @1260\n      : @799 [@dyn 461] (gas: 6)\n 24414: u64 [s1 + 0x110] = a0\n 24418: u64 [s1 + 0xf8] = a1\n 24422: a0 = 0xffffffffffffffff\n 24425: a1 = 0xffffffffffffffff\n 24428: a2 = u64 [s1 + 0x158]\n 24432: ra = 924, jump @1255\n      : @800 [@dyn 462] (gas: 1)\n 24438: t0 = 926, jump @1234\n      : @801 [@dyn 463] (gas: 1)\n 24444: ra = 928, jump @1255\n      : @802 [@dyn 464] (gas: 1)\n 24450: t0 = 930, jump @1207\n      : @803 [@dyn 465] (gas: 17)\n 24456: a4 = s1 + 0x20d8\n 24460: a5 = u64 [s1 + 0x140]\n 24464: u64 [a4 + 0x7e0] = a5\n 24468: a5 = u64 [s1 + 0x138]\n 24472: u64 [a4 + 0x7d8] = a5\n 24476: a5 = u64 [s1 + 0x148]\n 24480: u64 [a4 + 0x7d0] = a5\n 24484: a5 = u64 [s1 + 0x150]\n 24488: u64 [a4 + 0x7c8] = a5\n 24492: a5 = a4 + 0x700\n 24496: u64 [a5 + 0xc0] = a3\n 24500: u64 [a5 + 0xb8] = a1\n 24504: u64 [a5 + 0xb0] = a0\n 24508: a0 = s1 + 0x28a0\n 24512: a1 = s1 + 0x2880\n 24516: u64 [a5 + 0xa8] = a2\n 24520: ra = 932, jump @16\n      : @804 [@dyn 466] (gas: 16)\n 24526: a4 = u64 [s1 + 0xd0]\n 24530: a0 = a4 >> 0x3f\n 24533: a2 = u64 [s1 + 0xb0]\n 24537: a1 = a2 << 0x1\n 24540: a1 = a1 | a0\n 24543: a0 = a2 >> 0x3f\n 24546: a3 = u64 [s1 + 0x88]\n 24550: a2 = a3 << 0x1\n 24553: a0 = a0 | a2\n 24556: a2 = a3 >> 0x3f\n 24559: a3 = u64 [s1 + 0x80]\n 24563: a3 = a3 << 0x1\n 24566: a2 = a2 | a3\n 24569: a3 = a4 << 0x1\n 24572: a3 = a3 + 0x1\n 24575: jump @812\n      : @805 (gas: 10)\n 24578: a0 = u64 [s1 + 0xf0]\n 24582: a1 = u64 [s1 + 0xe8]\n 24586: a0 = a0 | a1\n 24589: a1 = 0xffffffe0\n 24599: a2 = u64 [s1 + 0xe0]\n 24603: a1 = a2 <u a1\n 24606: a2 = u64 [s1 + 0xf8]\n 24610: a1 = 0 if a2 != 0\n 24612: a1 = 0 if a0 != 0\n 24614: jump @747 if a1 == 0\n      : @806 (gas: 4)\n 24618: a0 = u64 [s1 + 0xe0]\n 24622: i32 a1 = a0 + 0x20\n 24625: a0 = s1 + 0x2900\n 24629: ra = 934, jump @10\n      : @807 [@dyn 467] (gas: 11)\n 24635: a0 = s1 + 0x28d8\n 24639: a1 = u64 [a0 + 0x40]\n 24642: a2 = s1 + 0x100\n 24646: u64 [a2 + 0x40] = a1\n 24649: a1 = u64 [a0 + 0x38]\n 24652: u64 [a2 + 0x48] = a1\n 24655: a1 = u64 [a0 + 0x30]\n 24658: u64 [a2 + 0x38] = a1\n 24661: a0 = u64 [a0 + 0x28]\n 24664: u64 [a2 + 0x30] = a0\n 24667: fallthrough\n      : @808 (gas: 7)\n 24668: a0 = u64 [s1 + 0xd0]\n 24672: a1 = a0 << 0x3\n 24675: u64 [s1 + 0x150] = a1\n 24679: i32 a2 = 0x80 - a1\n 24683: a0 = 0xffffffffffffffff\n 24686: a1 = 0xffffffffffffffff\n 24689: ra = 936, jump @1260\n      : @809 [@dyn 468] (gas: 7)\n 24695: u64 [s1 + 0x128] = a0\n 24699: u64 [s1 + 0x118] = a1\n 24703: a0 = u64 [s1 + 0xd0]\n 24707: i32 a2 = a0 << 0x3\n 24710: a0 = 0xffffffffffffffff\n 24713: a1 = 0xffffffffffffffff\n 24716: ra = 938, jump @1255\n      : @810 [@dyn 469] (gas: 10)\n 24722: u64 [s1 + 0x158] = a0\n 24726: u64 [s1 + 0x120] = a1\n 24730: a0 = u64 [s1 + 0x118]\n 24734: a0 = a0 | a1\n 24737: u64 [s1 + 0x118] = a0\n 24741: a0 = u64 [s1 + 0x150]\n 24745: i32 a2 = a0 + 0xffffffffffffff80\n 24748: a0 = 0xffffffffffffffff\n 24751: a1 = 0xffffffffffffffff\n 24754: ra = 940, jump @1255\n      : @811 [@dyn 470] (gas: 44)\n 24760: a4 = u64 [s1 + 0x150]\n 24764: a3 = a4 <u 0x80\n 24768: a2 = u64 [s1 + 0x118]\n 24772: a1 = a2 if a3 != 0\n 24775: a5 = u64 [s1 + 0x158]\n 24779: a2 = u64 [s1 + 0x128]\n 24783: a2 = a2 | a5\n 24786: a2 = a0 if a3 == 0\n 24789: a1 = 0xffffffffffffffff if a4 == 0\n 24792: a2 = 0xffffffffffffffff if a4 == 0\n 24795: a5 = 0 if a3 == 0\n 24797: u64 [s1 + 0x158] = a5\n 24801: t0 = u64 [s1 + 0x120]\n 24805: t0 = 0 if a3 == 0\n 24807: t2 = u64 [s1 + 0xd0]\n 24811: a0 = t2 >> 0x3f\n 24814: t1 = u64 [s1 + 0xb0]\n 24818: a3 = t1 << 0x1\n 24821: a0 = a0 | a3\n 24824: u64 [s1 + 0x150] = a0\n 24828: a0 = u64 [s1 + 0x80]\n 24832: a0 = a0 << 0x1\n 24835: a5 = u64 [s1 + 0x88]\n 24839: a4 = a5 >> 0x3f\n 24842: ra = a0 | a4\n 24845: a0 = t1 >> 0x3f\n 24848: a5 = a5 << 0x1\n 24851: a5 = a5 | a0\n 24854: a0 = u64 [s1 + 0x130]\n 24858: a3 = a0 & ~a2\n 24861: a0 = u64 [s1 + 0x138]\n 24865: a1 = a0 & ~a1\n 24868: a0 = u64 [s1 + 0x140]\n 24872: a2 = a0 & ~t0\n 24875: a0 = u64 [s1 + 0x148]\n 24879: a4 = u64 [s1 + 0x158]\n 24883: a0 = a0 & ~a4\n 24886: a0 = a0 | a5\n 24889: a2 = a2 | ra\n 24892: a4 = u64 [s1 + 0x150]\n 24896: a1 = a1 | a4\n 24899: a4 = t2 << 0x1\n 24902: a3 = a3 | a4\n 24905: fallthrough\n      : @812 (gas: 17)\n 24906: a4 = s1 + 0x20d8\n 24910: a5 = a4 + 0x700\n 24914: u64 [a5 + 0x68] = a3\n 24917: a3 = u64 [s1 + 0x90]\n 24921: u64 [a5 + 0x88] = a3\n 24925: u64 [a5 + 0x70] = a1\n 24928: a1 = u64 [s1 + 0x98]\n 24932: u64 [a5 + 0x90] = a1\n 24936: u64 [a5 + 0x78] = a0\n 24939: a0 = u64 [s1 + 0x70]\n 24942: u64 [a5 + 0x98] = a0\n 24946: u64 [a5 + 0x80] = a2\n 24950: a0 = s1 + 0x2860\n 24954: a1 = s1 + 0x2840\n 24958: a2 = u64 [s1 + 0xa8]\n 24962: u64 [a5 + 0xa0] = a2\n 24966: ra = 942, jump @16\n      : @813 [@dyn 471] (gas: 3)\n 24972: a0 = s1 + 0x2820\n 24976: a1 = 0x40\n 24979: ra = 944, jump @10\n      : @814 [@dyn 472] (gas: 19)\n 24985: a2 = s1 + 0x20d8\n 24989: a5 = a2 + 0x700\n 24993: a3 = u64 [a5 + 0x60]\n 24996: a4 = u64 [a5 + 0x58]\n 24999: a0 = u64 [a5 + 0x50]\n 25002: a1 = u64 [a5 + 0x48]\n 25005: a5 = s1 + 0x100\n 25009: u64 [a5 + 0x50] = a0\n 25012: u64 [a5 + 0x48] = a3\n 25015: a0 = a0 | a3\n 25018: u64 [a5 + 0x58] = a1\n 25021: a1 = a1 | a4\n 25024: a1 = a1 | a0\n 25027: a1 = a1 >> 0x20\n 25030: u64 [a5 + 0x40] = a4\n 25033: a0 = a0 | a4\n 25036: a0 = a0 << 0x20\n 25039: a0 = a0 | a1\n 25042: jump @747 if a0 != 0\n      : @815 (gas: 7)\n 25046: u64 [a2 + 1856] = 0\n 25050: u64 [a2 + 1848] = 0\n 25054: u64 [a2 + 1840] = 0\n 25058: a1 = s1 + 0x2800\n 25062: u64 [a2 + 1832] = 0x40\n 25067: a0 = u64 [s1 + 0x158]\n 25071: ra = 946, jump @12\n      : @816 [@dyn 473] (gas: 14)\n 25077: a3 = s1 + 0x100\n 25081: a0 = u64 [a3 + 0x48]\n 25084: a2 = u64 [a3 + 0x40]\n 25087: a2 = a2 | a0\n 25090: a0 = 0x100000000\n 25100: u64 [a3 + 0x40] = a0\n 25103: a0 = 0xffffffc0\n 25113: a1 = u64 [a3 + 0x58]\n 25116: a0 = a1 <u a0\n 25119: a1 = u64 [a3 + 0x50]\n 25122: a0 = 0 if a1 != 0\n 25124: u64 [a3 + 0x48] = a2\n 25127: a0 = 0 if a2 != 0\n 25129: jump @747 if a0 == 0\n      : @817 (gas: 5)\n 25133: a0 = u64 [s1 + 0x158]\n 25137: i32 a0 = a0 + 0x40\n 25140: t0 = 0x3b4\n 25144: a2 = s1 + 0x20d8\n 25148: fallthrough\n      : @818 [@dyn 474] (gas: 6)\n 25149: u64 [a2 + 1824] = 0\n 25153: u64 [a2 + 1816] = 0\n 25157: u64 [a2 + 1800] = 0x8\n 25162: a1 = s1 + 0x27e0\n 25166: u64 [a2 + 1808] = 0\n 25170: ra = 950, jump @12\n      : @819 [@dyn 475] (gas: 4)\n 25176: a2 = s1 + 0x100\n 25180: a0 = u64 [a2 + 0x40]\n 25183: a0 = a0 + 0xffffffffffffffa0\n 25186: t0 = 952, jump @1217\n      : @820 [@dyn 476] (gas: 1)\n 25192: jump @747 if a0 == 0\n      : @821 (gas: 5)\n 25196: a0 = u64 [s1 + 0x158]\n 25200: i32 a0 = a0 + 0x60\n 25203: t0 = 0x3ba\n 25207: a2 = s1 + 0x20d8\n 25211: fallthrough\n      : @822 [@dyn 477] (gas: 7)\n 25212: u64 [a2 + 1784] = 0\n 25216: u64 [a2 + 1776] = 0\n 25220: a1 = u64 [s1 + 0xb8]\n 25224: u64 [a2 + 0x700] = a1\n 25228: a1 = s1 + 0x27c0\n 25232: u64 [a2 + 1768] = 0\n 25236: ra = 956, jump @12\n      : @823 [@dyn 478] (gas: 5)\n 25242: a0 = u64 [s1 + 0x158]\n 25246: i32 a0 = a0 + 0x20\n 25249: t0 = 0x3be\n 25253: a2 = s1 + 0x20d8\n 25257: fallthrough\n      : @824 [@dyn 479] (gas: 6)\n 25258: u64 [a2 + 1760] = 0\n 25262: u64 [a2 + 1752] = 0\n 25266: u64 [a2 + 1736] = 0x80\n 25272: a1 = s1 + 0x27a0\n 25276: u64 [a2 + 1744] = 0\n 25280: ra = 960, jump @12\n      : @825 [@dyn 480] (gas: 5)\n 25286: a0 = 0x100000000\n 25296: a2 = s1 + 0x100\n 25300: u64 [a2 + 0x40] = a0\n 25303: a0 = 0xffffff80\n 25313: t0 = 962, jump @1217\n      : @826 [@dyn 481] (gas: 1)\n 25319: jump @747 if a0 == 0\n      : @827 (gas: 5)\n 25323: a0 = u64 [s1 + 0x158]\n 25327: i32 a0 = a0 + 0x80\n 25331: t0 = 0x3c4\n 25335: a2 = s1 + 0x20d8\n 25339: fallthrough\n      : @828 [@dyn 482] (gas: 6)\n 25340: u64 [a2 + 1728] = 0\n 25344: u64 [a2 + 1720] = 0\n 25348: u64 [a2 + 1704] = 0x3\n 25353: a1 = s1 + 0x2780\n 25357: u64 [a2 + 1712] = 0\n 25361: ra = 966, jump @12\n      : @829 [@dyn 483] (gas: 4)\n 25367: a2 = s1 + 0x100\n 25371: a0 = u64 [a2 + 0x40]\n 25374: a0 = a0 + 0xffffffffffffff60\n 25378: t0 = 968, jump @1217\n      : @830 [@dyn 484] (gas: 1)\n 25384: jump @747 if a0 == 0\n      : @831 (gas: 5)\n 25388: a0 = u64 [s1 + 0x158]\n 25392: i32 a0 = a0 + 0xa0\n 25396: t0 = 0x3ca\n 25400: a2 = s1 + 0x20d8\n 25404: fallthrough\n      : @832 [@dyn 485] (gas: 7)\n 25405: u64 [a2 + 1688] = 0\n 25409: u64 [a2 + 1680] = 0\n 25413: a1 = 0x4450540000000000\n 25423: u64 [a2 + 0x6a0] = a1\n 25427: a1 = s1 + 0x2760\n 25431: u64 [a2 + 1672] = 0\n 25435: ra = 972, jump @12\n      : @833 [@dyn 486] (gas: 47)\n 25441: a0 = u64 [s1 + 0x78]\n 25444: a4 = s1 + 0x20d8\n 25448: a5 = a4 + 0x600\n 25452: u64 [a5 + 0x58] = a0\n 25455: a0 = u64 [s1 + 0xc0]\n 25459: u64 [a5 + 0x50] = a0\n 25462: a0 = u64 [s1 + 0xc8]\n 25466: u64 [a5 + 0x48] = a0\n 25469: a0 = u64 [0x20060]\n 25474: a1 = u64 [0x20068]\n 25479: a2 = u64 [0x20070]\n 25484: a3 = u64 [0x20078]\n 25489: u64 [a5 + 0x80] = a0\n 25493: u64 [a5 + 0x78] = a1\n 25496: u64 [a5 + 0x70] = a2\n 25499: u64 [a5 + 0x68] = a3\n 25502: a2 = s1 + 0x2740\n 25506: a3 = s1 + 0x2720\n 25510: u64 [a4 + 1632] = 0\n 25514: a0 = u64 [s1 + 0x158]\n 25518: ra = 0x3ce\n 25522: sp = sp + 0xffffffffffffff60\n 25526: u64 [sp + 0x98] = ra\n 25530: u64 [sp + 0x90] = s0\n 25534: u64 [sp + 0x88] = s1\n 25538: s0 = sp + 0xa0\n 25542: sp = sp & 0xffffffffffffffe0\n 25545: a4 = u64 [a3]\n 25547: u64 [sp + 0x38] = a4\n 25550: a4 = u64 [a3 + 0x8]\n 25553: u64 [sp + 0x28] = a4\n 25556: a4 = u64 [a3 + 0x10]\n 25559: u64 [sp + 0x20] = a4\n 25562: a3 = u64 [a3 + 0x18]\n 25565: u64 [sp + 0x18] = a3\n 25568: a3 = u64 [a2]\n 25570: u64 [sp + 0x10] = a3\n 25573: a3 = u64 [a2 + 0x8]\n 25576: u64 [sp + 0x8] = a3\n 25579: a3 = u64 [a2 + 0x10]\n 25582: u64 [sp] = a3\n 25584: s1 = u64 [a2 + 0x18]\n 25587: i32 a0 = a0 + 0\n 25589: a1 = 0xc0\n 25593: u64 [sp + 0x30] = a1\n 25596: ra = 0xa\n 25599: jump @0\n      : @834 [@dyn 487] (gas: 1)\n 25602: jump @1004\n      : @835 (gas: 8)\n 25605: a0 = u64 [s1 + 0x38]\n 25608: a1 = u64 [s1 + 0x50]\n 25611: a0 = a0 | a1\n 25614: a1 = u64 [s1 + 0x48]\n 25617: a2 = u64 [s1 + 0x40]\n 25620: a1 = a1 | a2\n 25623: a0 = a0 | a1\n 25626: jump @847 if a0 != 0\n      : @836 (gas: 5)\n 25630: u64 [s1 + 272] = 0\n 25634: u64 [s1 + 280] = 0\n 25638: u64 [s1 + 288] = 0\n 25642: u64 [s1 + 296] = 0\n 25646: jump @850\n      : @837 (gas: 11)\n 25649: ra = t0\n 25651: a4 = u64 [s1 + 0x50]\n 25654: a5 = u64 [s1 + 0xd8]\n 25658: a4 = a4 ^ a5\n 25661: a5 = u64 [s1 + 0x38]\n 25664: t0 = a4 | a5\n 25667: a5 = u64 [s1 + 0x48]\n 25670: a4 = u64 [s1 + 0x40]\n 25673: a5 = a5 | a4\n 25676: a4 = t0 | a5\n 25679: jump @846 if a4 == 0\n      : @838 (gas: 6)\n 25683: a4 = a1 <u t1\n 25686: a3 = a3 + a4\n 25689: t0 = a3 ^ ra\n 25692: a5 = a3 <u ra\n 25695: a5 = a4 if t0 == 0\n 25698: t0 = 976, jump @1226\n      : @839 [@dyn 488] (gas: 1)\n 25704: jump @747 if a0 != 0\n      : @840 (gas: 3)\n 25708: a0 = s1 + 0x7ff\n 25712: a0 = a0 + 0x121\n 25716: ra = 978, jump @10\n      : @841 [@dyn 489] (gas: 18)\n 25722: a0 = s1 + 0x7ff\n 25726: a0 = a0 + 0xd1\n 25730: a1 = u64 [a0 + 0x68]\n 25733: u64 [s1 + 0x130] = a1\n 25737: a1 = u64 [a0 + 0x60]\n 25740: u64 [s1 + 0x128] = a1\n 25744: a1 = u64 [a0 + 0x58]\n 25747: u64 [s1 + 0x120] = a1\n 25751: a0 = u64 [a0 + 0x50]\n 25754: u64 [s1 + 0x118] = a0\n 25758: a0 = u64 [s1 + 0x50]\n 25761: a0 = a0 << 0x3b\n 25764: a0 = a0 >> 0x38\n 25767: u64 [s1 + 0x158] = a0\n 25771: a2 = a0 + 0xffffffffffffff80\n 25774: a0 = 0xffffffffffffffff\n 25777: a1 = 0xffffffffffffffff\n 25780: ra = 980, jump @1255\n      : @842 [@dyn 490] (gas: 6)\n 25786: u64 [s1 + 0x110] = a0\n 25790: u64 [s1 + 0x108] = a1\n 25794: a0 = 0xffffffffffffffff\n 25797: a1 = 0xffffffffffffffff\n 25800: a2 = u64 [s1 + 0x158]\n 25804: ra = 982, jump @1255\n      : @843 [@dyn 491] (gas: 7)\n 25810: u64 [s1 + 0x100] = a0\n 25814: u64 [s1 + 0xf8] = a1\n 25818: a1 = u64 [s1 + 0x158]\n 25822: a2 = 0x80 - a1\n 25826: a0 = 0xffffffffffffffff\n 25829: a1 = 0xffffffffffffffff\n 25832: ra = 984, jump @1260\n      : @844 [@dyn 492] (gas: 18)\n 25838: a3 = u64 [s1 + 0xf8]\n 25842: a3 = a3 | a1\n 25845: a2 = u64 [s1 + 0x158]\n 25849: a4 = a2 <u 0x80\n 25853: u64 [s1 + 0xf8] = a4\n 25857: a1 = u64 [s1 + 0x108]\n 25861: a3 = a1 if a4 == 0\n 25864: a3 = 0xffffffffffffffff if a2 == 0\n 25867: u64 [s1 + 0x108] = a3\n 25871: a3 = u64 [s1 + 0x100]\n 25875: a3 = a3 | a0\n 25878: a0 = u64 [s1 + 0x110]\n 25882: a3 = a0 if a4 == 0\n 25885: a3 = 0xffffffffffffffff if a2 == 0\n 25888: u64 [s1 + 0x110] = a3\n 25892: a0 = 0xffffffffffffffff\n 25895: a1 = 0xffffffffffffffff\n 25898: ra = 986, jump @1255\n      : @845 [@dyn 493] (gas: 32)\n 25904: a2 = u64 [s1 + 0xf8]\n 25908: a1 = 0 if a2 == 0\n 25910: a0 = 0 if a2 == 0\n 25912: a2 = u64 [s1 + 0x118]\n 25916: a3 = u64 [s1 + 0x110]\n 25920: a2 = a2 & ~a3\n 25923: a3 = u64 [s1 + 0x120]\n 25927: a4 = u64 [s1 + 0x108]\n 25931: a3 = a3 & ~a4\n 25934: a4 = u64 [s1 + 0x128]\n 25938: a0 = a4 & ~a0\n 25941: a4 = u64 [s1 + 0x130]\n 25945: a1 = a4 & ~a1\n 25948: a4 = u64 [s1 + 0x140]\n 25952: a5 = s1 + 0x7ff\n 25956: a5 = a5 + 0xd1\n 25960: u64 [a5 + 0x48] = a4\n 25963: a4 = u64 [s1 + 0x138]\n 25967: u64 [a5 + 0x40] = a4\n 25970: a4 = u64 [s1 + 0x148]\n 25974: u64 [a5 + 0x38] = a4\n 25977: a4 = u64 [s1 + 0x150]\n 25981: u64 [a5 + 0x30] = a4\n 25984: u64 [a5 + 0x28] = a1\n 25987: u64 [a5 + 0x20] = a0\n 25990: u64 [a5 + 0x18] = a3\n 25993: a0 = s1 + 0x7ff\n 25997: a0 = a0 + 0x101\n 26001: a1 = s1 + 0x7ff\n 26005: a1 = a1 + 0xe1\n 26009: u64 [a5 + 0x10] = a2\n 26012: ra = 988, jump @16\n      : @846 [@dyn 494] (gas: 16)\n 26018: a5 = u64 [s1 + 0x50]\n 26021: a0 = a5 >> 0x3f\n 26024: a2 = u64 [s1 + 0x40]\n 26027: a1 = a2 << 0x1\n 26030: a4 = a1 | a0\n 26033: a1 = a2 >> 0x3f\n 26036: a0 = u64 [s1 + 0x38]\n 26039: a2 = a0 << 0x1\n 26042: a1 = a1 | a2\n 26045: a2 = a0 >> 0x3f\n 26048: a3 = u64 [s1 + 0x48]\n 26051: a3 = a3 << 0x1\n 26054: a2 = a2 | a3\n 26057: a3 = a5 << 0x1\n 26060: a3 = a3 + 0x1\n 26063: jump @857\n      : @847 (gas: 10)\n 26066: a0 = u64 [s1 + 0xe8]\n 26070: a1 = u64 [s1 + 0xe0]\n 26074: a0 = a0 | a1\n 26077: a1 = 0xffffffe0\n 26087: a2 = u64 [s1 + 0xf8]\n 26091: a1 = a2 <u a1\n 26094: a2 = u64 [s1 + 0xf0]\n 26098: a1 = 0 if a2 != 0\n 26100: a1 = 0 if a0 != 0\n 26102: jump @747 if a1 == 0\n      : @848 (gas: 5)\n 26106: a0 = u64 [s1 + 0xf8]\n 26110: i32 a1 = a0 + 0x20\n 26113: a0 = s1 + 0x7ff\n 26117: a0 = a0 + 0x161\n 26121: ra = 990, jump @10\n      : @849 [@dyn 495] (gas: 12)\n 26127: a0 = s1 + 0x7ff\n 26131: a0 = a0 + 0xd1\n 26135: a1 = u64 [a0 + 0xa8]\n 26139: a2 = s1 + 0x100\n 26143: u64 [a2 + 0x28] = a1\n 26146: a1 = u64 [a0 + 0xa0]\n 26150: u64 [a2 + 0x20] = a1\n 26153: a1 = u64 [a0 + 0x98]\n 26157: u64 [a2 + 0x18] = a1\n 26160: a0 = u64 [a0 + 0x90]\n 26164: u64 [a2 + 0x10] = a0\n 26167: fallthrough\n      : @850 (gas: 7)\n 26168: a0 = u64 [s1 + 0x50]\n 26171: a0 = a0 << 0x3\n 26174: u64 [s1 + 0x158] = a0\n 26178: i32 a2 = a0 + 0xffffffffffffff80\n 26181: a0 = 0xffffffffffffffff\n 26184: a1 = 0xffffffffffffffff\n 26187: ra = 992, jump @1255\n      : @851 [@dyn 496] (gas: 8)\n 26193: u64 [s1 + 0x148] = a0\n 26197: u64 [s1 + 0x150] = a1\n 26201: a0 = u64 [s1 + 0x50]\n 26204: i32 a2 = a0 << 0x3\n 26207: u64 [s1 + 0x140] = a2\n 26211: a0 = 0xffffffffffffffff\n 26214: a1 = 0xffffffffffffffff\n 26217: ra = 994, jump @1255\n      : @852 [@dyn 497] (gas: 1)\n 26223: t0 = 996, jump @1239\n      : @853 [@dyn 498] (gas: 1)\n 26229: ra = 998, jump @1260\n      : @854 [@dyn 499] (gas: 1)\n 26235: t0 = 1000, jump @1209\n      : @855 [@dyn 500] (gas: 1)\n 26241: ra = 1002, jump @1255\n      : @856 [@dyn 501] (gas: 32)\n 26247: a2 = u64 [s1 + 0x130]\n 26251: a1 = 0 if a2 == 0\n 26253: a0 = 0 if a2 == 0\n 26255: a4 = u64 [s1 + 0x40]\n 26258: a2 = a4 >> 0x3f\n 26261: a5 = u64 [s1 + 0x38]\n 26264: a3 = a5 << 0x1\n 26267: t0 = a3 | a2\n 26270: a2 = a5 >> 0x3f\n 26273: a3 = u64 [s1 + 0x48]\n 26276: a3 = a3 << 0x1\n 26279: t1 = a3 | a2\n 26282: a4 = a4 << 0x1\n 26285: a3 = u64 [s1 + 0x50]\n 26288: a5 = a3 >> 0x3f\n 26291: t2 = a4 | a5\n 26294: a2 = u64 [s1 + 0x110]\n 26298: a4 = u64 [s1 + 0x158]\n 26302: a5 = a2 & ~a4\n 26305: a2 = u64 [s1 + 0x118]\n 26309: a4 = u64 [s1 + 0x150]\n 26313: a4 = a2 & ~a4\n 26316: a2 = u64 [s1 + 0x120]\n 26320: a0 = a2 & ~a0\n 26323: a2 = u64 [s1 + 0x128]\n 26327: a1 = a2 & ~a1\n 26330: a4 = a4 | t2\n 26333: a3 = a3 << 0x1\n 26336: a3 = a3 | a5\n 26339: a2 = a1 | t1\n 26342: a1 = a0 | t0\n 26345: fallthrough\n      : @857 (gas: 25)\n 26346: a0 = s1 + 0x1000\n 26350: u64 [a0 + 0xfffffffffffff8a0] = a3\n 26354: a0 = u64 [s1 + 0x30]\n 26357: a3 = s1 + 0x1000\n 26361: u64 [a3 + 0xfffffffffffff8c0] = a0\n 26365: a0 = s1 + 0x1000\n 26369: u64 [a0 + 0xfffffffffffff8a8] = a4\n 26373: a0 = u64 [s1 + 0x28]\n 26376: a3 = s1 + 0x1000\n 26380: u64 [a3 + 0xfffffffffffff8c8] = a0\n 26384: a0 = s1 + 0x1000\n 26388: u64 [a0 + 0xfffffffffffff8b0] = a1\n 26392: a3 = s1 + 0x7ff\n 26396: a3 = a3 + 0xd1\n 26400: a0 = u64 [s1 + 0x18]\n 26403: u64 [a3] = a0\n 26405: a0 = s1 + 0x1000\n 26409: u64 [a0 + 0xfffffffffffff8b8] = a2\n 26413: a0 = s1 + 0x7ff\n 26417: a0 = a0 + 0xc1\n 26421: a1 = s1 + 0x7ff\n 26425: a1 = a1 + 0xa1\n 26429: a2 = u64 [s1 + 0x20]\n 26432: u64 [a3 + 0x8] = a2\n 26435: ra = 1004, jump @16\n      : @858 [@dyn 502] (gas: 16)\n 26441: a0 = u64 [s1 + 0x78]\n 26444: a1 = s1 + 0x1000\n 26448: u64 [a1 + 0xfffffffffffff898] = a0\n 26452: a0 = u64 [s1 + 0x80]\n 26456: a1 = s1 + 0x1000\n 26460: u64 [a1 + 0xfffffffffffff890] = a0\n 26464: a0 = u64 [s1 + 0x88]\n 26468: a1 = s1 + 0x1000\n 26472: u64 [a1 + 0xfffffffffffff888] = a0\n 26476: a1 = s1 + 0x7ff\n 26480: a1 = a1 + 0x81\n 26484: a0 = u64 [s1 + 0x90]\n 26488: a2 = s1 + 0x1000\n 26492: u64 [a2 + 0xfffffffffffff880] = a0\n 26496: a0 = 0\n 26498: ra = 1006, jump @12\n      : @859 [@dyn 503] (gas: 12)\n 26504: a0 = s1 + 0x1000\n 26508: u64 [a0 + 4294965368] = 0\n 26512: a0 = s1 + 0x1000\n 26516: u64 [a0 + 4294965360] = 0\n 26520: a1 = s1 + 0x1000\n 26524: u64 [a1 + 4294965344] = 0x2\n 26529: a0 = 0x20\n 26532: a1 = s1 + 0x7ff\n 26536: a1 = a1 + 0x61\n 26539: a2 = s1 + 0x1000\n 26543: u64 [a2 + 4294965352] = 0\n 26547: ra = 1008, jump @12\n      : @860 [@dyn 504] (gas: 3)\n 26553: a1 = 0x40\n 26556: a0 = 0\n 26558: ra = 1010, jump @0\n      : @861 [@dyn 505] (gas: 1)\n 26564: t0 = 1012, jump @1202\n      : @862 [@dyn 506] (gas: 4)\n 26570: ra = 0x3f6\n 26574: ecalli 6 // 'hash_keccak_256'\n 26576: t0 = 0x3f8\n 26580: jump @1225\n      : @863 [@dyn 507] (gas: 1)\n 26583: t0 = 1016, jump @1225\n      : @864 [@dyn 508] (gas: 13)\n 26589: a3 = a3 + s1\n 26592: u64 [a3 + 0xfffffffffffff838] = a2\n 26596: a2 = s1 + 0x1000\n 26600: u64 [a2 + 0xfffffffffffff830] = a1\n 26604: a1 = s1 + 0x1000\n 26608: u64 [a1 + 0xfffffffffffff828] = a0\n 26612: a0 = s1 + 0x7ff\n 26616: a0 = a0 + 0x41\n 26619: a1 = s1 + 0x7ff\n 26623: a1 = a1 + 0x21\n 26626: a2 = s1 + 0x1000\n 26630: u64 [a2 + 0xfffffffffffff820] = a4\n 26634: ra = 1018, jump @14\n      : @865 [@dyn 509] (gas: 13)\n 26640: a0 = s1 + 0x1000\n 26644: a0 = u64 [a0 + 0xfffffffffffff858]\n 26648: a1 = s1 + 0x1000\n 26652: a1 = u64 [a1 + 0xfffffffffffff848]\n 26656: a2 = s1 + 0x1000\n 26660: a2 = u64 [a2 + 0xfffffffffffff840]\n 26664: a3 = s1 + 0x1000\n 26668: a3 = u64 [a3 + 0xfffffffffffff850]\n 26672: a0 = a0 | a1\n 26675: a1 = a2 ^ 0x1\n 26678: a1 = a1 | a3\n 26681: a0 = a0 | a1\n 26684: jump @909 if a0 != 0\n      : @866 (gas: 16)\n 26688: a0 = u64 [s1 + 0x90]\n 26692: a1 = s1 + 0x1000\n 26696: u64 [a1 + 0xfffffffffffff800] = a0\n 26700: a0 = u64 [s1 + 0x88]\n 26704: a1 = s1 + 0x1000\n 26708: u64 [a1 + 0xfffffffffffff808] = a0\n 26712: a0 = u64 [s1 + 0x80]\n 26716: a1 = s1 + 0x1000\n 26720: u64 [a1 + 0xfffffffffffff810] = a0\n 26724: a1 = s1 + 0x7ff\n 26728: a1 = a1 + 0x1\n 26731: a0 = u64 [s1 + 0x78]\n 26734: a2 = s1 + 0x1000\n 26738: u64 [a2 + 0xfffffffffffff818] = a0\n 26742: a0 = 0\n 26744: ra = 1020, jump @12\n      : @867 [@dyn 510] (gas: 7)\n 26750: u64 [s1 + 2040] = 0\n 26754: u64 [s1 + 2032] = 0\n 26758: u64 [s1 + 2016] = 0x3\n 26763: a0 = 0x20\n 26766: a1 = s1 + 0x7e0\n 26770: u64 [s1 + 2024] = 0\n 26774: ra = 1022, jump @12\n      : @868 [@dyn 511] (gas: 3)\n 26780: a1 = 0x40\n 26783: a0 = 0\n 26785: ra = 1024, jump @0\n      : @869 [@dyn 512] (gas: 9)\n 26791: a1 = sp + 0xffffffffffffffe0\n 26794: a1 = a1 & 0xffffffffffffffe0\n 26797: sp = a1\n 26799: i32 a0 = a0 + 0\n 26801: u64 [s1 + 0x150] = a1\n 26805: i32 a2 = a1 + 0\n 26807: a1 = 0x40\n 26810: ecalli 6 // 'hash_keccak_256'\n 26812: fallthrough\n      : @870 (gas: 11)\n 26813: a3 = u64 [s1 + 0x58]\n 26816: a0 = a3 >u 0\n 26818: a2 = u64 [s1 + 0x60]\n 26821: a1 = a2 >u 0\n 26823: a1 = a0 if a2 == 0\n 26826: a2 = a2 | a3\n 26829: a0 = u64 [s1 + 0x68]\n 26832: a0 = a0 >u 0\n 26834: u64 [s1 + 0x158] = a2\n 26838: a0 = a1 if a2 != 0\n 26841: jump @872 if a0 == 0\n      : @871 (gas: 1)\n 26844: jump @1025\n      : @872 (gas: 20)\n 26847: a3 = u64 [s1 + 0x150]\n 26851: a0 = u64 [a3]\n 26853: a1 = u64 [a3 + 0x8]\n 26856: a2 = u64 [a3 + 0x10]\n 26859: a3 = u64 [a3 + 0x18]\n 26862: a4 = reverse a0\n 26864: u64 [s1 + 0x110] = a4\n 26868: a1 = reverse a1\n 26870: u64 [s1 + 0x108] = a1\n 26874: a2 = reverse a2\n 26876: u64 [s1 + 0x100] = a2\n 26880: a0 = reverse a3\n 26882: u64 [s1 + 0xf8] = a0\n 26886: u64 [s1 + 0x7a0] = a0\n 26890: u64 [s1 + 0x7a8] = a2\n 26894: u64 [s1 + 0x7b0] = a1\n 26898: a0 = s1 + 0x7c0\n 26902: a1 = s1 + 0x7a0\n 26906: u64 [s1 + 0x7b8] = a4\n 26910: ra = 1026, jump @14\n      : @873 [@dyn 513] (gas: 11)\n 26916: a2 = u64 [s1 + 0x7c0]\n 26920: a0 = u64 [s1 + 0x7c8]\n 26924: a1 = u64 [s1 + 0x7d0]\n 26928: a3 = u64 [s1 + 0x7d8]\n 26932: u64 [s1 + 0x778] = a3\n 26936: u64 [s1 + 0x770] = a1\n 26940: u64 [s1 + 0x768] = a0\n 26944: a0 = s1 + 0x780\n 26948: a1 = s1 + 0x760\n 26952: u64 [s1 + 0x760] = a2\n 26956: ra = 1028, jump @1075\n      : @874 [@dyn 514] (gas: 29)\n 26962: a5 = s1 + 0x700\n 26966: a0 = u64 [a5 + 0x80]\n 26970: a1 = u64 [a5 + 0x88]\n 26974: a2 = u64 [a5 + 0x90]\n 26978: a3 = u64 [a5 + 0x98]\n 26982: a4 = u64 [s1 + 0x60]\n 26985: u64 [a5 + 0x18] = a4\n 26988: a4 = u64 [s1 + 0x58]\n 26991: u64 [a5 + 0x10] = a4\n 26994: a4 = u64 [s1 + 0x68]\n 26997: u64 [a5 + 0x8] = a4\n 27000: a4 = u64 [s1 + 0x70]\n 27003: u64 [a5] = a4\n 27005: u64 [a5 + 0x38] = a3\n 27008: u64 [a5 + 0x30] = a2\n 27011: u64 [a5 + 0x28] = a1\n 27014: u64 [a5 + 0x20] = a0\n 27017: a0 = u64 [s1 + 0x110]\n 27021: u64 [a5 + 0x58] = a0\n 27024: a0 = u64 [s1 + 0x108]\n 27028: u64 [a5 + 0x50] = a0\n 27031: a0 = u64 [s1 + 0x100]\n 27035: u64 [a5 + 0x48] = a0\n 27038: a0 = s1 + 0x740\n 27042: a1 = s1 + 0x720\n 27046: a2 = s1 + 0x700\n 27050: a3 = u64 [s1 + 0xf8]\n 27054: u64 [a5 + 0x40] = a3\n 27057: ra = 1030, jump @1152\n      : @875 [@dyn 515] (gas: 7)\n 27063: a0 = u64 [s1 + 0x70]\n 27066: a0 = a0 <u 0x20\n 27069: a1 = u64 [s1 + 0x68]\n 27072: a0 = 0 if a1 != 0\n 27074: a1 = u64 [s1 + 0x158]\n 27078: a0 = 0 if a1 != 0\n 27080: jump @885 if a0 != 0\n      : @876 (gas: 15)\n 27084: a0 = u64 [s1 + 0x70]\n 27087: a0 = a0 & 0xffffffffffffffe0\n 27090: u64 [s1 + 0x118] = a0\n 27094: a0 = u64 [s1 + 0xf8]\n 27098: a2 = s1 + 0x600\n 27102: u64 [a2 + 0xe0] = a0\n 27106: a0 = u64 [s1 + 0x100]\n 27110: u64 [a2 + 0xe8] = a0\n 27114: a0 = u64 [s1 + 0x108]\n 27118: u64 [a2 + 0xf0] = a0\n 27122: a1 = s1 + 0x6e0\n 27126: a0 = u64 [s1 + 0x110]\n 27130: u64 [a2 + 0xf8] = a0\n 27134: a0 = 0\n 27136: ra = 1032, jump @12\n      : @877 [@dyn 516] (gas: 3)\n 27142: a1 = 0x20\n 27145: a0 = 0\n 27147: ra = 1034, jump @0\n      : @878 [@dyn 517] (gas: 4)\n 27153: a1 = sp + 0xffffffffffffffe0\n 27156: a1 = a1 & 0xffffffffffffffe0\n 27159: u64 [s1 + 0x158] = a1\n 27163: t0 = 1036, jump @1215\n      : @879 [@dyn 518] (gas: 20)\n 27169: ecalli 6 // 'hash_keccak_256'\n 27171: a5 = 0\n 27173: a2 = 0\n 27175: ra = 0\n 27177: t2 = 0\n 27179: a3 = u64 [s1 + 0x158]\n 27183: a0 = u64 [a3]\n 27185: a1 = u64 [a3 + 0x8]\n 27188: a4 = u64 [a3 + 0x10]\n 27191: a3 = u64 [a3 + 0x18]\n 27194: a0 = reverse a0\n 27196: u64 [s1 + 0x148] = a0\n 27200: a0 = reverse a1\n 27202: a1 = s1 + 0x100\n 27206: u64 [a1 + 0x40] = a0\n 27209: a0 = reverse a4\n 27211: u64 [a1 + 0x50] = a0\n 27214: a0 = reverse a3\n 27216: u64 [a1 + 0x58] = a0\n 27219: fallthrough\n      : @880 (gas: 17)\n 27220: a0 = u64 [s1 + 0x118]\n 27224: a0 = a5 <u a0\n 27227: a3 = a0 ^ 0x1\n 27230: a3 = 0x1 if a2 != 0\n 27233: a0 = ra | t2\n 27236: a3 = 0x1 if a0 != 0\n 27239: a4 = u64 [s1 + 0xd0]\n 27243: u64 [s1 + 0x138] = a5\n 27247: t1 = a4 + a5\n 27250: a5 = u64 [s1 + 0xc0]\n 27254: u64 [s1 + 0x130] = a2\n 27258: a2 = a2 + a5\n 27261: a1 = u64 [s1 + 0xc8]\n 27265: a0 = a1 + ra\n 27268: t0 = u64 [s1 + 0xb8]\n 27272: t0 = t0 + t2\n 27275: jump @887 if a3 != 0\n      : @881 (gas: 20)\n 27279: u64 [s1 + 0x120] = ra\n 27283: u64 [s1 + 0x128] = t2\n 27287: a3 = t1 <u a4\n 27290: a2 = a2 + a3\n 27293: a4 = a2 ^ a5\n 27296: a5 = a2 <u a5\n 27299: a5 = a3 if a4 == 0\n 27302: a5 = a5 + a0\n 27305: a3 = a5 <u a0\n 27308: a1 = a0 <u a1\n 27311: a0 = t0 + a1\n 27314: a0 = a0 + a3\n 27317: a1 = t1 | a5\n 27320: a0 = a0 | a2\n 27323: a1 = a1 | a0\n 27326: a1 = a1 >> 0x20\n 27329: a0 = a0 | a5\n 27332: a0 = a0 << 0x20\n 27335: a0 = a0 | a1\n 27338: jump @883 if a0 == 0\n      : @882 (gas: 1)\n 27341: jump @747\n      : @883 (gas: 26)\n 27344: i32 a1 = t1 + 0\n 27346: a0 = s1 + 0x4000\n 27350: i32 a0 = a0 + 0xfffffffffffffac0\n 27354: ecalli 1 // 'call_data_load'\n 27356: a3 = s1 + 0x38d8\n 27360: a4 = a3 + 0x100\n 27364: a0 = u64 [a4 + 0xe8]\n 27368: a1 = u64 [a4 + 0xf0]\n 27372: a2 = u64 [a4 + 0xf8]\n 27376: a3 = u64 [a3 + 0x200]\n 27380: a4 = s1 + 0x200\n 27384: u64 [a4 + 0xd8] = a3\n 27388: u64 [a4 + 0xd0] = a2\n 27392: u64 [a4 + 0xc8] = a1\n 27396: u64 [a4 + 0xc0] = a0\n 27400: a0 = u64 [s1 + 0x148]\n 27404: u64 [a4 + 0xf8] = a0\n 27408: a0 = u64 [s1 + 0x140]\n 27412: u64 [a4 + 0xf0] = a0\n 27416: a0 = u64 [s1 + 0x150]\n 27420: u64 [a4 + 0xe8] = a0\n 27424: a0 = s1 + 0x2e0\n 27428: a1 = s1 + 0x2c0\n 27432: a2 = u64 [s1 + 0x158]\n 27436: u64 [a4 + 0xe0] = a2\n 27440: ra = 1038, jump @16\n      : @884 [@dyn 519] (gas: 33)\n 27446: a5 = s1 + 0x100\n 27450: a2 = u64 [a5 + 0x58]\n 27453: a2 = a2 + 0x1\n 27456: a0 = a2 <u 0x1\n 27459: a1 = u64 [a5 + 0x50]\n 27462: a1 = a1 + a0\n 27465: u64 [a5 + 0x58] = a2\n 27468: u64 [a5 + 0x50] = a1\n 27471: a0 = a2 | a1\n 27474: a0 = a0 <u 0x1\n 27477: a1 = u64 [a5 + 0x40]\n 27480: a0 = a0 + a1\n 27483: a1 = a0 <u a1\n 27486: a2 = u64 [a5 + 0x48]\n 27489: a2 = a2 + a1\n 27492: u64 [a5 + 0x48] = a2\n 27495: a2 = u64 [a5 + 0x38]\n 27498: a1 = a2 + 0x20\n 27501: a2 = a1 <u a2\n 27504: a4 = u64 [a5 + 0x30]\n 27507: a3 = a4 + a2\n 27510: a4 = a3 <u a4\n 27513: a4 = a2 if a2 == 0\n 27516: a2 = u64 [a5 + 0x20]\n 27519: a4 = a4 + a2\n 27522: a2 = a4 <u a2\n 27525: t2 = u64 [s1 + 0x128]\n 27529: t2 = t2 + a2\n 27532: u64 [a5 + 0x40] = a0\n 27535: a5 = a1\n 27537: a2 = a3\n 27539: ra = a4\n 27541: jump @880\n      : @885 (gas: 8)\n 27544: a0 = u64 [s1 + 0x70]\n 27547: a1 = u64 [s1 + 0x58]\n 27550: a0 = a0 | a1\n 27553: a1 = u64 [s1 + 0x60]\n 27556: a2 = u64 [s1 + 0x68]\n 27559: a1 = a1 | a2\n 27562: a0 = a0 | a1\n 27565: jump @898 if a0 != 0\n      : @886 (gas: 5)\n 27569: u64 [s1 + 240] = 0\n 27573: u64 [s1 + 280] = 0\n 27577: u64 [s1 + 288] = 0\n 27581: u64 [s1 + 296] = 0\n 27585: jump @901\n      : @887 (gas: 11)\n 27588: u64 [s1 + 0x138] = t1\n 27592: a3 = u64 [s1 + 0x70]\n 27595: a1 = u64 [s1 + 0x118]\n 27599: a3 = a3 ^ a1\n 27602: a4 = u64 [s1 + 0x58]\n 27605: a3 = a3 | a4\n 27608: a4 = u64 [s1 + 0x60]\n 27611: a5 = u64 [s1 + 0x68]\n 27614: a4 = a4 | a5\n 27617: a3 = a3 | a4\n 27620: jump @897 if a3 == 0\n      : @888 (gas: 22)\n 27624: a1 = u64 [s1 + 0xd0]\n 27628: a4 = u64 [s1 + 0x138]\n 27632: a3 = a4 <u a1\n 27635: a2 = a2 + a3\n 27638: a1 = u64 [s1 + 0xc0]\n 27642: t1 = a2 ^ a1\n 27645: a5 = a2 <u a1\n 27648: a5 = a3 if t1 == 0\n 27651: a5 = a5 + a0\n 27654: a3 = a5 <u a0\n 27657: a1 = u64 [s1 + 0xc8]\n 27661: a1 = a0 <u a1\n 27664: a0 = t0 + a1\n 27667: a0 = a0 + a3\n 27670: a1 = a4 | a5\n 27673: a0 = a0 | a2\n 27676: a1 = a1 | a0\n 27679: a1 = a1 >> 0x20\n 27682: a0 = a0 | a5\n 27685: a0 = a0 << 0x20\n 27688: a0 = a0 | a1\n 27691: jump @890 if a0 == 0\n      : @889 (gas: 1)\n 27694: jump @747\n      : @890 (gas: 8)\n 27697: a0 = u64 [s1 + 0x70]\n 27700: a0 = a0 << 0x3b\n 27703: a0 = a0 >> 0x38\n 27706: u64 [s1 + 0x130] = a0\n 27710: a2 = a0 + 0xffffffffffffff80\n 27713: a0 = 0xffffffffffffffff\n 27716: a1 = 0xffffffffffffffff\n 27719: ra = 1040, jump @1255\n      : @891 [@dyn 520] (gas: 6)\n 27725: u64 [s1 + 0x120] = a0\n 27729: u64 [s1 + 0x128] = a1\n 27733: a0 = 0xffffffffffffffff\n 27736: a1 = 0xffffffffffffffff\n 27739: a2 = u64 [s1 + 0x130]\n 27743: ra = 1042, jump @1255\n      : @892 [@dyn 521] (gas: 7)\n 27749: u64 [s1 + 0x118] = a0\n 27753: u64 [s1 + 0xf0] = a1\n 27757: a1 = u64 [s1 + 0x130]\n 27761: a2 = 0x80 - a1\n 27765: a0 = 0xffffffffffffffff\n 27768: a1 = 0xffffffffffffffff\n 27771: ra = 1044, jump @1260\n      : @893 [@dyn 522] (gas: 18)\n 27777: a3 = u64 [s1 + 0xf0]\n 27781: a3 = a3 | a1\n 27784: a2 = u64 [s1 + 0x130]\n 27788: a4 = a2 <u 0x80\n 27792: u64 [s1 + 0xf0] = a4\n 27796: a1 = u64 [s1 + 0x128]\n 27800: a3 = a1 if a4 == 0\n 27803: a3 = 0xffffffffffffffff if a2 == 0\n 27806: u64 [s1 + 0x128] = a3\n 27810: a3 = u64 [s1 + 0x118]\n 27814: a0 = a0 | a3\n 27817: a3 = u64 [s1 + 0x120]\n 27821: a0 = a3 if a4 == 0\n 27824: a0 = 0xffffffffffffffff if a2 == 0\n 27827: u64 [s1 + 0x120] = a0\n 27831: a0 = 0xffffffffffffffff\n 27834: a1 = 0xffffffffffffffff\n 27837: ra = 1046, jump @1255\n      : @894 [@dyn 523] (gas: 12)\n 27843: a2 = u64 [s1 + 0xf0]\n 27847: a1 = 0 if a2 == 0\n 27849: u64 [s1 + 0x130] = a1\n 27853: a0 = 0 if a2 == 0\n 27855: u64 [s1 + 0x118] = a0\n 27859: a1 = i32 [s1 + 0x138]\n 27863: a0 = s1 + 0x4000\n 27867: i32 a0 = a0 + 0xfffffffffffffae0\n 27871: ra = 0x418\n 27875: ecalli 1 // 'call_data_load'\n 27877: t0 = 0x41a\n 27881: jump @1253\n      : @895 [@dyn 524] (gas: 1)\n 27884: t0 = 1050, jump @1253\n      : @896 [@dyn 525] (gas: 29)\n 27890: a0 = u64 [a4 + 0x8]\n 27893: a1 = u64 [a4 + 0x10]\n 27896: a2 = u64 [a4 + 0x18]\n 27899: a3 = u64 [a4 + 0x20]\n 27902: a5 = s1 + 0x100\n 27906: a4 = u64 [a5 + 0x20]\n 27909: a4 = a0 & ~a4\n 27912: a0 = u64 [a5 + 0x28]\n 27915: a0 = a1 & ~a0\n 27918: a1 = u64 [a5 + 0x18]\n 27921: a1 = a2 & ~a1\n 27924: a2 = u64 [a5 + 0x30]\n 27927: a2 = a3 & ~a2\n 27930: a3 = u64 [a5 + 0x48]\n 27933: u64 [s1 + 0x6d8] = a3\n 27937: a3 = u64 [a5 + 0x40]\n 27940: u64 [s1 + 0x6d0] = a3\n 27944: a3 = u64 [a5 + 0x50]\n 27947: u64 [s1 + 0x6c8] = a3\n 27951: a3 = u64 [a5 + 0x58]\n 27954: a5 = s1 + 0x600\n 27958: u64 [a5 + 0xc0] = a3\n 27962: u64 [a5 + 0xb8] = a2\n 27966: u64 [a5 + 0xb0] = a1\n 27970: u64 [a5 + 0xa8] = a0\n 27974: a0 = s1 + 0x6c0\n 27978: a1 = s1 + 0x6a0\n 27982: u64 [a5 + 0xa0] = a4\n 27986: ra = 1052, jump @16\n      : @897 [@dyn 526] (gas: 16)\n 27992: a5 = u64 [s1 + 0x70]\n 27995: a0 = a5 >> 0x3f\n 27998: a2 = u64 [s1 + 0x68]\n 28001: a1 = a2 << 0x1\n 28004: a4 = a1 | a0\n 28007: a1 = a2 >> 0x3f\n 28010: a0 = u64 [s1 + 0x58]\n 28013: a2 = a0 << 0x1\n 28016: a1 = a1 | a2\n 28019: a2 = a0 >> 0x3f\n 28022: a3 = u64 [s1 + 0x60]\n 28025: a3 = a3 << 0x1\n 28028: a2 = a2 | a3\n 28031: a3 = a5 << 0x1\n 28034: a3 = a3 + 0x1\n 28037: jump @908\n      : @898 (gas: 12)\n 28040: a2 = u64 [s1 + 0xc8]\n 28044: a0 = u64 [s1 + 0xd0]\n 28048: a0 = a0 | a2\n 28051: a1 = u64 [s1 + 0xc0]\n 28055: a3 = u64 [s1 + 0xb8]\n 28059: a1 = a1 | a3\n 28062: a0 = a0 | a1\n 28065: a0 = a0 >> 0x20\n 28068: a1 = a1 | a2\n 28071: a1 = a1 << 0x20\n 28074: a0 = a0 | a1\n 28077: jump @900 if a0 == 0\n      : @899 (gas: 1)\n 28080: jump @747\n      : @900 (gas: 16)\n 28083: a1 = i32 [s1 + 0xd0]\n 28087: a0 = s1 + 0x4000\n 28091: i32 a0 = a0 + 0xfffffffffffffb00\n 28095: ecalli 1 // 'call_data_load'\n 28097: a0 = s1 + 0x38d8\n 28101: a2 = a0 + 0x200\n 28105: a1 = u64 [a2 + 0x40]\n 28108: a0 = s1 + 0x100\n 28112: u64 [a0 + 0x28] = a1\n 28115: a1 = u64 [a2 + 0x38]\n 28118: u64 [a0 + 0x20] = a1\n 28121: a1 = u64 [a2 + 0x30]\n 28124: u64 [a0 + 0x18] = a1\n 28127: a0 = u64 [a2 + 0x28]\n 28130: u64 [s1 + 0xf0] = a0\n 28134: fallthrough\n      : @901 (gas: 7)\n 28135: a0 = u64 [s1 + 0x70]\n 28138: a0 = a0 << 0x3\n 28141: u64 [s1 + 0x158] = a0\n 28145: i32 a2 = a0 + 0xffffffffffffff80\n 28148: a0 = 0xffffffffffffffff\n 28151: a1 = 0xffffffffffffffff\n 28154: ra = 1054, jump @1255\n      : @902 [@dyn 527] (gas: 8)\n 28160: u64 [s1 + 0x148] = a0\n 28164: u64 [s1 + 0x150] = a1\n 28168: a0 = u64 [s1 + 0x70]\n 28171: i32 a2 = a0 << 0x3\n 28174: u64 [s1 + 0x140] = a2\n 28178: a0 = 0xffffffffffffffff\n 28181: a1 = 0xffffffffffffffff\n 28184: ra = 1056, jump @1255\n      : @903 [@dyn 528] (gas: 1)\n 28190: t0 = 1058, jump @1239\n      : @904 [@dyn 529] (gas: 1)\n 28196: ra = 1060, jump @1260\n      : @905 [@dyn 530] (gas: 1)\n 28202: t0 = 1062, jump @1209\n      : @906 [@dyn 531] (gas: 1)\n 28208: ra = 1064, jump @1255\n      : @907 [@dyn 532] (gas: 32)\n 28214: a2 = u64 [s1 + 0x130]\n 28218: a1 = 0 if a2 == 0\n 28220: a0 = 0 if a2 == 0\n 28222: a4 = u64 [s1 + 0x68]\n 28225: a2 = a4 >> 0x3f\n 28228: a5 = u64 [s1 + 0x58]\n 28231: a3 = a5 << 0x1\n 28234: t0 = a3 | a2\n 28237: a2 = a5 >> 0x3f\n 28240: a3 = u64 [s1 + 0x60]\n 28243: a3 = a3 << 0x1\n 28246: t1 = a3 | a2\n 28249: a4 = a4 << 0x1\n 28252: a3 = u64 [s1 + 0x70]\n 28255: a5 = a3 >> 0x3f\n 28258: t2 = a4 | a5\n 28261: a2 = u64 [s1 + 0xf0]\n 28265: a4 = u64 [s1 + 0x158]\n 28269: a5 = a2 & ~a4\n 28272: a2 = u64 [s1 + 0x118]\n 28276: a4 = u64 [s1 + 0x150]\n 28280: a4 = a2 & ~a4\n 28283: a2 = u64 [s1 + 0x120]\n 28287: a0 = a2 & ~a0\n 28290: a2 = u64 [s1 + 0x128]\n 28294: a1 = a2 & ~a1\n 28297: a4 = a4 | t2\n 28300: a3 = a3 << 0x1\n 28303: a3 = a3 | a5\n 28306: a2 = a1 | t1\n 28309: a1 = a0 | t0\n 28312: fallthrough\n      : @908 (gas: 17)\n 28313: a5 = s1 + 0x600\n 28317: u64 [a5 + 0x60] = a3\n 28320: a0 = u64 [s1 + 0xf8]\n 28324: u64 [a5 + 0x80] = a0\n 28328: u64 [a5 + 0x68] = a4\n 28331: a3 = s1 + 0x100\n 28335: a0 = u64 [a3]\n 28337: u64 [a5 + 0x88] = a0\n 28341: u64 [a5 + 0x70] = a1\n 28344: a0 = u64 [a3 + 0x8]\n 28347: u64 [a5 + 0x90] = a0\n 28351: u64 [a5 + 0x78] = a2\n 28354: a0 = s1 + 0x680\n 28358: a1 = s1 + 0x660\n 28362: a2 = u64 [a3 + 0x10]\n 28365: u64 [a5 + 0x98] = a2\n 28369: ra = 1066, jump @16\n      : @909 [@dyn 533] (gas: 11)\n 28375: a0 = u64 [s1 + 0x98]\n 28379: u64 [s1 + 0x640] = a0\n 28383: a0 = u64 [s1 + 0xa0]\n 28387: u64 [s1 + 0x648] = a0\n 28391: a0 = u64 [s1 + 0xa8]\n 28395: u64 [s1 + 0x650] = a0\n 28399: a1 = s1 + 0x640\n 28403: a0 = u64 [s1 + 0xb0]\n 28407: u64 [s1 + 0x658] = a0\n 28411: a0 = 0\n 28413: ra = 1068, jump @12\n      : @910 [@dyn 534] (gas: 7)\n 28419: u64 [s1 + 1592] = 0\n 28423: u64 [s1 + 1584] = 0\n 28427: u64 [s1 + 1568] = 0x4\n 28432: a0 = 0x20\n 28435: a1 = s1 + 0x620\n 28439: u64 [s1 + 1576] = 0\n 28443: ra = 1070, jump @12\n      : @911 [@dyn 535] (gas: 3)\n 28449: a1 = 0x40\n 28452: a0 = 0\n 28454: ra = 1072, jump @0\n      : @912 [@dyn 536] (gas: 1)\n 28460: t0 = 1074, jump @1202\n      : @913 [@dyn 537] (gas: 21)\n 28466: ecalli 6 // 'hash_keccak_256'\n 28468: a3 = u64 [s1 + 0x158]\n 28472: a0 = u64 [a3 + 0x18]\n 28475: a1 = u64 [a3 + 0x10]\n 28478: a2 = u64 [a3 + 0x8]\n 28481: a3 = u64 [a3]\n 28483: a4 = reverse a0\n 28485: u64 [s1 + 0x140] = a4\n 28489: a0 = reverse a1\n 28491: u64 [s1 + 0x158] = a0\n 28495: a1 = reverse a2\n 28497: u64 [s1 + 0x150] = a1\n 28501: a2 = reverse a3\n 28503: u64 [s1 + 0x148] = a2\n 28507: u64 [s1 + 0x5f8] = a2\n 28511: u64 [s1 + 0x5f0] = a1\n 28515: u64 [s1 + 0x5e8] = a0\n 28519: a0 = s1 + 0x600\n 28523: a1 = s1 + 0x5e0\n 28527: u64 [s1 + 0x5e0] = a4\n 28531: ra = 1076, jump @14\n      : @914 [@dyn 538] (gas: 22)\n 28537: a4 = s1 + 0x600\n 28541: a0 = u64 [a4 + 0x8]\n 28544: a1 = u64 [a4]\n 28546: a2 = u64 [a4 + 0x10]\n 28549: a3 = u64 [a4 + 0x18]\n 28552: a1 = a1 & 0xffffffffffffff00\n 28556: a4 = a1 | 0x1\n 28559: u64 [s1 + 0x5b8] = a3\n 28563: u64 [s1 + 0x5b0] = a2\n 28567: u64 [s1 + 0x5a8] = a0\n 28571: a0 = u64 [s1 + 0x148]\n 28575: u64 [s1 + 0x5d8] = a0\n 28579: a0 = u64 [s1 + 0x150]\n 28583: u64 [s1 + 0x5d0] = a0\n 28587: a0 = u64 [s1 + 0x158]\n 28591: u64 [s1 + 0x5c8] = a0\n 28595: a0 = u64 [s1 + 0x140]\n 28599: u64 [s1 + 0x5c0] = a0\n 28603: a0 = s1 + 0x5c0\n 28607: a1 = s1 + 0x5a0\n 28611: u64 [s1 + 0x5a0] = a4\n 28615: ra = 1078, jump @16\n      : @915 [@dyn 539] (gas: 5)\n 28621: a0 = s1 + 0x4000\n 28625: i32 a0 = a0 + 0xfffffffffffffb20\n 28629: ra = 0x438\n 28633: ecalli 3 // 'caller'\n 28635: fallthrough\n      : @916 [@dyn 540] (gas: 6)\n 28636: a2 = s1 + 0x38d8\n 28640: a3 = a2 + 0x200\n 28644: a0 = u64 [a3 + 0x50]\n 28647: a1 = i32 [a3 + 0x58]\n 28650: a2 = u64 [a3 + 0x48]\n 28653: t0 = 1082, jump @1227\n      : @917 [@dyn 541] (gas: 7)\n 28659: u64 [s1 + 1432] = 0\n 28663: u64 [s1 + 0x590] = a1\n 28667: u64 [s1 + 0x588] = a0\n 28671: a1 = s1 + 0x580\n 28675: u64 [s1 + 0x580] = a3\n 28679: a0 = 0\n 28681: ra = 1084, jump @12\n      : @918 [@dyn 542] (gas: 7)\n 28687: u64 [s1 + 1400] = 0\n 28691: u64 [s1 + 1392] = 0\n 28695: u64 [s1 + 1376] = 0x5\n 28700: a0 = 0x20\n 28703: a1 = s1 + 0x560\n 28707: u64 [s1 + 1384] = 0\n 28711: ra = 1086, jump @12\n      : @919 [@dyn 543] (gas: 3)\n 28717: a1 = 0x40\n 28720: a0 = 0\n 28722: ra = 1088, jump @0\n      : @920 [@dyn 544] (gas: 1)\n 28728: t0 = 1090, jump @1202\n      : @921 [@dyn 545] (gas: 3)\n 28734: ra = 0x444\n 28738: ecalli 6 // 'hash_keccak_256'\n 28740: fallthrough\n      : @922 [@dyn 546] (gas: 3)\n 28741: a5 = s1 + 0x100\n 28745: a3 = u64 [a5 + 0x58]\n 28748: t0 = 1094, jump @1216\n      : @923 [@dyn 547] (gas: 11)\n 28754: u64 [a5 + 0x40] = a2\n 28757: u64 [s1 + 0x538] = a2\n 28761: u64 [a5 + 0x48] = a1\n 28764: u64 [s1 + 0x530] = a1\n 28768: u64 [a5 + 0x50] = a0\n 28771: u64 [s1 + 0x528] = a0\n 28775: a0 = s1 + 0x540\n 28779: a1 = s1 + 0x520\n 28783: u64 [a5 + 0x58] = a4\n 28786: u64 [s1 + 0x520] = a4\n 28790: ra = 1096, jump @14\n      : @924 [@dyn 548] (gas: 13)\n 28796: a0 = s1 + 0x500\n 28800: a5 = u64 [a0 + 0x58]\n 28803: a3 = u64 [a0 + 0x50]\n 28806: a2 = u64 [a0 + 0x48]\n 28809: a0 = a5 >u 0\n 28811: a1 = a3 >u 0\n 28813: a1 = a0 if a5 != 0\n 28816: a4 = a3\n 28818: a0 = a3 | a5\n 28821: a3 = a2\n 28823: a2 = a2 >u 0\n 28825: a2 = a1 if a0 != 0\n 28828: jump @926 if a2 == 0\n      : @925 (gas: 1)\n 28831: jump @1028\n      : @926 (gas: 29)\n 28834: a0 = u64 [s1 + 0x540]\n 28838: u64 [s1 + 0x138] = a0\n 28842: a0 = a0 + 0x1\n 28845: a1 = a0 <u 0x1\n 28848: u64 [s1 + 0x130] = a3\n 28852: a1 = a1 + a3\n 28855: a2 = a0 | a1\n 28858: a2 = a2 <u 0x1\n 28861: u64 [s1 + 0x128] = a4\n 28865: a2 = a2 + a4\n 28868: a3 = a2 <u a4\n 28871: u64 [s1 + 0x120] = a5\n 28875: a3 = a3 + a5\n 28878: a4 = u64 [s1 + 0x158]\n 28882: a5 = s1 + 0x500\n 28886: u64 [a5] = a4\n 28888: u64 [s1 + 0x4e0] = a0\n 28892: a0 = u64 [s1 + 0x150]\n 28896: u64 [a5 + 0x8] = a0\n 28899: a0 = u64 [s1 + 0x148]\n 28903: u64 [a5 + 0x10] = a0\n 28906: u64 [s1 + 0x4e8] = a1\n 28910: a0 = u64 [s1 + 0x140]\n 28914: u64 [a5 + 0x18] = a0\n 28917: u64 [s1 + 0x4f0] = a2\n 28921: a0 = s1 + 0x500\n 28925: a1 = s1 + 0x4e0\n 28929: u64 [s1 + 0x4f8] = a3\n 28933: ra = 1098, jump @16\n      : @927 [@dyn 549] (gas: 20)\n 28939: a0 = u64 [s1 + 0x120]\n 28943: u64 [s1 + 0x478] = a0\n 28947: a0 = u64 [s1 + 0x128]\n 28951: u64 [s1 + 0x470] = a0\n 28955: a0 = u64 [s1 + 0x130]\n 28959: u64 [s1 + 0x468] = a0\n 28963: a0 = u64 [s1 + 0x138]\n 28967: u64 [s1 + 0x460] = a0\n 28971: a0 = u64 [s1 + 0x140]\n 28975: u64 [s1 + 0x498] = a0\n 28979: a0 = u64 [s1 + 0x148]\n 28983: u64 [s1 + 0x490] = a0\n 28987: a0 = u64 [s1 + 0x150]\n 28991: u64 [s1 + 0x488] = a0\n 28995: a0 = s1 + 0x4a0\n 28999: a1 = s1 + 0x480\n 29003: a2 = s1 + 0x460\n 29007: a3 = u64 [s1 + 0x158]\n 29011: u64 [s1 + 0x480] = a3\n 29015: ra = 1100, jump @1161\n      : @928 [@dyn 550] (gas: 23)\n 29021: a0 = u64 [s1 + 0x4d8]\n 29025: u64 [s1 + 0x150] = a0\n 29029: a0 = u64 [s1 + 0x4d0]\n 29033: u64 [s1 + 0x148] = a0\n 29037: a0 = u64 [s1 + 0x4c8]\n 29041: u64 [s1 + 0x140] = a0\n 29045: a0 = u64 [s1 + 0x4c0]\n 29049: u64 [s1 + 0x158] = a0\n 29053: a2 = u64 [s1 + 0x4a0]\n 29057: u64 [s1 + 0x110] = a2\n 29061: a0 = u64 [s1 + 0x4a8]\n 29065: u64 [s1 + 0x128] = a0\n 29069: a1 = u64 [s1 + 0x4b0]\n 29073: u64 [s1 + 0x120] = a1\n 29077: a3 = u64 [s1 + 0x4b8]\n 29081: u64 [s1 + 0x118] = a3\n 29085: u64 [s1 + 0x438] = a3\n 29089: u64 [s1 + 0x430] = a1\n 29093: u64 [s1 + 0x428] = a0\n 29097: a0 = s1 + 0x440\n 29101: a1 = s1 + 0x420\n 29105: u64 [s1 + 0x420] = a2\n 29109: ra = 1102, jump @14\n      : @929 [@dyn 551] (gas: 24)\n 29115: a0 = u64 [s1 + 0x440]\n 29119: u64 [s1 + 0x108] = a0\n 29123: a0 = u64 [s1 + 0x448]\n 29127: u64 [s1 + 0x100] = a0\n 29131: a0 = u64 [s1 + 0x450]\n 29135: u64 [s1 + 0xf8] = a0\n 29139: a0 = u64 [s1 + 0x458]\n 29143: u64 [s1 + 0xf0] = a0\n 29147: a5 = u64 [s1 + 0x158]\n 29151: a0 = a5 >> 0x3d\n 29154: a2 = u64 [s1 + 0x140]\n 29158: a1 = a2 << 0x3\n 29161: a0 = a0 | a1\n 29164: a1 = a2 >> 0x3d\n 29167: a3 = u64 [s1 + 0x148]\n 29171: a2 = a3 << 0x3\n 29174: a1 = a1 | a2\n 29177: a2 = a3 >> 0x3d\n 29180: a3 = u64 [s1 + 0x150]\n 29184: a3 = a3 << 0x3\n 29187: a2 = a2 | a3\n 29190: a5 = a5 << 0x3\n 29193: u64 [s1 + 0x140] = a5\n 29197: t0 = 1104, jump @1221\n      : @930 [@dyn 552] (gas: 6)\n 29203: u64 [s1 + 0x130] = a4\n 29207: i32 a2 = a5 + 0xffffffffffffff80\n 29210: u64 [s1 + 0xd8] = a2\n 29214: a0 = u64 [s1 + 0x90]\n 29218: a1 = u64 [s1 + 0x88]\n 29222: ra = 1106, jump @1260\n      : @931 [@dyn 553] (gas: 8)\n 29228: u64 [s1 + 0xe8] = a0\n 29232: u64 [s1 + 0x150] = a1\n 29236: a0 = u64 [s1 + 0x158]\n 29240: i32 a2 = a0 << 0x3\n 29243: u64 [s1 + 0x148] = a2\n 29247: a0 = u64 [s1 + 0x80]\n 29251: a1 = u64 [s1 + 0x78]\n 29254: ra = 1108, jump @1260\n      : @932 [@dyn 554] (gas: 8)\n 29260: u64 [s1 + 0x158] = a0\n 29264: u64 [s1 + 0xe0] = a1\n 29268: a1 = u64 [s1 + 0x140]\n 29272: i32 a2 = 0x80 - a1\n 29276: u64 [s1 + 0xd0] = a2\n 29280: a0 = u64 [s1 + 0x90]\n 29284: a1 = u64 [s1 + 0x88]\n 29288: ra = 1110, jump @1255\n      : @933 [@dyn 555] (gas: 21)\n 29294: a2 = u64 [s1 + 0x158]\n 29298: a2 = a2 | a0\n 29301: a0 = u64 [s1 + 0x140]\n 29305: a4 = a0 <u 0x80\n 29309: u64 [s1 + 0x138] = a4\n 29313: a3 = u64 [s1 + 0xe8]\n 29317: a2 = a3 if a4 == 0\n 29320: a3 = u64 [s1 + 0x80]\n 29324: a2 = a3 if a0 == 0\n 29327: u64 [s1 + 0x158] = a2\n 29331: a2 = u64 [s1 + 0xe0]\n 29335: a1 = a1 | a2\n 29338: a2 = u64 [s1 + 0x150]\n 29342: a1 = a2 if a4 == 0\n 29345: a2 = u64 [s1 + 0x78]\n 29348: a1 = a2 if a0 == 0\n 29351: u64 [s1 + 0x150] = a1\n 29355: a0 = u64 [s1 + 0x90]\n 29359: a1 = u64 [s1 + 0x88]\n 29363: a2 = u64 [s1 + 0x148]\n 29367: ra = 1112, jump @1260\n      : @934 [@dyn 556] (gas: 19)\n 29373: a2 = a1\n 29375: a1 = u64 [s1 + 0x138]\n 29379: a0 = 0 if a1 == 0\n 29381: a2 = 0 if a1 == 0\n 29383: a3 = u64 [s1 + 0x130]\n 29387: a1 = u64 [s1 + 0x150]\n 29391: a1 = 0 if a3 != 0\n 29393: u64 [s1 + 0x150] = a1\n 29397: a1 = u64 [s1 + 0x158]\n 29401: a1 = 0 if a3 != 0\n 29403: u64 [s1 + 0x158] = a1\n 29407: a2 = 0 if a3 != 0\n 29409: u64 [s1 + 0xe8] = a2\n 29413: a0 = 0 if a3 != 0\n 29415: u64 [s1 + 0xe0] = a0\n 29419: a0 = 0xffffffffffffffff\n 29422: a1 = 0xffffffffffffffff\n 29425: a2 = u64 [s1 + 0xd8]\n 29429: ra = 1114, jump @1260\n      : @935 [@dyn 557] (gas: 6)\n 29435: u64 [s1 + 0xc8] = a0\n 29439: u64 [s1 + 0xd8] = a1\n 29443: a0 = 0xffffffffffffffff\n 29446: a1 = 0xffffffffffffffff\n 29449: a2 = u64 [s1 + 0x148]\n 29453: ra = 1116, jump @1260\n      : @936 [@dyn 558] (gas: 6)\n 29459: u64 [s1 + 0xb8] = a0\n 29463: u64 [s1 + 0xc0] = a1\n 29467: a0 = 0xffffffffffffffff\n 29470: a1 = 0xffffffffffffffff\n 29473: a2 = u64 [s1 + 0xd0]\n 29477: ra = 1118, jump @1255\n      : @937 [@dyn 559] (gas: 18)\n 29483: a4 = u64 [s1 + 0xb8]\n 29487: a4 = a4 | a0\n 29490: a3 = u64 [s1 + 0x138]\n 29494: a0 = u64 [s1 + 0xc8]\n 29498: a4 = a0 if a3 == 0\n 29501: a2 = u64 [s1 + 0x140]\n 29505: a4 = 0xffffffffffffffff if a2 == 0\n 29508: u64 [s1 + 0xd0] = a4\n 29512: a4 = u64 [s1 + 0xc0]\n 29516: a4 = a4 | a1\n 29519: a1 = u64 [s1 + 0xd8]\n 29523: a4 = a1 if a3 == 0\n 29526: a4 = 0xffffffffffffffff if a2 == 0\n 29529: u64 [s1 + 0x140] = a4\n 29533: a0 = 0xffffffffffffffff\n 29536: a1 = 0xffffffffffffffff\n 29539: a2 = u64 [s1 + 0x148]\n 29543: ra = 1120, jump @1260\n      : @938 [@dyn 560] (gas: 46)\n 29549: a2 = u64 [s1 + 0x138]\n 29553: a0 = 0 if a2 == 0\n 29555: a1 = 0 if a2 == 0\n 29557: a2 = u64 [s1 + 0x140]\n 29561: a2 = a2 ^ 0xffffffffffffffff\n 29564: a3 = u64 [s1 + 0xd0]\n 29568: a3 = a3 ^ 0xffffffffffffffff\n 29571: a1 = a1 ^ 0xffffffffffffffff\n 29574: a0 = a0 ^ 0xffffffffffffffff\n 29577: a5 = u64 [s1 + 0x130]\n 29581: a3 = 0xffffffffffffffff if a5 != 0\n 29584: a2 = 0xffffffffffffffff if a5 != 0\n 29587: a0 = 0xffffffffffffffff if a5 != 0\n 29590: a1 = 0xffffffffffffffff if a5 != 0\n 29593: a4 = u64 [s1 + 0xf0]\n 29597: a2 = a2 & a4\n 29600: a4 = u64 [s1 + 0xf8]\n 29604: a3 = a3 & a4\n 29607: a5 = s1 + 0x100\n 29611: a4 = u64 [a5]\n 29613: a1 = a1 & a4\n 29616: a4 = u64 [a5 + 0x8]\n 29619: a0 = a0 & a4\n 29622: a4 = u64 [a5 + 0x58]\n 29625: a3 = a3 | a4\n 29628: a4 = u64 [a5 + 0x50]\n 29631: a2 = a2 | a4\n 29634: a4 = u64 [s1 + 0xe0]\n 29638: a0 = a0 | a4\n 29641: a4 = u64 [s1 + 0xe8]\n 29645: a1 = a1 | a4\n 29648: a4 = u64 [a5 + 0x18]\n 29651: u64 [s1 + 0x418] = a4\n 29655: a4 = u64 [a5 + 0x20]\n 29658: u64 [s1 + 0x410] = a4\n 29662: a4 = u64 [a5 + 0x28]\n 29665: u64 [s1 + 0x408] = a4\n 29669: a4 = u64 [a5 + 0x10]\n 29672: u64 [s1 + 0x400] = a4\n 29676: u64 [s1 + 0x3e8] = a1\n 29680: u64 [s1 + 0x3e0] = a0\n 29684: u64 [s1 + 0x3f8] = a2\n 29688: a0 = s1 + 0x400\n 29692: a1 = s1 + 0x3e0\n 29696: u64 [s1 + 0x3f0] = a3\n 29700: ra = 1122, jump @16\n      : @939 [@dyn 561] (gas: 3)\n 29706: a0 = s1 + 0x3c0\n 29710: a1 = 0x40\n 29713: ra = 1124, jump @10\n      : @940 [@dyn 562] (gas: 6)\n 29719: a3 = s1 + 0x300\n 29723: a0 = u64 [a3 + 0xd8]\n 29727: a1 = u64 [a3 + 0xd0]\n 29731: a2 = u64 [a3 + 0xc8]\n 29735: a4 = u64 [a3 + 0xc0]\n 29739: t0 = 1126, jump @1241\n      : @941 [@dyn 563] (gas: 1)\n 29745: jump @943 if a0 == 0\n      : @942 (gas: 1)\n 29748: jump @747\n      : @943 (gas: 13)\n 29751: a3 = a4\n 29753: a0 = u64 [s1 + 0x98]\n 29757: u64 [s1 + 0x3a0] = a0\n 29761: a0 = u64 [s1 + 0xa0]\n 29765: u64 [s1 + 0x3a8] = a0\n 29769: a0 = u64 [s1 + 0xa8]\n 29773: u64 [s1 + 0x3b0] = a0\n 29777: a1 = s1 + 0x3a0\n 29781: a0 = u64 [s1 + 0xb0]\n 29785: u64 [s1 + 0x3b8] = a0\n 29789: a0 = a4\n 29791: u64 [s1 + 0x158] = a3\n 29795: ra = 1128, jump @12\n      : @944 [@dyn 564] (gas: 46)\n 29801: a0 = s1 + 0x4000\n 29805: i32 a0 = a0 + 0xfffffffffffffb40\n 29809: ecalli 3 // 'caller'\n 29811: a2 = s1 + 0x38d8\n 29815: a3 = a2 + 0x200\n 29819: a0 = u64 [a3 + 0x70]\n 29822: a1 = i32 [a3 + 0x78]\n 29825: a2 = u64 [a3 + 0x68]\n 29828: a3 = reverse a0\n 29830: a0 = a3 << 0x20\n 29833: a1 = reverse a1\n 29835: a1 = a1 >> 0x20\n 29838: t0 = a1 | a0\n 29841: a3 = a3 >> 0x20\n 29844: a2 = reverse a2\n 29846: a1 = a2 << 0x20\n 29849: a1 = a1 | a3\n 29852: a2 = a2 >> 0x20\n 29855: u64 [s1 + 856] = 0\n 29859: a0 = u64 [s1 + 0x78]\n 29862: u64 [s1 + 0x378] = a0\n 29866: a0 = u64 [s1 + 0x80]\n 29870: u64 [s1 + 0x370] = a0\n 29874: a0 = u64 [s1 + 0x88]\n 29878: u64 [s1 + 0x368] = a0\n 29882: a0 = u64 [s1 + 0x90]\n 29886: u64 [s1 + 0x360] = a0\n 29890: a3 = u64 [0x200c8]\n 29895: a4 = u64 [0x200d0]\n 29900: a5 = u64 [0x200d8]\n 29905: a0 = u64 [0x200e0]\n 29910: u64 [s1 + 0x398] = a3\n 29914: a3 = s1 + 0x300\n 29918: u64 [a3 + 0x90] = a4\n 29922: u64 [a3 + 0x88] = a5\n 29926: u64 [a3 + 0x80] = a0\n 29930: u64 [a3 + 0x50] = a2\n 29933: u64 [a3 + 0x48] = a1\n 29936: a1 = 0x20\n 29939: a2 = s1 + 0x380\n 29943: a3 = s1 + 0x360\n 29947: a4 = s1 + 0x340\n 29951: u64 [s1 + 0x340] = t0\n 29955: a0 = u64 [s1 + 0x158]\n 29959: ra = 0x4d6\n 29963: jump @19\n      : @945 (gas: 3)\n 29966: a0 = 0\n 29968: a1 = 0\n 29970: ra = 1130, jump @0\n      : @946 [@dyn 565] (gas: 7)\n 29976: i32 a1 = a0 + 0\n 29978: a0 = 0x1\n 29981: a2 = 0\n 29983: ecalli 8 // 'seal_return'\n 29985: t0 = 0x46c\n 29989: a2 = s1 + 0x30d8\n 29993: jump @948\n      : @947 (gas: 3)\n 29995: t0 = 0x46c\n 29999: a2 = s1 + 0x30d8\n 30003: fallthrough\n      : @948 [@dyn 566] (gas: 12)\n 30004: a0 = u64 [s1 + 0x158]\n 30008: a3 = a2 + 0x500\n 30012: u64 [a3 + 0xa8] = a0\n 30016: a0 = u64 [s1 + 0x150]\n 30020: u64 [a3 + 0xb0] = a0\n 30024: a0 = u64 [s1 + 0x148]\n 30028: u64 [a3 + 0xb8] = a0\n 30032: a1 = s1 + 0x3680\n 30036: a0 = u64 [s1 + 0x140]\n 30040: u64 [a3 + 0xc0] = a0\n 30044: a0 = 0\n 30046: ra = 1134, jump @12\n      : @949 [@dyn 567] (gas: 3)\n 30052: t0 = 0x470\n 30056: a2 = s1 + 0x30d8\n 30060: fallthrough\n      : @950 [@dyn 568] (gas: 7)\n 30061: u64 [a2 + 1440] = 0\n 30065: u64 [a2 + 1432] = 0\n 30069: u64 [a2 + 1416] = 0x6\n 30074: a0 = 0x20\n 30077: a1 = s1 + 0x3660\n 30081: u64 [a2 + 1424] = 0\n 30085: ra = 1138, jump @12\n      : @951 [@dyn 569] (gas: 3)\n 30091: a1 = 0x40\n 30094: a0 = 0\n 30096: ra = 1140, jump @0\n      : @952 [@dyn 570] (gas: 1)\n 30102: t0 = 1142, jump @1205\n      : @953 [@dyn 571] (gas: 4)\n 30108: ra = 0x478\n 30112: ecalli 6 // 'hash_keccak_256'\n 30114: t0 = 0x47a\n 30118: jump @1203\n      : @954 [@dyn 572] (gas: 1)\n 30121: t0 = 1146, jump @1203\n      : @955 [@dyn 573] (gas: 11)\n 30127: u64 [a2 + 1408] = 0\n 30131: a0 = u64 [s1 + 0x128]\n 30135: a3 = a2 + 0x500\n 30139: u64 [a3 + 0x78] = a0\n 30142: a0 = u64 [s1 + 0x130]\n 30146: u64 [a3 + 0x70] = a0\n 30149: a1 = s1 + 0x3640\n 30153: a0 = u64 [s1 + 0x138]\n 30157: u64 [a3 + 0x68] = a0\n 30160: a0 = 0\n 30162: ra = 1148, jump @12\n      : @956 [@dyn 574] (gas: 4)\n 30168: t0 = 0x47e\n 30172: a2 = s1 + 0x30d8\n 30176: a0 = u64 [s1 + 0x108]\n 30180: fallthrough\n      : @957 [@dyn 575] (gas: 11)\n 30181: a4 = a2 + 0x500\n 30185: u64 [a4 + 0x60] = a0\n 30188: a0 = u64 [s1 + 0x110]\n 30192: u64 [a4 + 0x58] = a0\n 30195: a0 = u64 [s1 + 0x118]\n 30199: u64 [a4 + 0x50] = a0\n 30202: a0 = 0x20\n 30205: a1 = s1 + 0x3620\n 30209: a3 = u64 [s1 + 0x120]\n 30213: u64 [a4 + 0x48] = a3\n 30216: ra = 1152, jump @12\n      : @958 [@dyn 576] (gas: 3)\n 30222: a1 = 0x40\n 30225: a0 = 0\n 30227: ra = 1154, jump @0\n      : @959 [@dyn 577] (gas: 1)\n 30233: t0 = 1156, jump @1205\n      : @960 [@dyn 578] (gas: 23)\n 30239: ecalli 6 // 'hash_keccak_256'\n 30241: a3 = u64 [s1 + 0x120]\n 30245: a0 = u64 [a3 + 0x18]\n 30248: a1 = u64 [a3 + 0x10]\n 30251: a2 = u64 [a3 + 0x8]\n 30254: a3 = u64 [a3]\n 30256: a4 = reverse a0\n 30258: u64 [s1 + 0x108] = a4\n 30262: a0 = reverse a1\n 30264: u64 [s1 + 0x120] = a0\n 30268: a1 = reverse a2\n 30270: u64 [s1 + 0x118] = a1\n 30274: a3 = reverse a3\n 30276: u64 [s1 + 0x110] = a3\n 30280: a2 = s1 + 0x30d8\n 30284: a5 = a2 + 0x500\n 30288: u64 [a5 + 0x20] = a3\n 30291: u64 [a5 + 0x18] = a1\n 30294: u64 [a5 + 0x10] = a0\n 30297: a0 = s1 + 0x3600\n 30301: a1 = s1 + 0x35e0\n 30305: u64 [a5 + 0x8] = a4\n 30308: ra = 1158, jump @14\n      : @961 [@dyn 579] (gas: 23)\n 30314: a5 = s1 + 0x30d8\n 30318: a0 = u64 [a5 + 0x530]\n 30322: a1 = u64 [a5 + 0x528]\n 30326: a2 = u64 [a5 + 0x538]\n 30330: a3 = u64 [a5 + 0x540]\n 30334: a1 = a1 & 0xffffffffffffff00\n 30338: a4 = a1 | 0x1\n 30341: u64 [a5 + 0x4e0] = a3\n 30345: a3 = a5 + 0x400\n 30349: u64 [a3 + 0xd8] = a2\n 30353: u64 [a3 + 0xd0] = a0\n 30357: a0 = u64 [s1 + 0x110]\n 30361: u64 [a5 + 0x500] = a0\n 30365: a0 = u64 [s1 + 0x118]\n 30369: u64 [a3 + 0xf8] = a0\n 30373: a0 = u64 [s1 + 0x120]\n 30377: u64 [a3 + 0xf0] = a0\n 30381: a0 = u64 [s1 + 0x108]\n 30385: u64 [a3 + 0xe8] = a0\n 30389: a0 = s1 + 0x35c0\n 30393: a1 = s1 + 0x35a0\n 30397: u64 [a3 + 0xc8] = a4\n 30401: ra = 1160, jump @16\n      : @962 [@dyn 580] (gas: 1)\n 30407: t0 = 1162, jump @1248\n      : @963 [@dyn 581] (gas: 11)\n 30413: a3 = a2 + 0x400\n 30417: u64 [a3 + 0xc0] = a0\n 30421: a0 = u64 [s1 + 0x148]\n 30425: u64 [a3 + 0xb8] = a0\n 30429: a0 = u64 [s1 + 0x150]\n 30433: u64 [a3 + 0xb0] = a0\n 30437: a1 = s1 + 0x3580\n 30441: a0 = u64 [s1 + 0x158]\n 30445: u64 [a3 + 0xa8] = a0\n 30449: a0 = 0\n 30451: ra = 1164, jump @12\n      : @964 [@dyn 582] (gas: 3)\n 30457: t0 = 0x48e\n 30461: a2 = s1 + 0x30d8\n 30465: fallthrough\n      : @965 [@dyn 583] (gas: 7)\n 30466: u64 [a2 + 1184] = 0\n 30470: u64 [a2 + 1176] = 0\n 30474: u64 [a2 + 1160] = 0x3\n 30479: a0 = 0x20\n 30482: a1 = s1 + 0x3560\n 30486: u64 [a2 + 1168] = 0\n 30490: ra = 1168, jump @12\n      : @966 [@dyn 584] (gas: 3)\n 30496: a1 = 0x40\n 30499: a0 = 0\n 30501: ra = 1170, jump @0\n      : @967 [@dyn 585] (gas: 1)\n 30507: t0 = 1172, jump @1205\n      : @968 [@dyn 586] (gas: 32)\n 30513: ecalli 6 // 'hash_keccak_256'\n 30515: a3 = u64 [s1 + 0x120]\n 30519: a0 = u64 [a3]\n 30521: a1 = u64 [a3 + 0x8]\n 30524: a2 = u64 [a3 + 0x10]\n 30527: a3 = u64 [a3 + 0x18]\n 30530: a0 = reverse a0\n 30532: a1 = reverse a1\n 30534: a2 = reverse a2\n 30536: a3 = reverse a3\n 30538: a4 = a3 + 0x1\n 30541: a3 = a4 <u 0x1\n 30544: a3 = a3 + a2\n 30547: a2 = a4 | a3\n 30550: a2 = a2 <u 0x1\n 30553: a5 = a1 + a2\n 30556: a1 = a5 <u a1\n 30559: t0 = a0 + a1\n 30562: a1 = s1 + 0x100\n 30566: u64 [a1 + 0x20] = a4\n 30569: a2 = s1 + 0x30d8\n 30573: a0 = a2 + 0x400\n 30577: u64 [a0 + 0x48] = a4\n 30580: u64 [a1 + 0x18] = a3\n 30583: u64 [a0 + 0x50] = a3\n 30586: u64 [a1 + 0x10] = a5\n 30589: u64 [a0 + 0x58] = a5\n 30592: a0 = s1 + 0x3540\n 30596: a1 = s1 + 0x3520\n 30600: u64 [s1 + 0x108] = t0\n 30604: u64 [a2 + 0x460] = t0\n 30608: ra = 1174, jump @14\n      : @969 [@dyn 587] (gas: 12)\n 30614: a1 = s1 + 0x30d8\n 30618: a3 = a1 + 0x400\n 30622: a2 = u64 [a3 + 0x80]\n 30626: a0 = u64 [a3 + 0x78]\n 30629: a1 = u64 [a3 + 0x70]\n 30632: a3 = a0\n 30634: a4 = a2\n 30636: a0 = a0 | a2\n 30639: a2 = a1\n 30641: a1 = a1 <u 0x1\n 30644: a1 = 0 if a0 != 0\n 30646: jump @990 if a1 != 0\n      : @970 (gas: 8)\n 30650: a0 = s1 + 0x30d8\n 30654: u64 [a0 + 664] = 0\n 30658: u64 [a0 + 656] = 0\n 30662: u64 [a0 + 648] = 0\n 30666: a2 = a0\n 30668: t0 = 0x498\n 30672: a0 = 0x4e487b7100000000\n 30682: fallthrough\n      : @971 [@dyn 588] (gas: 4)\n 30683: a1 = s1 + 0x3360\n 30687: u64 [a2 + 0x2a0] = a0\n 30691: a0 = 0\n 30693: ra = 1178, jump @12\n      : @972 [@dyn 589] (gas: 9)\n 30699: a1 = s1 + 0x30d8\n 30703: u64 [a1 + 640] = 0\n 30707: u64 [a1 + 632] = 0\n 30711: u64 [a1 + 616] = 0x41\n 30716: a2 = a1\n 30718: a0 = 0x4\n 30721: a1 = s1 + 0x3340\n 30725: u64 [a2 + 624] = 0\n 30729: ra = 1180, jump @12\n      : @973 [@dyn 590] (gas: 3)\n 30735: a1 = 0x24\n 30738: a0 = 0\n 30740: ra = 1182, jump @0\n      : @974 [@dyn 591] (gas: 1)\n 30746: t0 = 1184, jump @1247\n      : @975 [@dyn 592] (gas: 2)\n 30752: ecalli 8 // 'seal_return'\n 30754: fallthrough\n      : @976 (gas: 11)\n 30755: a0 = u64 [s1 + 0x158]\n 30759: u64 [a2 + 0x48] = a0\n 30762: a0 = u64 [s1 + 0x150]\n 30766: u64 [a2 + 0x50] = a0\n 30769: a0 = u64 [s1 + 0x148]\n 30773: u64 [a2 + 0x58] = a0\n 30776: a1 = s1 + 0x3120\n 30780: a0 = u64 [s1 + 0x140]\n 30784: u64 [a2 + 0x60] = a0\n 30787: a0 = 0\n 30789: ra = 1186, jump @12\n      : @977 [@dyn 593] (gas: 3)\n 30795: t0 = 0x4a4\n 30799: a2 = s1 + 0x30d8\n 30803: fallthrough\n      : @978 [@dyn 594] (gas: 7)\n 30804: u64 [a2 + 64] = 0\n 30807: u64 [a2 + 56] = 0\n 30810: u64 [a2 + 40] = 0x6\n 30814: a0 = 0x20\n 30817: a1 = s1 + 0x3100\n 30821: u64 [a2 + 48] = 0\n 30824: ra = 1190, jump @12\n      : @979 [@dyn 595] (gas: 3)\n 30830: a1 = 0x40\n 30833: a0 = 0\n 30835: ra = 1192, jump @0\n      : @980 [@dyn 596] (gas: 1)\n 30841: t0 = 1194, jump @1205\n      : @981 [@dyn 597] (gas: 4)\n 30847: ra = 0x4ac\n 30851: ecalli 6 // 'hash_keccak_256'\n 30853: t0 = 0x4ae\n 30857: jump @1203\n      : @982 [@dyn 598] (gas: 1)\n 30860: t0 = 1198, jump @1203\n      : @983 [@dyn 599] (gas: 10)\n 30866: u64 [a2 + 32] = 0\n 30869: a0 = u64 [s1 + 0x128]\n 30873: u64 [a2 + 0x18] = a0\n 30876: a0 = u64 [s1 + 0x130]\n 30880: u64 [a2 + 0x10] = a0\n 30883: a1 = s1 + 0x30e0\n 30887: a0 = u64 [s1 + 0x138]\n 30891: u64 [a2 + 0x8] = a0\n 30894: a0 = 0\n 30896: ra = 1200, jump @12\n      : @984 [@dyn 600] (gas: 13)\n 30902: a0 = u64 [s1 + 0x108]\n 30906: a1 = s1 + 0x30d8\n 30910: u64 [a1] = a0\n 30912: a0 = u64 [s1 + 0x110]\n 30916: u64 [a1 + 0xfffffffffffffff8] = a0\n 30919: a0 = u64 [s1 + 0x118]\n 30923: u64 [a1 + 0xfffffffffffffff0] = a0\n 30926: a3 = a1\n 30928: a0 = 0x20\n 30931: a1 = s1 + 0x30c0\n 30935: a2 = u64 [s1 + 0x120]\n 30939: u64 [a3 + 0xffffffffffffffe8] = a2\n 30942: ra = 1202, jump @12\n      : @985 [@dyn 601] (gas: 3)\n 30948: a1 = 0x40\n 30951: a0 = 0\n 30953: ra = 1204, jump @0\n      : @986 [@dyn 602] (gas: 1)\n 30959: t0 = 1206, jump @1205\n      : @987 [@dyn 603] (gas: 23)\n 30965: ecalli 6 // 'hash_keccak_256'\n 30967: a3 = u64 [s1 + 0x120]\n 30971: a0 = u64 [a3 + 0x18]\n 30974: a1 = u64 [a3 + 0x10]\n 30977: a2 = u64 [a3 + 0x8]\n 30980: a3 = u64 [a3]\n 30982: a4 = reverse a0\n 30984: u64 [s1 + 0x120] = a4\n 30988: a1 = reverse a1\n 30990: u64 [s1 + 0x118] = a1\n 30994: a2 = reverse a2\n 30996: u64 [s1 + 0x110] = a2\n 31000: a3 = reverse a3\n 31002: u64 [s1 + 0x108] = a3\n 31006: a5 = s1 + 0x28d8\n 31010: u64 [a5 + 0x7c0] = a3\n 31014: a3 = a5 + 0x700\n 31018: u64 [a3 + 0xb8] = a2\n 31022: u64 [a3 + 0xb0] = a1\n 31026: a0 = s1 + 0x30a0\n 31030: a1 = s1 + 0x3080\n 31034: u64 [a3 + 0xa8] = a4\n 31038: ra = 1208, jump @14\n      : @988 [@dyn 604] (gas: 22)\n 31044: a4 = s1 + 0x28d8\n 31048: a5 = a4 + 0x700\n 31052: a0 = u64 [a5 + 0xd0]\n 31056: a1 = u64 [a5 + 0xd8]\n 31060: a2 = u64 [a5 + 0xc8]\n 31064: a3 = u64 [a5 + 0xe0]\n 31068: a2 = a2 & 0xffffffffffffff00\n 31072: u64 [a5 + 0x80] = a3\n 31076: u64 [a5 + 0x78] = a1\n 31079: u64 [a5 + 0x70] = a0\n 31082: u64 [a5 + 0x68] = a2\n 31085: a0 = u64 [s1 + 0x108]\n 31089: u64 [a5 + 0xa0] = a0\n 31093: a0 = u64 [s1 + 0x110]\n 31097: u64 [a5 + 0x98] = a0\n 31101: a0 = u64 [s1 + 0x118]\n 31105: u64 [a5 + 0x90] = a0\n 31109: a0 = s1 + 0x3060\n 31113: a1 = s1 + 0x3040\n 31117: a2 = u64 [s1 + 0x120]\n 31121: u64 [a5 + 0x88] = a2\n 31125: ra = 1210, jump @16\n      : @989 [@dyn 605] (gas: 34)\n 31131: a4 = s1 + 0x28d8\n 31135: u64 [a4 + 1824] = 0\n 31139: a5 = s1 + 0x100\n 31143: a0 = u64 [a5 + 0x28]\n 31146: u64 [a4 + 0x718] = a0\n 31150: a0 = u64 [a5 + 0x30]\n 31153: u64 [a4 + 0x710] = a0\n 31157: a0 = u64 [a5 + 0x38]\n 31160: u64 [a4 + 0x708] = a0\n 31164: a0 = u64 [a5 + 0x40]\n 31167: u64 [a4 + 0x740] = a0\n 31171: a0 = u64 [a5 + 0x48]\n 31174: u64 [a4 + 0x738] = a0\n 31178: a0 = u64 [a5 + 0x50]\n 31181: u64 [a4 + 0x730] = a0\n 31185: a0 = u64 [0x20030]\n 31190: a1 = u64 [0x20038]\n 31195: a2 = u64 [0x20040]\n 31200: a3 = u64 [a5 + 0x58]\n 31203: a5 = a4 + 0x700\n 31207: u64 [a5 + 0x28] = a3\n 31210: u64 [a5 + 0x60] = a0\n 31213: u64 [a5 + 0x58] = a1\n 31216: u64 [a5 + 0x50] = a2\n 31219: a1 = a4\n 31221: a0 = u64 [0x20048]\n 31226: a2 = s1 + 0x3020\n 31230: a3 = s1 + 0x3000\n 31234: a4 = s1 + 0x2fe0\n 31238: u64 [a1 + 0x748] = a0\n 31242: a0 = 0\n 31244: a1 = 0\n 31246: ra = 0x4d6\n 31250: jump @19\n      : @990 (gas: 32)\n 31253: t0 = s1 + 0x30d8\n 31257: a5 = t0 + 0x400\n 31261: a1 = u64 [a5 + 0x68]\n 31264: u64 [s1 + 0x100] = a1\n 31268: a0 = 0xffffffff\n 31278: u64 [s1 + 0xf8] = a0\n 31282: a0 = a1 + 0x1\n 31285: a1 = a0 <u 0x1\n 31288: u64 [s1 + 0xf0] = a2\n 31292: a1 = a1 + a2\n 31295: a2 = a0 | a1\n 31298: a2 = a2 <u 0x1\n 31301: u64 [s1 + 0xe8] = a3\n 31305: a2 = a2 + a3\n 31308: a3 = a2 <u a3\n 31311: u64 [s1 + 0xe0] = a4\n 31315: a3 = a3 + a4\n 31318: a4 = u64 [s1 + 0x120]\n 31322: u64 [a5 + 0x28] = a4\n 31325: u64 [a5 + 0x8] = a0\n 31328: a0 = u64 [s1 + 0x118]\n 31332: u64 [a5 + 0x30] = a0\n 31335: a0 = u64 [s1 + 0x110]\n 31339: u64 [a5 + 0x38] = a0\n 31342: u64 [a5 + 0x10] = a1\n 31345: a0 = u64 [s1 + 0x108]\n 31349: u64 [a5 + 0x40] = a0\n 31352: u64 [a5 + 0x18] = a2\n 31355: a0 = s1 + 0x3500\n 31359: a1 = s1 + 0x34e0\n 31363: u64 [a5 + 0x20] = a3\n 31366: ra = 1212, jump @16\n      : @991 [@dyn 606] (gas: 23)\n 31372: a0 = s1 + 0x30d8\n 31376: a1 = u64 [s1 + 0xe0]\n 31380: a2 = a0 + 0x300\n 31384: u64 [a2 + 0xa0] = a1\n 31388: a1 = u64 [s1 + 0xe8]\n 31392: u64 [a2 + 0x98] = a1\n 31396: a1 = u64 [s1 + 0xf0]\n 31400: u64 [a2 + 0x90] = a1\n 31404: a1 = u64 [s1 + 0x100]\n 31408: u64 [a2 + 0x88] = a1\n 31412: a1 = u64 [s1 + 0x108]\n 31416: u64 [a2 + 0xc0] = a1\n 31420: a1 = u64 [s1 + 0x110]\n 31424: u64 [a2 + 0xb8] = a1\n 31428: a1 = u64 [s1 + 0x118]\n 31432: u64 [a2 + 0xb0] = a1\n 31436: a4 = a0\n 31438: a0 = s1 + 0x34a0\n 31442: a1 = s1 + 0x3480\n 31446: a2 = s1 + 0x3460\n 31450: a3 = u64 [s1 + 0x120]\n 31454: u64 [a4 + 0x3a8] = a3\n 31458: ra = 1214, jump @1161\n      : @992 [@dyn 607] (gas: 26)\n 31464: a0 = s1 + 0x30d8\n 31468: a1 = u64 [a0 + 0x400]\n 31472: u64 [s1 + 0x118] = a1\n 31476: a5 = a0 + 0x300\n 31480: a1 = u64 [a5 + 0xf8]\n 31484: u64 [s1 + 0x110] = a1\n 31488: a1 = u64 [a5 + 0xf0]\n 31492: u64 [s1 + 0x108] = a1\n 31496: a1 = u64 [a5 + 0xe8]\n 31500: u64 [s1 + 0x120] = a1\n 31504: a2 = u64 [a5 + 0xc8]\n 31508: u64 [s1 + 0xd0] = a2\n 31512: a1 = u64 [a5 + 0xd0]\n 31516: u64 [s1 + 0xe8] = a1\n 31520: a3 = u64 [a5 + 0xd8]\n 31524: u64 [s1 + 0xe0] = a3\n 31528: a4 = u64 [a5 + 0xe0]\n 31532: u64 [s1 + 0xd8] = a4\n 31536: u64 [a5 + 0x60] = a4\n 31539: u64 [a5 + 0x58] = a3\n 31542: u64 [a5 + 0x50] = a1\n 31545: a3 = a0\n 31547: a0 = s1 + 0x3440\n 31551: a1 = s1 + 0x3420\n 31555: u64 [a3 + 0x348] = a2\n 31559: ra = 1216, jump @14\n      : @993 [@dyn 608] (gas: 26)\n 31565: a0 = s1 + 0x30d8\n 31569: a2 = a0 + 0x300\n 31573: a1 = u64 [a2 + 0x68]\n 31576: u64 [s1 + 0xc8] = a1\n 31580: a1 = u64 [a2 + 0x70]\n 31583: u64 [s1 + 0xc0] = a1\n 31587: a1 = u64 [a2 + 0x78]\n 31590: u64 [s1 + 0xb8] = a1\n 31594: a0 = u64 [a2 + 0x80]\n 31598: u64 [s1 + 0xb0] = a0\n 31602: a5 = u64 [s1 + 0x120]\n 31606: a0 = a5 >> 0x3d\n 31609: a2 = u64 [s1 + 0x108]\n 31613: a1 = a2 << 0x3\n 31616: a0 = a0 | a1\n 31619: a1 = a2 >> 0x3d\n 31622: a3 = u64 [s1 + 0x110]\n 31626: a2 = a3 << 0x3\n 31629: a1 = a1 | a2\n 31632: a2 = a3 >> 0x3d\n 31635: a3 = u64 [s1 + 0x118]\n 31639: a3 = a3 << 0x3\n 31642: a2 = a2 | a3\n 31645: a5 = a5 << 0x3\n 31648: u64 [s1 + 0x108] = a5\n 31652: t0 = 1218, jump @1221\n      : @994 [@dyn 609] (gas: 6)\n 31658: u64 [s1 + 0xf0] = a4\n 31662: i32 a2 = a5 + 0xffffffffffffff80\n 31665: u64 [s1 + 0x98] = a2\n 31669: a0 = u64 [s1 + 0x138]\n 31673: a1 = u64 [s1 + 0x130]\n 31677: ra = 1220, jump @1260\n      : @995 [@dyn 610] (gas: 8)\n 31683: u64 [s1 + 0xa8] = a0\n 31687: u64 [s1 + 0x118] = a1\n 31691: a0 = u64 [s1 + 0x120]\n 31695: i32 a2 = a0 << 0x3\n 31698: u64 [s1 + 0x110] = a2\n 31702: a0 = u64 [s1 + 0x128]\n 31706: a1 = 0\n 31708: ra = 1222, jump @1260\n      : @996 [@dyn 611] (gas: 8)\n 31714: u64 [s1 + 0x120] = a0\n 31718: u64 [s1 + 0xa0] = a1\n 31722: a1 = u64 [s1 + 0x108]\n 31726: i32 a2 = 0x80 - a1\n 31730: u64 [s1 + 0x90] = a2\n 31734: a0 = u64 [s1 + 0x138]\n 31738: a1 = u64 [s1 + 0x130]\n 31742: ra = 1224, jump @1255\n      : @997 [@dyn 612] (gas: 20)\n 31748: a3 = u64 [s1 + 0x120]\n 31752: a3 = a3 | a0\n 31755: a2 = u64 [s1 + 0x108]\n 31759: a4 = a2 <u 0x80\n 31763: u64 [s1 + 0x100] = a4\n 31767: a0 = u64 [s1 + 0xa8]\n 31771: a3 = a0 if a4 == 0\n 31774: a0 = u64 [s1 + 0x128]\n 31778: a3 = a0 if a2 == 0\n 31781: u64 [s1 + 0x120] = a3\n 31785: a0 = u64 [s1 + 0xa0]\n 31789: a0 = a0 | a1\n 31792: a1 = u64 [s1 + 0x118]\n 31796: a0 = a1 if a4 == 0\n 31799: a0 = 0 if a2 == 0\n 31801: u64 [s1 + 0x118] = a0\n 31805: a0 = u64 [s1 + 0x138]\n 31809: a1 = u64 [s1 + 0x130]\n 31813: a2 = u64 [s1 + 0x110]\n 31817: ra = 1226, jump @1260\n      : @998 [@dyn 613] (gas: 19)\n 31823: a2 = a1\n 31825: a1 = u64 [s1 + 0x100]\n 31829: a0 = 0 if a1 == 0\n 31831: a2 = 0 if a1 == 0\n 31833: a3 = u64 [s1 + 0xf0]\n 31837: a1 = u64 [s1 + 0x118]\n 31841: a1 = 0 if a3 != 0\n 31843: u64 [s1 + 0x118] = a1\n 31847: a1 = u64 [s1 + 0x120]\n 31851: a1 = 0 if a3 != 0\n 31853: u64 [s1 + 0x120] = a1\n 31857: a2 = 0 if a3 != 0\n 31859: u64 [s1 + 0xa8] = a2\n 31863: a0 = 0 if a3 != 0\n 31865: u64 [s1 + 0xa0] = a0\n 31869: a0 = 0xffffffffffffffff\n 31872: a1 = 0xffffffffffffffff\n 31875: a2 = u64 [s1 + 0x98]\n 31879: ra = 1228, jump @1260\n      : @999 [@dyn 614] (gas: 6)\n 31885: u64 [s1 + 0x88] = a0\n 31889: u64 [s1 + 0x98] = a1\n 31893: a0 = u64 [s1 + 0xf8]\n 31897: a1 = 0\n 31899: a2 = u64 [s1 + 0x110]\n 31903: ra = 1230, jump @1260\n      : @1000 [@dyn 615] (gas: 6)\n 31909: u64 [s1 + 0x78] = a0\n 31912: u64 [s1 + 0x80] = a1\n 31916: a0 = 0xffffffffffffffff\n 31919: a1 = 0xffffffffffffffff\n 31922: a2 = u64 [s1 + 0x90]\n 31926: ra = 1232, jump @1255\n      : @1001 [@dyn 616] (gas: 19)\n 31932: a4 = u64 [s1 + 0x78]\n 31935: a4 = a4 | a0\n 31938: a3 = u64 [s1 + 0x100]\n 31942: a0 = u64 [s1 + 0x88]\n 31946: a4 = a0 if a3 == 0\n 31949: a0 = u64 [s1 + 0xf8]\n 31953: a2 = u64 [s1 + 0x108]\n 31957: a4 = a0 if a2 == 0\n 31960: u64 [s1 + 0xf8] = a4\n 31964: a0 = u64 [s1 + 0x80]\n 31968: a1 = a1 | a0\n 31971: a0 = u64 [s1 + 0x98]\n 31975: a1 = a0 if a3 == 0\n 31978: a1 = 0 if a2 == 0\n 31980: u64 [s1 + 0x108] = a1\n 31984: a0 = 0xffffffffffffffff\n 31987: a1 = 0xffffffffffffffff\n 31990: a2 = u64 [s1 + 0x110]\n 31994: ra = 1234, jump @1260\n      : @1002 [@dyn 617] (gas: 47)\n 32000: a2 = u64 [s1 + 0x100]\n 32004: a0 = 0 if a2 == 0\n 32006: a1 = 0 if a2 == 0\n 32008: a2 = u64 [s1 + 0x108]\n 32012: a2 = a2 ^ 0xffffffffffffffff\n 32015: a3 = u64 [s1 + 0xf8]\n 32019: a3 = a3 ^ 0xffffffffffffffff\n 32022: a1 = a1 ^ 0xffffffffffffffff\n 32025: a0 = a0 ^ 0xffffffffffffffff\n 32028: a5 = u64 [s1 + 0xf0]\n 32032: a3 = 0xffffffffffffffff if a5 != 0\n 32035: a2 = 0xffffffffffffffff if a5 != 0\n 32038: a0 = 0xffffffffffffffff if a5 != 0\n 32041: a1 = 0xffffffffffffffff if a5 != 0\n 32044: a4 = u64 [s1 + 0xb0]\n 32048: a2 = a2 & a4\n 32051: a4 = u64 [s1 + 0xb8]\n 32055: a3 = a3 & a4\n 32058: a4 = u64 [s1 + 0xc0]\n 32062: a1 = a1 & a4\n 32065: a4 = u64 [s1 + 0xc8]\n 32069: a0 = a0 & a4\n 32072: a4 = u64 [s1 + 0x120]\n 32076: a3 = a3 | a4\n 32079: a4 = u64 [s1 + 0x118]\n 32083: a2 = a2 | a4\n 32086: a4 = u64 [s1 + 0xa0]\n 32090: a0 = a0 | a4\n 32093: a4 = u64 [s1 + 0xa8]\n 32097: a1 = a1 | a4\n 32100: a4 = s1 + 0x30d8\n 32104: a5 = u64 [s1 + 0xd8]\n 32108: u64 [a4 + 0x340] = a5\n 32112: a5 = u64 [s1 + 0xe0]\n 32116: u64 [a4 + 0x338] = a5\n 32120: a5 = u64 [s1 + 0xe8]\n 32124: u64 [a4 + 0x330] = a5\n 32128: a5 = u64 [s1 + 0xd0]\n 32132: u64 [a4 + 0x328] = a5\n 32136: a5 = a4 + 0x300\n 32140: u64 [a5 + 0x10] = a1\n 32143: u64 [a5 + 0x8] = a0\n 32146: u64 [a5 + 0x20] = a2\n 32149: a0 = s1 + 0x3400\n 32153: a1 = s1 + 0x33e0\n 32157: u64 [a5 + 0x18] = a3\n 32160: ra = 1236, jump @16\n      : @1003 [@dyn 618] (gas: 33)\n 32166: a4 = s1 + 0x30d8\n 32170: u64 [a4 + 704] = 0\n 32174: a5 = s1 + 0x100\n 32178: a0 = u64 [a5 + 0x28]\n 32181: u64 [a4 + 0x2b8] = a0\n 32185: a0 = u64 [a5 + 0x30]\n 32188: u64 [a4 + 0x2b0] = a0\n 32192: a0 = u64 [a5 + 0x38]\n 32195: u64 [a4 + 0x2a8] = a0\n 32199: a0 = u64 [a5 + 0x40]\n 32202: u64 [a4 + 0x2e0] = a0\n 32206: a0 = u64 [a5 + 0x48]\n 32209: u64 [a4 + 0x2d8] = a0\n 32213: a0 = u64 [a5 + 0x50]\n 32216: u64 [a4 + 0x2d0] = a0\n 32220: a0 = u64 [0x20010]\n 32225: a1 = u64 [0x20018]\n 32230: a2 = u64 [0x20020]\n 32235: a3 = u64 [a5 + 0x58]\n 32238: a5 = a4 + 0x200\n 32242: u64 [a5 + 0xc8] = a3\n 32246: u64 [a4 + 0x300] = a0\n 32250: u64 [a5 + 0xf8] = a1\n 32254: u64 [a5 + 0xf0] = a2\n 32258: a1 = a4\n 32260: a0 = u64 [0x20028]\n 32265: a2 = s1 + 0x33c0\n 32269: a3 = s1 + 0x33a0\n 32273: a4 = s1 + 0x3380\n 32277: u64 [a1 + 0x2e8] = a0\n 32281: a0 = 0\n 32283: a1 = 0\n 32285: ra = 1238, jump @19\n      : @1004 [@dyn 619] (gas: 3)\n 32291: a0 = 0\n 32293: a1 = 0\n 32295: ra = 1240, jump @0\n      : @1005 [@dyn 620] (gas: 7)\n 32301: i32 a1 = a0 + 0\n 32303: a0 = 0\n 32305: a2 = 0\n 32307: ecalli 8 // 'seal_return'\n 32309: t0 = 0x46c\n 32313: a2 = s1 + 0x30d8\n 32317: jump @948\n      : @1006 (gas: 6)\n 32320: u64 [s1 + 400] = 0\n 32324: u64 [s1 + 392] = 0\n 32328: u64 [s1 + 384] = 0\n 32332: t0 = 0x4da\n 32336: a0 = 0x4e487b7100000000\n 32346: fallthrough\n      : @1007 [@dyn 621] (gas: 4)\n 32347: a1 = s1 + 0x180\n 32351: u64 [s1 + 0x198] = a0\n 32355: a0 = 0\n 32357: ra = 1244, jump @12\n      : @1008 [@dyn 622] (gas: 8)\n 32363: u64 [s1 + 376] = 0\n 32367: u64 [s1 + 368] = 0\n 32371: u64 [s1 + 352] = 0x41\n 32376: a0 = 0x4\n 32379: a1 = s1 + 0x160\n 32383: u64 [s1 + 360] = 0\n 32387: ra = 0x49c\n 32391: jump @12\n      : @1009 (gas: 3)\n 32394: a0 = 0\n 32396: ra = 0x46a\n 32400: jump @0\n      : @1010 (gas: 6)\n 32403: u64 [s1 + 464] = 0\n 32407: u64 [s1 + 456] = 0\n 32411: u64 [s1 + 448] = 0\n 32415: t0 = 0x4de\n 32419: a0 = 0x4e487b7100000000\n 32429: fallthrough\n      : @1011 [@dyn 623] (gas: 4)\n 32430: a1 = s1 + 0x1c0\n 32434: u64 [s1 + 0x1d8] = a0\n 32438: a0 = 0\n 32440: ra = 1248, jump @12\n      : @1012 [@dyn 624] (gas: 8)\n 32446: u64 [s1 + 440] = 0\n 32450: u64 [s1 + 432] = 0\n 32454: u64 [s1 + 416] = 0x41\n 32459: a0 = 0x4\n 32462: a1 = s1 + 0x1a0\n 32466: u64 [s1 + 424] = 0\n 32470: ra = 0x49c\n 32474: jump @12\n      : @1013 (gas: 9)\n 32477: a0 = s1 + 0x7ff\n 32481: a0 = a0 + 0xd1\n 32485: u64 [a0 + 864] = 0\n 32489: u64 [a0 + 856] = 0\n 32493: u64 [a0 + 848] = 0\n 32497: a2 = a0\n 32499: t0 = 0x4e2\n 32503: a0 = 0x4e487b7100000000\n 32513: fallthrough\n      : @1014 [@dyn 625] (gas: 5)\n 32514: a1 = s1 + 0x7ff\n 32518: a1 = a1 + 0x421\n 32522: u64 [a2 + 0x368] = a0\n 32526: a0 = 0\n 32528: ra = 1252, jump @12\n      : @1015 [@dyn 626] (gas: 12)\n 32534: a0 = s1 + 0x7ff\n 32538: a0 = a0 + 0xd1\n 32542: u64 [a0 + 840] = 0\n 32546: u64 [a0 + 832] = 0\n 32550: u64 [a0 + 824] = 0\n 32554: a2 = a0\n 32556: a0 = 0x4\n 32559: a1 = s1 + 0x7ff\n 32563: a1 = a1 + 0x401\n 32567: u64 [a2 + 816] = 0\n 32571: ra = 0x49c\n 32575: jump @12\n      : @1016 (gas: 6)\n 32578: u64 [s1 + 528] = 0\n 32582: u64 [s1 + 520] = 0\n 32586: u64 [s1 + 512] = 0\n 32590: t0 = 0x4e6\n 32594: a0 = 0x4e487b7100000000\n 32604: fallthrough\n      : @1017 [@dyn 627] (gas: 4)\n 32605: a1 = s1 + 0x200\n 32609: u64 [s1 + 0x218] = a0\n 32613: a0 = 0\n 32615: ra = 1256, jump @12\n      : @1018 [@dyn 628] (gas: 8)\n 32621: u64 [s1 + 504] = 0\n 32625: u64 [s1 + 496] = 0\n 32629: u64 [s1 + 480] = 0x41\n 32634: a0 = 0x4\n 32637: a1 = s1 + 0x1e0\n 32641: u64 [s1 + 488] = 0\n 32645: ra = 0x49c\n 32649: jump @12\n      : @1019 (gas: 10)\n 32652: a0 = s1 + 0x20d8\n 32656: u64 [a0 + 1336] = 0\n 32660: u64 [a0 + 1328] = 0\n 32664: u64 [a0 + 1320] = 0\n 32668: a2 = a0\n 32670: a0 = 0x4e487b7100000000\n 32680: a1 = s1 + 0x2600\n 32684: u64 [a2 + 0x540] = a0\n 32688: a0 = 0\n 32690: ra = 1258, jump @12\n      : @1020 [@dyn 629] (gas: 10)\n 32696: a1 = s1 + 0x20d8\n 32700: u64 [a1 + 1312] = 0\n 32704: u64 [a1 + 1304] = 0\n 32708: u64 [a1 + 1288] = 0x41\n 32713: a2 = a1\n 32715: a0 = 0x4\n 32718: a1 = s1 + 0x25e0\n 32722: u64 [a2 + 1296] = 0\n 32726: ra = 0x49c\n 32730: jump @12\n      : @1021 (gas: 4)\n 32733: i32 a1 = a5 + 0\n 32735: u64 [s1 + 0x158] = a1\n 32739: a0 = u64 [s1 + 0xb8]\n 32743: ra = 1260, jump @0\n      : @1022 [@dyn 630] (gas: 5)\n 32749: i32 a1 = a0 + 0\n 32751: a0 = 0\n 32753: a2 = u64 [s1 + 0x158]\n 32757: ecalli 8 // 'seal_return'\n 32759: fallthrough\n      : @1023 (gas: 10)\n 32760: a0 = s1 + 0x20d8\n 32764: u64 [a0 + 1496] = 0\n 32768: u64 [a0 + 1488] = 0\n 32772: u64 [a0 + 1480] = 0\n 32776: a2 = a0\n 32778: a0 = 0x4e487b7100000000\n 32788: a1 = s1 + 0x26a0\n 32792: u64 [a2 + 0x5e0] = a0\n 32796: a0 = 0\n 32798: ra = 1262, jump @12\n      : @1024 [@dyn 631] (gas: 10)\n 32804: a1 = s1 + 0x20d8\n 32808: u64 [a1 + 1472] = 0\n 32812: u64 [a1 + 1464] = 0\n 32816: u64 [a1 + 1448] = 0x41\n 32821: a2 = a1\n 32823: a0 = 0x4\n 32826: a1 = s1 + 0x2680\n 32830: u64 [a2 + 1456] = 0\n 32834: ra = 0x49c\n 32838: jump @12\n      : @1025 (gas: 6)\n 32841: u64 [s1 + 688] = 0\n 32845: u64 [s1 + 680] = 0\n 32849: u64 [s1 + 672] = 0\n 32853: t0 = 0x4f0\n 32857: a0 = 0x4e487b7100000000\n 32867: fallthrough\n      : @1026 [@dyn 632] (gas: 4)\n 32868: a1 = s1 + 0x2a0\n 32872: u64 [s1 + 0x2b8] = a0\n 32876: a0 = 0\n 32878: ra = 1266, jump @12\n      : @1027 [@dyn 633] (gas: 8)\n 32884: u64 [s1 + 664] = 0\n 32888: u64 [s1 + 656] = 0\n 32892: u64 [s1 + 640] = 0x41\n 32897: a0 = 0x4\n 32900: a1 = s1 + 0x280\n 32904: u64 [s1 + 648] = 0\n 32908: ra = 0x49c\n 32912: jump @12\n      : @1028 (gas: 6)\n 32915: u64 [s1 + 816] = 0\n 32919: u64 [s1 + 808] = 0\n 32923: u64 [s1 + 800] = 0\n 32927: t0 = 0x4f4\n 32931: a0 = 0x4e487b7100000000\n 32941: fallthrough\n      : @1029 [@dyn 634] (gas: 4)\n 32942: a1 = s1 + 0x320\n 32946: u64 [s1 + 0x338] = a0\n 32950: a0 = 0\n 32952: ra = 1270, jump @12\n      : @1030 [@dyn 635] (gas: 8)\n 32958: u64 [s1 + 792] = 0\n 32962: u64 [s1 + 784] = 0\n 32966: u64 [s1 + 768] = 0x41\n 32971: a0 = 0x4\n 32974: a1 = s1 + 0x300\n 32978: u64 [s1 + 776] = 0\n 32982: ra = 0x49c\n 32986: jump @12\n      : @1031 (gas: 37)\n 32989: sp = sp + 0xffffffffffffff60\n 32993: u64 [sp + 0x98] = ra\n 32997: u64 [sp + 0x90] = s0\n 33001: u64 [sp + 0x88] = s1\n 33005: s0 = sp + 0xa0\n 33009: sp = sp & 0xffffffffffffffe0\n 33012: a4 = u64 [a1]\n 33014: s1 = u64 [a2 + 0x8]\n 33017: ra = u64 [a1 + 0x8]\n 33020: t1 = u64 [a2]\n 33022: a3 = a4 + 0x1f\n 33025: u64 [sp + 0x58] = a4\n 33028: t0 = a3 <u a4\n 33031: a5 = ra + t0\n 33034: u64 [sp + 0x40] = t1\n 33037: t1 = a3 <u t1\n 33040: a3 = a5 ^ s1\n 33043: u64 [sp + 0x48] = s1\n 33046: a4 = a5 <u s1\n 33049: a4 = t1 if a3 == 0\n 33052: t2 = u64 [a1 + 0x10]\n 33055: a3 = a5 <u ra\n 33058: a3 = t0 if t0 == 0\n 33061: t0 = u64 [a2 + 0x18]\n 33064: t1 = u64 [a1 + 0x18]\n 33067: s1 = u64 [a2 + 0x10]\n 33070: a3 = a3 + t2\n 33073: a1 = a3 <u t2\n 33076: a1 = a1 + t1\n 33079: a2 = a1 ^ t0\n 33082: a1 = a1 <s t0\n 33085: a5 = a3 <u s1\n 33088: a1 = a5 if a2 == 0\n 33091: a3 = a3 ^ s1\n 33094: a2 = a2 | a3\n 33097: a4 = a1 if a2 != 0\n 33100: jump @1038 if a4 == 0\n      : @1032 (gas: 14)\n 33104: u64 [sp + 0x28] = t0\n 33107: u64 [sp + 0x30] = s1\n 33110: u64 [sp + 0x38] = a0\n 33113: a0 = u64 [sp + 0x58]\n 33116: a0 = a0 | t2\n 33119: u64 [sp + 0x18] = t1\n 33122: a1 = ra | t1\n 33125: a0 = a0 | a1\n 33128: a0 = a0 >> 0x20\n 33131: u64 [sp + 0x20] = t2\n 33134: a1 = a1 | t2\n 33137: a1 = a1 << 0x20\n 33140: a0 = a0 | a1\n 33143: jump @1037 if a0 != 0\n      : @1033 (gas: 5)\n 33147: s1 = ra\n 33149: a1 = i32 [sp + 0x58]\n 33152: i32 a0 = sp + 0x60\n 33155: ecalli 1 // 'call_data_load'\n 33157: fallthrough\n      : @1034 (gas: 8)\n 33158: t2 = u64 [sp + 0x78]\n 33161: a0 = u64 [sp + 0x70]\n 33164: a2 = u64 [sp + 0x68]\n 33167: u64 [sp + 0x50] = a0\n 33170: a0 = a0 | t2\n 33173: a1 = a2 <u 0x1\n 33176: a1 = 0 if a0 != 0\n 33178: jump @1039 if a1 == 0\n      : @1035 (gas: 46)\n 33182: a1 = u64 [sp + 0x60]\n 33185: a0 = u64 [sp + 0x58]\n 33188: a4 = a0 + 0x20\n 33191: a3 = a4 <u a0\n 33194: t1 = s1 + a3\n 33197: u64 [sp + 0x8] = a1\n 33200: a1 = a1 + a4\n 33203: t0 = a1 <u a4\n 33206: u64 [sp + 0x10] = a2\n 33209: a2 = a2 + t1\n 33212: a2 = a2 + t0\n 33215: a5 = a2 ^ t1\n 33218: a0 = a2 <u t1\n 33221: a0 = t0 if a5 == 0\n 33224: a5 = t1 <u s1\n 33227: a5 = a3 if a3 == 0\n 33230: a3 = u64 [sp + 0x20]\n 33233: ra = a3 + a5\n 33236: s1 = ra <u a3\n 33239: t0 = u64 [sp + 0x18]\n 33242: t0 = t0 + s1\n 33245: s1 = u64 [sp + 0x48]\n 33248: a5 = a2 ^ s1\n 33251: a2 = s1 <u a2\n 33254: s1 = u64 [sp + 0x40]\n 33257: a1 = s1 <u a1\n 33260: a1 = a2 if a5 != 0\n 33263: a2 = u64 [sp + 0x50]\n 33266: a2 = a2 + ra\n 33269: a5 = a2 <u ra\n 33272: u64 [sp + 0x58] = t2\n 33275: s1 = t0 + t2\n 33278: a5 = a5 + s1\n 33281: a0 = a0 + a2\n 33284: a2 = a0 <u a2\n 33287: a2 = a2 + a5\n 33290: s1 = u64 [sp + 0x28]\n 33293: a5 = a2 ^ s1\n 33296: a2 = s1 <u a2\n 33299: t2 = u64 [sp + 0x30]\n 33302: s1 = t2 <u a0\n 33305: s1 = a2 if a5 != 0\n 33308: a0 = a0 ^ t2\n 33311: a0 = a0 | a5\n 33314: a1 = s1 if a0 != 0\n 33317: jump @1038 if a1 != 0\n      : @1036 (gas: 19)\n 33320: a0 = u64 [sp + 0x38]\n 33323: a1 = u64 [sp + 0x8]\n 33326: u64 [a0 + 0x20] = a1\n 33329: u64 [a0] = a4\n 33331: a1 = u64 [sp + 0x10]\n 33334: u64 [a0 + 0x28] = a1\n 33337: u64 [a0 + 0x8] = t1\n 33340: a1 = u64 [sp + 0x50]\n 33343: u64 [a0 + 0x30] = a1\n 33346: u64 [a0 + 0x10] = ra\n 33349: a1 = u64 [sp + 0x58]\n 33352: u64 [a0 + 0x38] = a1\n 33355: u64 [a0 + 0x18] = t0\n 33358: sp = s0 + 0xffffffffffffff60\n 33362: ra = u64 [sp + 0x98]\n 33366: s0 = u64 [sp + 0x90]\n 33370: s1 = u64 [sp + 0x88]\n 33374: sp = sp + 0xa0\n 33378: ret\n      : @1037 (gas: 1)\n 33380: trap\n      : @1038 (gas: 4)\n 33381: a0 = 0\n 33383: a1 = 0\n 33385: ra = 0x4f8\n 33389: jump @0\n      : @1039 (gas: 2)\n 33393: a0 = 0\n 33395: ra = 1272, jump @0\n      : @1040 [@dyn 636] (gas: 7)\n 33402: i32 a1 = a0 + 0\n 33404: a0 = 0x1\n 33407: a2 = 0\n 33409: ra = 0x4fa\n 33413: ecalli 8 // 'seal_return'\n 33415: t0 = 0x4fc\n 33419: jump @1252\n      : @1041 [@dyn 637] (gas: 1)\n 33422: t0 = 1276, jump @1252\n      : @1042 [@dyn 638] (gas: 5)\n 33428: a1 = 0x4\n 33431: ra = 0x4fe\n 33435: ecalli 1 // 'call_data_load'\n 33437: t0 = 0x500\n 33441: jump @1231\n      : @1043 [@dyn 639] (gas: 1)\n 33444: t0 = 1280, jump @1231\n      : @1044 [@dyn 640] (gas: 1)\n 33450: jump @1047 if a3 == 0\n      : @1045 (gas: 1)\n 33453: t0 = 1282, jump @1240\n      : @1046 [@dyn 641] (gas: 1)\n 33459: ret\n      : @1047 (gas: 3)\n 33461: a0 = 0\n 33463: a1 = 0\n 33465: ra = 1284, jump @0\n      : @1048 [@dyn 642] (gas: 7)\n 33472: i32 a1 = a0 + 0\n 33474: a0 = 0x1\n 33477: a2 = 0\n 33479: ra = 0x506\n 33483: ecalli 8 // 'seal_return'\n 33485: t0 = 0x508\n 33489: jump @1252\n      : @1049 [@dyn 643] (gas: 1)\n 33492: t0 = 1288, jump @1252\n      : @1050 [@dyn 644] (gas: 5)\n 33498: a1 = 0x24\n 33501: ra = 0x50a\n 33505: ecalli 1 // 'call_data_load'\n 33507: t0 = 0x50c\n 33511: jump @1231\n      : @1051 [@dyn 645] (gas: 1)\n 33514: t0 = 1292, jump @1231\n      : @1052 [@dyn 646] (gas: 1)\n 33520: jump @1055 if a3 == 0\n      : @1053 (gas: 1)\n 33523: t0 = 1294, jump @1240\n      : @1054 [@dyn 647] (gas: 1)\n 33529: ret\n      : @1055 (gas: 3)\n 33531: a0 = 0\n 33533: a1 = 0\n 33535: ra = 1296, jump @0\n      : @1056 [@dyn 648] (gas: 6)\n 33542: i32 a1 = a0 + 0\n 33544: a0 = 0x1\n 33547: a2 = 0\n 33549: ra = 0x512\n 33553: ecalli 8 // 'seal_return'\n 33555: fallthrough\n      : @1057 [@dyn 649] (gas: 18)\n 33556: sp = sp + 0xfffffffffffffeb0\n 33560: u64 [sp + 0x148] = ra\n 33564: u64 [sp + 0x140] = s0\n 33568: u64 [sp + 0x138] = s1\n 33572: s0 = sp + 0x150\n 33576: sp = sp & 0xfffffffffffffff0\n 33579: a4 = u64 [a1 + 0x10]\n 33582: t0 = u64 [a1 + 0x18]\n 33585: s1 = u64 [a1 + 0x8]\n 33588: a1 = u64 [a1]\n 33590: a5 = s1 | t0\n 33593: a3 = a1 | a4\n 33596: a3 = a3 | a5\n 33599: a3 = a3 >> 0x20\n 33602: a5 = a5 | a4\n 33605: a5 = a5 << 0x20\n 33608: a3 = a3 | a5\n 33611: jump @1074 if a3 != 0\n      : @1058 (gas: 14)\n 33615: u64 [sp + 0x18] = s1\n 33618: u64 [sp + 0x10] = t0\n 33621: u64 [sp + 0x60] = a4\n 33624: u64 [sp] = a0\n 33626: a0 = u64 [a2 + 0x18]\n 33629: u64 [sp + 0x68] = a0\n 33632: s1 = u64 [a2 + 0x10]\n 33635: a0 = u64 [a2 + 0x8]\n 33638: u64 [sp + 0x30] = a0\n 33641: a0 = u64 [a2]\n 33643: u64 [sp + 0x58] = a0\n 33646: a0 = sp + 0x110\n 33650: u64 [sp + 0x20] = a1\n 33653: ra = 1300, jump @10\n      : @1059 [@dyn 650] (gas: 13)\n 33660: a0 = u64 [sp + 0x58]\n 33663: a3 = a0\n 33665: a0 = a0 | s1\n 33668: a1 = u64 [sp + 0x68]\n 33671: a2 = u64 [sp + 0x30]\n 33674: a1 = a1 | a2\n 33677: a0 = a0 | a1\n 33680: a0 = a0 >> 0x20\n 33683: u64 [sp + 0x8] = s1\n 33686: a1 = a1 | s1\n 33689: a1 = a1 << 0x20\n 33692: a0 = a0 | a1\n 33695: jump @1074 if a0 != 0\n      : @1060 (gas: 14)\n 33699: a0 = u64 [sp + 0x128]\n 33703: a1 = u64 [sp + 0x120]\n 33707: a2 = u64 [sp + 0x118]\n 33711: s1 = u64 [sp + 0x110]\n 33715: u64 [sp + 0xf0] = s1\n 33719: u64 [sp + 0x40] = a2\n 33722: u64 [sp + 0xf8] = a2\n 33726: u64 [sp + 0x48] = a1\n 33729: u64 [sp + 0x100] = a1\n 33733: a1 = sp + 0xf0\n 33737: u64 [sp + 0x50] = a0\n 33740: u64 [sp + 0x108] = a0\n 33744: a0 = a3\n 33746: ra = 1302, jump @12\n      : @1061 [@dyn 651] (gas: 39)\n 33753: u64 [sp + 120] = 0\n 33756: u64 [sp + 112] = 0\n 33759: u64 [sp + 128] = 0\n 33763: u64 [sp + 136] = 0\n 33767: a1 = u64 [sp + 0x20]\n 33770: a0 = a1 + 0x20\n 33773: u64 [sp + 0x28] = a0\n 33776: a0 = a0 <u a1\n 33779: a2 = u64 [sp + 0x18]\n 33782: a1 = a2 + a0\n 33785: u64 [sp + 0x20] = a1\n 33788: a1 = a1 <u a2\n 33791: a1 = a0 if a0 == 0\n 33794: a0 = u64 [sp + 0x60]\n 33797: a1 = a1 + a0\n 33800: u64 [sp + 0x18] = a1\n 33803: a0 = a1 <u a0\n 33806: a1 = u64 [sp + 0x10]\n 33809: a0 = a0 + a1\n 33812: u64 [sp + 0x10] = a0\n 33815: a0 = u64 [sp + 0x58]\n 33818: t0 = a0 + 0x20\n 33821: a0 = t0 <u a0\n 33824: a1 = u64 [sp + 0x30]\n 33827: a2 = a1 + a0\n 33830: t1 = a2\n 33832: a1 = a2 <u a1\n 33835: a1 = a0 if a0 == 0\n 33838: a0 = u64 [sp + 0x8]\n 33841: a1 = a1 + a0\n 33844: u64 [sp + 0x30] = a1\n 33847: a0 = a1 <u a0\n 33850: t2 = u64 [sp + 0x68]\n 33853: t2 = t2 + a0\n 33856: u64 [sp + 0x38] = s1\n 33859: u64 [sp + 0x68] = t2\n 33862: u64 [sp + 0x58] = a2\n 33865: u64 [sp + 0x60] = t0\n 33868: fallthrough\n      : @1062 (gas: 19)\n 33869: a0 = u64 [sp + 0x78]\n 33872: a0 = a0 <u s1\n 33875: s1 = u64 [sp + 0x40]\n 33878: a2 = u64 [sp + 0x70]\n 33881: a1 = a2 ^ s1\n 33884: a2 = a2 <u s1\n 33887: a2 = a0 if a1 == 0\n 33890: a4 = u64 [sp + 0x48]\n 33893: a0 = u64 [sp + 0x80]\n 33897: ra = a0 <u a4\n 33900: a5 = u64 [sp + 0x50]\n 33903: a3 = u64 [sp + 0x88]\n 33907: a1 = a3 ^ a5\n 33910: a3 = a3 <u a5\n 33913: a3 = ra if a1 == 0\n 33916: a0 = a0 ^ a4\n 33919: a0 = a0 | a1\n 33922: a3 = a2 if a0 == 0\n 33925: jump @1070 if a3 == 0\n      : @1063 (gas: 30)\n 33929: a0 = u64 [sp + 0x28]\n 33932: a1 = u64 [sp + 0x78]\n 33935: a1 = a1 + a0\n 33938: a0 = a1 <u a0\n 33941: a4 = u64 [sp + 0x20]\n 33944: a2 = u64 [sp + 0x70]\n 33947: a2 = a2 + a4\n 33950: a2 = a2 + a0\n 33953: a3 = a2 ^ a4\n 33956: a4 = a2 <u a4\n 33959: a4 = a0 if a3 == 0\n 33962: a0 = u64 [sp + 0x80]\n 33966: a3 = u64 [sp + 0x18]\n 33969: a0 = a0 + a3\n 33972: a3 = a0 <u a3\n 33975: a5 = u64 [sp + 0x88]\n 33979: s1 = u64 [sp + 0x10]\n 33982: a5 = a5 + s1\n 33985: a3 = a3 + a5\n 33988: a4 = a4 + a0\n 33991: a0 = a4 <u a0\n 33994: a0 = a0 + a3\n 33997: a0 = a0 | a2\n 34000: a2 = a1 | a4\n 34003: a2 = a2 | a0\n 34006: a0 = a0 | a4\n 34009: a2 = a2 >> 0x20\n 34012: a0 = a0 << 0x20\n 34015: a0 = a0 | a2\n 34018: jump @1074 if a0 != 0\n      : @1064 (gas: 2)\n 34022: a0 = sp + 0xb0\n 34026: ra = 1304, jump @10\n      : @1065 [@dyn 652] (gas: 24)\n 34033: a1 = u64 [sp + 0x60]\n 34036: a0 = u64 [sp + 0x78]\n 34039: a0 = a0 + a1\n 34042: a1 = a0 <u a1\n 34045: a4 = u64 [sp + 0x58]\n 34048: a2 = u64 [sp + 0x70]\n 34051: a2 = a2 + a4\n 34054: a2 = a2 + a1\n 34057: a3 = a2 ^ a4\n 34060: a4 = a2 <u a4\n 34063: a4 = a1 if a3 == 0\n 34066: a3 = u64 [sp + 0x30]\n 34069: a1 = u64 [sp + 0x80]\n 34073: a1 = a1 + a3\n 34076: a3 = a1 <u a3\n 34079: a5 = u64 [sp + 0x68]\n 34082: s1 = u64 [sp + 0x88]\n 34086: a5 = a5 + s1\n 34089: a3 = a3 + a5\n 34092: a4 = a4 + a1\n 34095: a1 = a4 <u a1\n 34098: a1 = a1 + a3\n 34101: a1 = a1 | a2\n 34104: t0 = 1306, jump @1235\n      : @1066 [@dyn 653] (gas: 2)\n 34110: s1 = u64 [sp + 0x38]\n 34113: jump @1074 if a1 != 0\n      : @1067 (gas: 10)\n 34117: a2 = u64 [sp + 0xc8]\n 34121: a1 = u64 [sp + 0xc0]\n 34125: a3 = u64 [sp + 0xb8]\n 34129: a4 = u64 [sp + 0xb0]\n 34133: u64 [sp + 0x90] = a4\n 34137: u64 [sp + 0x98] = a3\n 34141: u64 [sp + 0xa0] = a1\n 34145: a1 = sp + 0x90\n 34149: u64 [sp + 0xa8] = a2\n 34153: ra = 1308, jump @12\n      : @1068 [@dyn 654] (gas: 5)\n 34160: a1 = u64 [sp + 0x78]\n 34163: a0 = a1 + 0x20\n 34166: a1 = a0 <u a1\n 34169: a3 = u64 [sp + 0x70]\n 34172: t0 = 1310, jump @1243\n      : @1069 [@dyn 655] (gas: 13)\n 34178: a1 = u64 [sp + 0x80]\n 34182: a3 = a3 + a1\n 34185: a1 = a3 <u a1\n 34188: a4 = u64 [sp + 0x88]\n 34192: a4 = a4 + a1\n 34195: u64 [sp + 0x88] = a4\n 34199: u64 [sp + 0x78] = a0\n 34202: u64 [sp + 0x70] = a2\n 34205: u64 [sp + 0x80] = a3\n 34209: t2 = u64 [sp + 0x68]\n 34212: t1 = u64 [sp + 0x58]\n 34215: t0 = u64 [sp + 0x60]\n 34218: jump @1062\n      : @1070 (gas: 24)\n 34221: a0 = u64 [sp + 0x38]\n 34224: a0 = a0 + t0\n 34227: a1 = a0 <u t0\n 34230: a2 = t1 + s1\n 34233: a2 = a2 + a1\n 34236: t0 = a2 ^ t1\n 34239: a3 = a2 <u t1\n 34242: a3 = a1 if t0 == 0\n 34245: t0 = u64 [sp + 0x30]\n 34248: a1 = t0 + a4\n 34251: t0 = a1 <u t0\n 34254: a5 = a5 + t2\n 34257: a5 = a5 + t0\n 34260: a3 = a3 + a1\n 34263: a1 = a3 <u a1\n 34266: a1 = a1 + a5\n 34269: a1 = a1 | a2\n 34272: a2 = a0 | a3\n 34275: a2 = a2 | a1\n 34278: a1 = a1 | a3\n 34281: a2 = a2 >> 0x20\n 34284: a1 = a1 << 0x20\n 34287: a1 = a1 | a2\n 34290: jump @1074 if a1 != 0\n      : @1071 (gas: 7)\n 34294: s1 = t1\n 34296: u64 [sp + 232] = 0\n 34300: u64 [sp + 224] = 0\n 34304: u64 [sp + 216] = 0\n 34308: a1 = sp + 0xd0\n 34312: u64 [sp + 208] = 0\n 34316: ra = 1312, jump @12\n      : @1072 [@dyn 656] (gas: 5)\n 34323: a1 = u64 [sp + 0x38]\n 34326: a0 = a1 + 0x1f\n 34329: a1 = a0 <u a1\n 34332: a3 = u64 [sp + 0x40]\n 34335: t0 = 1314, jump @1243\n      : @1073 [@dyn 657] (gas: 34)\n 34341: a1 = u64 [sp + 0x48]\n 34344: a3 = a3 + a1\n 34347: a1 = a3 <u a1\n 34350: a4 = u64 [sp + 0x50]\n 34353: a1 = a1 + a4\n 34356: a0 = a0 & 0xffffffffffffffe0\n 34359: a4 = u64 [sp + 0x60]\n 34362: a0 = a0 + a4\n 34365: a4 = a0 <u a4\n 34368: a2 = a2 + s1\n 34371: a2 = a2 + a4\n 34374: a5 = a2 ^ s1\n 34377: s1 = a2 <u s1\n 34380: s1 = a4 if a5 == 0\n 34383: a5 = u64 [sp + 0x30]\n 34386: a3 = a3 + a5\n 34389: s1 = s1 + a3\n 34392: a4 = s1 <u a3\n 34395: a3 = a3 <u a5\n 34398: a5 = u64 [sp + 0x68]\n 34401: a1 = a1 + a5\n 34404: a1 = a1 + a3\n 34407: a1 = a1 + a4\n 34410: a3 = u64 [sp]\n 34412: u64 [a3] = a0\n 34414: u64 [a3 + 0x8] = a2\n 34417: u64 [a3 + 0x10] = s1\n 34420: u64 [a3 + 0x18] = a1\n 34423: sp = s0 + 0xfffffffffffffeb0\n 34427: ra = u64 [sp + 0x148]\n 34431: s0 = u64 [sp + 0x140]\n 34435: s1 = u64 [sp + 0x138]\n 34439: sp = sp + 0x150\n 34443: ret\n      : @1074 (gas: 1)\n 34445: trap\n      : @1075 (gas: 33)\n 34446: sp = sp + 0xffffffffffffffa0\n 34449: u64 [sp + 0x58] = ra\n 34452: u64 [sp + 0x50] = s0\n 34455: u64 [sp + 0x48] = s1\n 34458: s0 = sp + 0x60\n 34461: sp = sp & 0xfffffffffffffff0\n 34464: a2 = u64 [a1 + 0x10]\n 34467: a5 = u64 [a1 + 0x8]\n 34470: a4 = u64 [a1]\n 34472: a1 = u64 [a1 + 0x18]\n 34475: t0 = a2 << 0x3f\n 34478: a3 = a5 >> 0x1\n 34481: t0 = a3 | t0\n 34484: a3 = a1 << 0x3f\n 34487: a2 = a2 >> 0x1\n 34490: a3 = a3 | a2\n 34493: a5 = a5 << 0x3f\n 34496: a2 = a4 >> 0x1\n 34499: a5 = a5 | a2\n 34502: t1 = a1 >> 0x1\n 34505: a4 = a4 & 0x1\n 34508: a1 = -a4\n 34510: s1 = a4 <u 0x1\n 34513: a2 = a5 & 0x7f\n 34516: t2 = a1 & a3\n 34519: a3 = a1 & t0\n 34522: a2 = a5 if a4 != 0\n 34525: a4 = a1 & t1\n 34528: a1 = a2 <u 0x20\n 34531: a1 = 0 if a3 != 0\n 34533: a5 = t2 | a4\n 34536: a1 = 0 if a5 != 0\n 34538: jump @1078 if s1 != a1\n      : @1076 (gas: 5)\n 34541: u64 [a0] = a2\n 34543: u64 [a0 + 0x8] = a3\n 34546: u64 [a0 + 0x10] = t2\n 34549: u64 [a0 + 0x18] = a4\n 34552: t0 = 1316, jump @1236\n      : @1077 [@dyn 658] (gas: 1)\n 34558: ret\n      : @1078 (gas: 1)\n 34560: t0 = 1318, jump @1220\n      : @1079 [@dyn 659] (gas: 1)\n 34566: ra = 1320, jump @12\n      : @1080 [@dyn 660] (gas: 7)\n 34573: u64 [sp + 24] = 0\n 34576: u64 [sp + 16] = 0\n 34579: u64 [sp + 0] = 0x22\n 34582: a0 = 0x4\n 34585: a1 = sp\n 34587: u64 [sp + 8] = 0\n 34590: ra = 1322, jump @12\n      : @1081 [@dyn 661] (gas: 3)\n 34597: a1 = 0x24\n 34600: a0 = 0\n 34602: ra = 1324, jump @0\n      : @1082 [@dyn 662] (gas: 1)\n 34609: t0 = 1326, jump @1247\n      : @1083 [@dyn 663] (gas: 3)\n 34615: ra = 0x530\n 34619: ecalli 8 // 'seal_return'\n 34621: fallthrough\n      : @1084 [@dyn 664] (gas: 31)\n 34622: sp = sp + 0xfffffffffffffe00\n 34626: u64 [sp + 0x1f8] = ra\n 34630: u64 [sp + 0x1f0] = s0\n 34634: u64 [sp + 0x1e8] = s1\n 34638: s0 = sp + 0x200\n 34642: sp = sp & 0xffffffffffffffe0\n 34645: s1 = sp\n 34647: a3 = u64 [a2 + 0x10]\n 34650: u64 [s1 + 0x90] = a3\n 34654: a3 = u64 [a2]\n 34656: u64 [s1 + 0x98] = a3\n 34660: a3 = u64 [a2 + 0x18]\n 34663: u64 [s1 + 0x88] = a3\n 34667: a2 = u64 [a2 + 0x8]\n 34670: u64 [s1 + 0x80] = a2\n 34674: a2 = u64 [a1]\n 34676: a3 = u64 [a1 + 0x8]\n 34679: a4 = u64 [a1 + 0x10]\n 34682: a1 = u64 [a1 + 0x18]\n 34685: u64 [s1 + 0x18] = a0\n 34688: u64 [s1 + 0x70] = a1\n 34691: u64 [s1 + 0x1b8] = a1\n 34695: u64 [s1 + 0x38] = a4\n 34698: u64 [s1 + 0x1b0] = a4\n 34702: u64 [s1 + 0x60] = a3\n 34705: u64 [s1 + 0x1a8] = a3\n 34709: a0 = s1 + 0x1c0\n 34713: a1 = s1 + 0x1a0\n 34717: u64 [s1 + 0x68] = a2\n 34720: u64 [s1 + 0x1a0] = a2\n 34724: ra = 1330, jump @14\n      : @1085 [@dyn 665] (gas: 16)\n 34731: a4 = s1 + 0x100\n 34735: a0 = u64 [a4 + 0xd8]\n 34739: a1 = u64 [a4 + 0xd0]\n 34743: a2 = u64 [a4 + 0xc8]\n 34747: a3 = u64 [a4 + 0xc0]\n 34751: u64 [s1 + 0x30] = a0\n 34754: u64 [a4 + 0x78] = a0\n 34757: u64 [s1 + 0x28] = a1\n 34760: u64 [a4 + 0x70] = a1\n 34763: u64 [s1 + 0x20] = a2\n 34766: u64 [a4 + 0x68] = a2\n 34769: a0 = s1 + 0x180\n 34773: a1 = s1 + 0x160\n 34777: u64 [s1 + 0x78] = a3\n 34780: u64 [a4 + 0x60] = a3\n 34783: ra = 1332, jump @1075\n      : @1086 [@dyn 666] (gas: 12)\n 34789: a0 = u64 [s1 + 0x88]\n 34793: a1 = u64 [s1 + 0x80]\n 34797: a0 = a0 | a1\n 34800: a2 = u64 [s1 + 0x90]\n 34804: a1 = u64 [s1 + 0x98]\n 34808: a1 = a1 | a2\n 34811: a1 = a1 | a0\n 34814: a1 = a1 >> 0x20\n 34817: a0 = a0 | a2\n 34820: a0 = a0 << 0x20\n 34823: a0 = a0 | a1\n 34826: jump @1104 if a0 != 0\n      : @1087 (gas: 16)\n 34830: a4 = s1 + 0x100\n 34834: a0 = u64 [a4 + 0x98]\n 34838: a2 = u64 [a4 + 0x90]\n 34842: a1 = u64 [a4 + 0x88]\n 34846: a3 = u64 [a4 + 0x80]\n 34850: u64 [s1 + 0x40] = a3\n 34853: u64 [a4 + 0x40] = a3\n 34856: u64 [s1 + 0x50] = a1\n 34859: u64 [a4 + 0x48] = a1\n 34862: u64 [s1 + 0x48] = a2\n 34865: u64 [a4 + 0x50] = a2\n 34868: a1 = s1 + 0x140\n 34872: u64 [s1 + 0x58] = a0\n 34875: u64 [a4 + 0x58] = a0\n 34878: a0 = u64 [s1 + 0x98]\n 34882: ra = 1334, jump @12\n      : @1088 [@dyn 667] (gas: 3)\n 34889: a3 = u64 [s1 + 0x78]\n 34892: a0 = a3 & 0x1\n 34895: jump @1092 if a0 != 0\n      : @1089 (gas: 10)\n 34899: a0 = u64 [s1 + 0x88]\n 34903: a1 = u64 [s1 + 0x90]\n 34907: a0 = a0 | a1\n 34910: a1 = 0xffffffe0\n 34920: a2 = u64 [s1 + 0x98]\n 34924: a1 = a2 <u a1\n 34927: a2 = u64 [s1 + 0x80]\n 34931: a1 = 0 if a2 != 0\n 34933: a1 = 0 if a0 != 0\n 34935: jump @1104 if a1 == 0\n      : @1090 (gas: 12)\n 34939: a1 = a3 & 0xffffffffffffff00\n 34943: a0 = u64 [s1 + 0x98]\n 34947: i32 a0 = a0 + 0x20\n 34950: a2 = u64 [s1 + 0x20]\n 34953: u64 [s1 + 0xa8] = a2\n 34957: u64 [s1 + 0xa0] = a1\n 34961: a1 = u64 [s1 + 0x28]\n 34964: u64 [s1 + 0xb0] = a1\n 34968: a1 = s1 + 0xa0\n 34972: a2 = u64 [s1 + 0x30]\n 34975: u64 [s1 + 0xb8] = a2\n 34979: ra = 1336, jump @12\n      : @1091 [@dyn 668] (gas: 27)\n 34986: a5 = 0\n 34988: t2 = 0\n 34990: t0 = 0\n 34992: a0 = u64 [s1 + 0x48]\n 34995: a1 = u64 [s1 + 0x40]\n 34998: a0 = a0 | a1\n 35001: a1 = u64 [s1 + 0x58]\n 35004: a2 = u64 [s1 + 0x50]\n 35007: a1 = a1 | a2\n 35010: a0 = a0 | a1\n 35013: a1 = u64 [s1 + 0x98]\n 35017: a3 = a1 + 0x20\n 35020: a1 = a3 <u a1\n 35023: a2 = u64 [s1 + 0x80]\n 35027: a4 = a2 + a1\n 35030: a2 = a4 <u a2\n 35033: a2 = a1 if a1 == 0\n 35036: a1 = u64 [s1 + 0x90]\n 35040: a2 = a2 + a1\n 35043: u64 [s1 + 0x38] = a2\n 35046: a1 = a2 <u a1\n 35049: a2 = u64 [s1 + 0x88]\n 35053: a1 = a1 + a2\n 35056: u64 [s1 + 0x30] = a1\n 35059: a0 = a0 >u 0\n 35061: a0 = a0 << 0x5\n 35064: jump @1103\n      : @1092 (gas: 12)\n 35067: a0 = u64 [s1 + 0x68]\n 35070: a2 = s1 + 0x100\n 35074: u64 [a2 + 0x20] = a0\n 35077: a0 = u64 [s1 + 0x60]\n 35080: u64 [a2 + 0x28] = a0\n 35083: a0 = u64 [s1 + 0x38]\n 35086: u64 [a2 + 0x30] = a0\n 35089: a1 = s1 + 0x120\n 35093: a0 = u64 [s1 + 0x70]\n 35096: u64 [a2 + 0x38] = a0\n 35099: a0 = 0\n 35101: ra = 1338, jump @12\n      : @1093 [@dyn 669] (gas: 3)\n 35108: a1 = 0x20\n 35111: a0 = 0\n 35113: ra = 1340, jump @0\n      : @1094 [@dyn 670] (gas: 4)\n 35120: a1 = sp + 0xffffffffffffffe0\n 35123: a1 = a1 & 0xffffffffffffffe0\n 35126: u64 [s1 + 0x78] = a1\n 35129: t0 = 1342, jump @1215\n      : @1095 [@dyn 671] (gas: 33)\n 35135: ecalli 6 // 'hash_keccak_256'\n 35137: a5 = 0\n 35139: t2 = 0\n 35141: t0 = 0\n 35143: a0 = u64 [s1 + 0x98]\n 35147: a1 = a0 + 0x20\n 35150: u64 [s1 + 0x28] = a1\n 35153: a0 = a1 <u a0\n 35156: a1 = u64 [s1 + 0x80]\n 35160: a2 = a1 + a0\n 35163: u64 [s1 + 0x20] = a2\n 35166: a1 = a2 <u a1\n 35169: a1 = a0 if a0 == 0\n 35172: a0 = u64 [s1 + 0x90]\n 35176: a1 = a1 + a0\n 35179: u64 [s1 + 0x38] = a1\n 35182: a0 = a1 <u a0\n 35185: a1 = u64 [s1 + 0x88]\n 35189: a0 = a0 + a1\n 35192: u64 [s1 + 0x30] = a0\n 35195: a3 = u64 [s1 + 0x78]\n 35198: a0 = u64 [a3]\n 35200: a1 = u64 [a3 + 0x8]\n 35203: a2 = u64 [a3 + 0x10]\n 35206: a3 = u64 [a3 + 0x18]\n 35209: a0 = reverse a0\n 35211: u64 [s1 + 0x90] = a0\n 35215: t1 = reverse a1\n 35217: a1 = 0\n 35219: a0 = reverse a2\n 35221: u64 [s1 + 0x88] = a0\n 35225: ra = reverse a3\n 35227: fallthrough\n      : @1096 (gas: 17)\n 35228: u64 [s1 + 0x98] = a1\n 35232: a0 = u64 [s1 + 0x40]\n 35235: a0 = a1 <u a0\n 35238: a2 = u64 [s1 + 0x50]\n 35241: a1 = a5 ^ a2\n 35244: a2 = a5 <u a2\n 35247: a2 = a0 if a1 == 0\n 35250: a4 = u64 [s1 + 0x48]\n 35253: a0 = t2 <u a4\n 35256: a3 = u64 [s1 + 0x58]\n 35259: a1 = t0 ^ a3\n 35262: a3 = t0 <u a3\n 35265: a3 = a0 if a1 == 0\n 35268: a0 = t2 ^ a4\n 35271: a0 = a0 | a1\n 35274: a3 = a2 if a0 == 0\n 35277: jump @1102 if a3 == 0\n      : @1097 (gas: 16)\n 35281: a0 = ra\n 35283: u64 [s1 + 0x60] = a0\n 35286: u64 [s1 + 0xe0] = a0\n 35290: a0 = u64 [s1 + 0x88]\n 35294: u64 [s1 + 0xe8] = a0\n 35298: a0 = t1\n 35300: u64 [s1 + 0x68] = a0\n 35303: u64 [s1 + 0xf0] = a0\n 35307: a0 = s1 + 0x100\n 35311: a1 = s1 + 0xe0\n 35315: a2 = u64 [s1 + 0x90]\n 35319: u64 [s1 + 0xf8] = a2\n 35323: u64 [s1 + 0x80] = t0\n 35327: u64 [s1 + 0x78] = t2\n 35330: u64 [s1 + 0x70] = a5\n 35333: ra = 1344, jump @14\n      : @1098 [@dyn 672] (gas: 24)\n 35340: a1 = u64 [s1 + 0x28]\n 35343: a0 = u64 [s1 + 0x98]\n 35347: a0 = a0 + a1\n 35350: a1 = a0 <u a1\n 35353: a4 = u64 [s1 + 0x20]\n 35356: a2 = u64 [s1 + 0x70]\n 35359: a2 = a2 + a4\n 35362: a2 = a2 + a1\n 35365: a3 = a2 ^ a4\n 35368: a4 = a2 <u a4\n 35371: a4 = a1 if a3 == 0\n 35374: a3 = u64 [s1 + 0x38]\n 35377: a1 = u64 [s1 + 0x78]\n 35380: a1 = a1 + a3\n 35383: t0 = a1 <u a3\n 35386: a5 = u64 [s1 + 0x30]\n 35389: a3 = u64 [s1 + 0x80]\n 35393: a5 = a5 + a3\n 35396: a3 = a5 + t0\n 35399: a4 = a4 + a1\n 35402: a1 = a4 <u a1\n 35405: a1 = a1 + a3\n 35408: a1 = a1 | a2\n 35411: t0 = 1346, jump @1235\n      : @1099 [@dyn 673] (gas: 1)\n 35417: jump @1104 if a1 != 0\n      : @1100 (gas: 11)\n 35421: a5 = s1 + 0x100\n 35425: a2 = u64 [a5 + 0x18]\n 35428: a1 = u64 [a5 + 0x10]\n 35431: a3 = u64 [a5 + 0x8]\n 35434: a4 = u64 [a5]\n 35436: u64 [s1 + 0xc0] = a4\n 35440: u64 [s1 + 0xc8] = a3\n 35444: u64 [s1 + 0xd0] = a1\n 35448: a1 = s1 + 0xc0\n 35452: u64 [s1 + 0xd8] = a2\n 35456: ra = 1348, jump @12\n      : @1101 [@dyn 674] (gas: 30)\n 35463: a1 = u64 [s1 + 0x60]\n 35466: a1 = a1 + 0x1\n 35469: a0 = a1 <u 0x1\n 35472: a2 = u64 [s1 + 0x88]\n 35476: a2 = a2 + a0\n 35479: u64 [s1 + 0x88] = a2\n 35483: ra = a1\n 35485: a0 = a1 | a2\n 35488: a0 = a0 <u 0x1\n 35491: a1 = u64 [s1 + 0x68]\n 35494: t1 = a1 + a0\n 35497: a1 = t1 <u a1\n 35500: a2 = u64 [s1 + 0x90]\n 35504: a2 = a2 + a1\n 35507: u64 [s1 + 0x90] = a2\n 35511: a2 = u64 [s1 + 0x98]\n 35515: a1 = a2 + 0x20\n 35518: a2 = a1 <u a2\n 35521: a4 = u64 [s1 + 0x70]\n 35524: a3 = a4 + a2\n 35527: a4 = a3 <u a4\n 35530: a4 = a2 if a2 == 0\n 35533: a2 = u64 [s1 + 0x78]\n 35536: a4 = a4 + a2\n 35539: a2 = a4 <u a2\n 35542: t0 = u64 [s1 + 0x80]\n 35546: t0 = t0 + a2\n 35549: a5 = a3\n 35551: t2 = a4\n 35553: jump @1096\n      : @1102 (gas: 4)\n 35556: a3 = u64 [s1 + 0x28]\n 35559: a4 = u64 [s1 + 0x20]\n 35562: a0 = u64 [s1 + 0x98]\n 35566: fallthrough\n      : @1103 (gas: 27)\n 35567: a0 = a0 + a3\n 35570: a1 = a0 <u a3\n 35573: a2 = a4 + a5\n 35576: a2 = a2 + a1\n 35579: a3 = a2 ^ a4\n 35582: a4 = a2 <u a4\n 35585: a4 = a1 if a3 == 0\n 35588: a5 = u64 [s1 + 0x38]\n 35591: a1 = a5 + t2\n 35594: a4 = a4 + a1\n 35597: a3 = a4 <u a1\n 35600: a1 = a1 <u a5\n 35603: a5 = u64 [s1 + 0x30]\n 35606: a5 = a5 + t0\n 35609: a1 = a1 + a5\n 35612: a1 = a1 + a3\n 35615: a3 = u64 [s1 + 0x18]\n 35618: u64 [a3] = a0\n 35620: u64 [a3 + 0x8] = a2\n 35623: u64 [a3 + 0x10] = a4\n 35626: u64 [a3 + 0x18] = a1\n 35629: sp = s0 + 0xfffffffffffffe00\n 35633: ra = u64 [sp + 0x1f8]\n 35637: s0 = u64 [sp + 0x1f0]\n 35641: s1 = u64 [sp + 0x1e8]\n 35645: sp = sp + 0x200\n 35649: ret\n      : @1104 (gas: 1)\n 35651: trap\n      : @1105 [@dyn 675] (gas: 4)\n 35652: a5 = a3 <u 0xffffffffffffff80\n 35655: a5 = 0 if a0 != 0\n 35657: a5 = 0 if a4 != 0\n 35659: jump @1109 if a5 == 0\n      : @1106 (gas: 2)\n 35662: a4 = a3 + 0x80\n 35666: t0 = 1352, jump @1219\n      : @1107 [@dyn 676] (gas: 1)\n 35672: ra = 1354, jump @12\n      : @1108 [@dyn 677] (gas: 5)\n 35679: sp = s0 + 0xffffffffffffff90\n 35682: ra = u64 [sp + 0x68]\n 35685: s0 = u64 [sp + 0x60]\n 35688: sp = sp + 0x70\n 35691: ret\n      : @1109 (gas: 1)\n 35693: t0 = 1356, jump @1220\n      : @1110 [@dyn 678] (gas: 1)\n 35699: ra = 1358, jump @12\n      : @1111 [@dyn 679] (gas: 7)\n 35706: u64 [sp + 24] = 0\n 35709: u64 [sp + 16] = 0\n 35712: u64 [sp + 0] = 0x41\n 35715: a0 = 0x4\n 35718: a1 = sp\n 35720: u64 [sp + 8] = 0\n 35723: ra = 1360, jump @12\n      : @1112 [@dyn 680] (gas: 3)\n 35730: a1 = 0x24\n 35733: a0 = 0\n 35735: ra = 1362, jump @0\n      : @1113 [@dyn 681] (gas: 1)\n 35742: t0 = 1364, jump @1247\n      : @1114 [@dyn 682] (gas: 4)\n 35748: ra = 0x556\n 35752: ecalli 8 // 'seal_return'\n 35754: t0 = 0x558\n 35758: jump @1237\n      : @1115 [@dyn 683] (gas: 1)\n 35761: t0 = 1368, jump @1237\n      : @1116 [@dyn 684] (gas: 4)\n 35767: a5 = a3 <u 0xffffffffffffffc0\n 35770: a5 = 0 if a0 != 0\n 35772: a5 = 0 if a4 != 0\n 35774: jump @1120 if a5 == 0\n      : @1117 (gas: 2)\n 35777: a4 = a3 + 0x40\n 35780: t0 = 1370, jump @1219\n      : @1118 [@dyn 685] (gas: 1)\n 35786: ra = 1372, jump @12\n      : @1119 [@dyn 686] (gas: 5)\n 35793: sp = s0 + 0xffffffffffffff90\n 35796: ra = u64 [sp + 0x68]\n 35799: s0 = u64 [sp + 0x60]\n 35802: sp = sp + 0x70\n 35805: ret\n      : @1120 (gas: 1)\n 35807: t0 = 1374, jump @1220\n      : @1121 [@dyn 687] (gas: 1)\n 35813: ra = 1376, jump @12\n      : @1122 [@dyn 688] (gas: 7)\n 35820: u64 [sp + 24] = 0\n 35823: u64 [sp + 16] = 0\n 35826: u64 [sp + 0] = 0x41\n 35829: a0 = 0x4\n 35832: a1 = sp\n 35834: u64 [sp + 8] = 0\n 35837: ra = 1378, jump @12\n      : @1123 [@dyn 689] (gas: 3)\n 35844: a1 = 0x24\n 35847: a0 = 0\n 35849: ra = 1380, jump @0\n      : @1124 [@dyn 690] (gas: 1)\n 35856: t0 = 1382, jump @1247\n      : @1125 [@dyn 691] (gas: 3)\n 35862: ra = 0x568\n 35866: ecalli 8 // 'seal_return'\n 35868: fallthrough\n      : @1126 [@dyn 692] (gas: 46)\n 35869: sp = sp + 0xffffffffffffff70\n 35873: u64 [sp + 0x88] = ra\n 35877: u64 [sp + 0x80] = s0\n 35881: u64 [sp + 0x78] = s1\n 35884: s0 = sp + 0x90\n 35888: sp = sp & 0xfffffffffffffff0\n 35891: t0 = a0\n 35893: a2 = u64 [a1]\n 35895: t2 = u64 [a0 + 0x8]\n 35898: a5 = u64 [a1 + 0x8]\n 35901: t1 = u64 [a0]\n 35903: a3 = a2 + 0x1f\n 35906: ra = a3 <u a2\n 35909: a2 = a5 + ra\n 35912: a3 = a3 & 0xffffffffffffffe0\n 35915: u64 [sp + 0x8] = t1\n 35918: t1 = t1 + a3\n 35921: a4 = t1 <u a3\n 35924: a3 = a2 + t2\n 35927: a3 = a3 + a4\n 35930: s1 = a3 ^ a2\n 35933: a0 = a3 <u a2\n 35936: a0 = a4 if s1 == 0\n 35939: a4 = u64 [t0 + 0x18]\n 35942: a5 = a2 <u a5\n 35945: s1 = u64 [a1 + 0x10]\n 35948: t0 = u64 [t0 + 0x10]\n 35951: a1 = u64 [a1 + 0x18]\n 35954: a5 = ra if ra == 0\n 35957: a5 = a5 + s1\n 35960: s1 = a5 <u s1\n 35963: a2 = a5 + t0\n 35966: a0 = a0 + a2\n 35969: a5 = a2 <u a5\n 35972: a2 = a0 <u a2\n 35975: a1 = a1 + a4\n 35978: a1 = a1 + s1\n 35981: a1 = a1 + a5\n 35984: a5 = a1 + a2\n 35987: a1 = a5 >u 0\n 35989: a2 = a0 >u 0\n 35991: a2 = a1 if a5 != 0\n 35994: a1 = a0 | a5\n 35997: s1 = a3 >u 0\n 35999: s1 = a2 if a1 != 0\n 36002: jump @1130 if s1 != 0\n      : @1127 (gas: 13)\n 36005: a1 = u64 [sp + 0x8]\n 36008: a1 = t1 <u a1\n 36011: a2 = a3 ^ t2\n 36014: s1 = a3 <u t2\n 36017: s1 = a1 if a2 == 0\n 36020: a1 = a0 <u t0\n 36023: a2 = a5 ^ a4\n 36026: a4 = a5 <u a4\n 36029: a4 = a1 if a2 == 0\n 36032: a1 = a0 ^ t0\n 36035: a1 = a1 | a2\n 36038: a4 = s1 if a1 == 0\n 36041: jump @1130 if a4 != 0\n      : @1128 (gas: 7)\n 36044: u64 [sp + 0x50] = t1\n 36047: u64 [sp + 0x58] = a3\n 36050: u64 [sp + 0x60] = a0\n 36053: a0 = 0x40\n 36056: a1 = sp + 0x50\n 36059: u64 [sp + 0x68] = a5\n 36062: ra = 1386, jump @12\n      : @1129 [@dyn 693] (gas: 6)\n 36069: sp = s0 + 0xffffffffffffff70\n 36073: ra = u64 [sp + 0x88]\n 36077: s0 = u64 [sp + 0x80]\n 36081: s1 = u64 [sp + 0x78]\n 36084: sp = sp + 0x90\n 36088: ret\n      : @1130 (gas: 6)\n 36090: u64 [sp + 64] = 0\n 36093: u64 [sp + 56] = 0\n 36096: u64 [sp + 48] = 0\n 36099: t0 = 0x56c\n 36103: a0 = 0x4e487b7100000000\n 36113: fallthrough\n      : @1131 [@dyn 694] (gas: 4)\n 36114: a1 = sp + 0x30\n 36117: u64 [sp + 0x48] = a0\n 36120: a0 = 0\n 36122: ra = 1390, jump @12\n      : @1132 [@dyn 695] (gas: 7)\n 36129: u64 [sp + 40] = 0\n 36132: u64 [sp + 32] = 0\n 36135: u64 [sp + 16] = 0x41\n 36139: a0 = 0x4\n 36142: a1 = sp + 0x10\n 36145: u64 [sp + 24] = 0\n 36148: ra = 1392, jump @12\n      : @1133 [@dyn 696] (gas: 3)\n 36155: a1 = 0x24\n 36158: a0 = 0\n 36160: ra = 1394, jump @0\n      : @1134 [@dyn 697] (gas: 1)\n 36167: t0 = 1396, jump @1247\n      : @1135 [@dyn 698] (gas: 3)\n 36173: ra = 0x576\n 36177: ecalli 8 // 'seal_return'\n 36179: fallthrough\n      : @1136 [@dyn 699] (gas: 16)\n 36180: sp = sp + 0xfffffffffffffee0\n 36184: u64 [sp + 0x118] = ra\n 36188: u64 [sp + 0x110] = s0\n 36192: u64 [sp + 0x108] = s1\n 36196: s0 = sp + 0x120\n 36200: sp = sp & 0xffffffffffffffe0\n 36203: s1 = sp\n 36205: a3 = u64 [a2]\n 36207: u64 [s1 + 0x58] = a3\n 36210: a3 = u64 [a2 + 0x8]\n 36213: u64 [s1 + 0x50] = a3\n 36216: a3 = u64 [a2 + 0x10]\n 36219: u64 [s1 + 0x48] = a3\n 36222: a2 = u64 [a2 + 0x18]\n 36225: u64 [s1 + 0x40] = a2\n 36228: t0 = 1400, jump @1222\n      : @1137 [@dyn 700] (gas: 1)\n 36234: ra = 1402, jump @14\n      : @1138 [@dyn 701] (gas: 20)\n 36241: a0 = u64 [s1 + 0xf8]\n 36245: t0 = u64 [s1 + 0xe0]\n 36249: a2 = u64 [s1 + 0xf0]\n 36253: a3 = u64 [s1 + 0xe8]\n 36257: a1 = u64 [s1 + 0x40]\n 36260: a4 = a0 ^ a1\n 36263: a1 = a1 <u a0\n 36266: a0 = u64 [s1 + 0x48]\n 36269: a5 = a0 <u a2\n 36272: a5 = a1 if a4 != 0\n 36275: a1 = u64 [s1 + 0x50]\n 36278: t1 = a3 ^ a1\n 36281: a3 = a1 <u a3\n 36284: a1 = u64 [s1 + 0x58]\n 36287: a1 = a1 <u t0\n 36290: a1 = a3 if t1 != 0\n 36293: a0 = a0 ^ a2\n 36296: a0 = a0 | a4\n 36299: a1 = a5 if a0 != 0\n 36302: jump @1145 if a1 == 0\n      : @1139 (gas: 1)\n 36306: t0 = 1404, jump @1246\n      : @1140 [@dyn 702] (gas: 1)\n 36312: ra = 1406, jump @12\n      : @1141 [@dyn 703] (gas: 3)\n 36319: a1 = 0x20\n 36322: a0 = 0\n 36324: ra = 1408, jump @0\n      : @1142 [@dyn 704] (gas: 4)\n 36331: a1 = sp + 0xffffffffffffffe0\n 36334: a1 = a1 & 0xffffffffffffffe0\n 36337: u64 [s1 + 0x30] = a1\n 36340: t0 = 1410, jump @1215\n      : @1143 [@dyn 705] (gas: 39)\n 36346: ecalli 6 // 'hash_keccak_256'\n 36348: a3 = u64 [s1 + 0x30]\n 36351: a0 = u64 [a3]\n 36353: a1 = u64 [a3 + 0x8]\n 36356: a2 = u64 [a3 + 0x18]\n 36359: a3 = u64 [a3 + 0x10]\n 36362: t0 = reverse a0\n 36364: a1 = reverse a1\n 36366: a2 = reverse a2\n 36368: a3 = reverse a3\n 36370: a0 = u64 [s1 + 0x48]\n 36373: a4 = a0 >> 0x3e\n 36376: a5 = u64 [s1 + 0x40]\n 36379: a5 = a5 << 0x2\n 36382: t1 = a5 | a4\n 36385: a4 = u64 [s1 + 0x50]\n 36388: a5 = a4 >> 0x3e\n 36391: a0 = a0 << 0x2\n 36394: t2 = a0 | a5\n 36397: a0 = u64 [s1 + 0x58]\n 36400: a5 = a0 >> 0x3e\n 36403: a4 = a4 << 0x2\n 36406: a4 = a4 | a5\n 36409: a5 = a0 << 0x2\n 36412: a4 = a4 + a3\n 36415: a5 = a5 + a2\n 36418: a2 = a5 <u a2\n 36421: a4 = a4 + a2\n 36424: a0 = a4 ^ a3\n 36427: a3 = a4 <u a3\n 36430: a3 = a2 if a0 == 0\n 36433: t2 = t2 + a1\n 36436: a3 = a3 + t2\n 36439: a0 = a3 <u t2\n 36442: t0 = t0 + t1\n 36445: a1 = t2 <u a1\n 36448: a1 = a1 + t0\n 36451: a0 = a0 + a1\n 36454: t0 = 1412, jump @1224\n      : @1144 [@dyn 706] (gas: 1)\n 36460: ret\n      : @1145 (gas: 1)\n 36462: t0 = 1414, jump @1228\n      : @1146 [@dyn 707] (gas: 1)\n 36468: ra = 1416, jump @12\n      : @1147 [@dyn 708] (gas: 1)\n 36475: t0 = 1418, jump @1250\n      : @1148 [@dyn 709] (gas: 1)\n 36481: ra = 1420, jump @12\n      : @1149 [@dyn 710] (gas: 3)\n 36488: a1 = 0x24\n 36491: a0 = 0\n 36493: ra = 1422, jump @0\n      : @1150 [@dyn 711] (gas: 1)\n 36500: t0 = 1424, jump @1247\n      : @1151 [@dyn 712] (gas: 3)\n 36506: ra = 0x592\n 36510: ecalli 8 // 'seal_return'\n 36512: fallthrough\n      : @1152 [@dyn 713] (gas: 16)\n 36513: sp = sp + 0xffffffffffffff20\n 36517: u64 [sp + 0xd8] = ra\n 36521: u64 [sp + 0xd0] = s0\n 36525: u64 [sp + 0xc8] = s1\n 36529: s0 = sp + 0xe0\n 36533: sp = sp & 0xffffffffffffffe0\n 36536: s1 = sp\n 36538: t0 = u64 [a1 + 0x18]\n 36541: t1 = u64 [a1 + 0x10]\n 36544: a5 = u64 [a1]\n 36546: a4 = u64 [a1 + 0x8]\n 36549: a1 = t1 | t0\n 36552: a3 = a5 <u 0x20\n 36555: a3 = 0 if a4 != 0\n 36557: a3 = 0 if a1 != 0\n 36559: jump @1160 if a3 != 0\n      : @1153 (gas: 23)\n 36563: a1 = u64 [a2 + 0x18]\n 36566: u64 [s1 + 0x48] = a1\n 36569: a1 = u64 [a2 + 0x10]\n 36572: u64 [s1 + 0x20] = a1\n 36575: a1 = u64 [a2 + 0x8]\n 36578: u64 [s1 + 0x58] = a1\n 36581: a1 = u64 [a2]\n 36583: u64 [s1 + 0x50] = a1\n 36586: a2 = u64 [a0 + 0x18]\n 36589: a1 = u64 [a0 + 0x10]\n 36592: a3 = u64 [a0 + 0x8]\n 36595: a0 = u64 [a0]\n 36597: u64 [s1 + 0xa0] = a0\n 36601: u64 [s1 + 0xa8] = a3\n 36605: u64 [s1 + 0xb0] = a1\n 36609: a1 = s1 + 0xa0\n 36613: u64 [s1 + 0xb8] = a2\n 36617: a0 = 0\n 36619: u64 [s1 + 0x18] = t0\n 36622: u64 [s1 + 0x40] = t1\n 36625: u64 [s1 + 0x38] = a4\n 36628: u64 [s1 + 0x30] = a5\n 36631: ra = 1428, jump @12\n      : @1154 [@dyn 714] (gas: 3)\n 36638: a1 = 0x20\n 36641: a0 = 0\n 36643: ra = 1430, jump @0\n      : @1155 [@dyn 715] (gas: 4)\n 36650: a1 = sp + 0xffffffffffffffe0\n 36653: a1 = a1 & 0xffffffffffffffe0\n 36656: u64 [s1 + 0x28] = a1\n 36659: t0 = 1432, jump @1215\n      : @1156 [@dyn 716] (gas: 107)\n 36665: ecalli 6 // 'hash_keccak_256'\n 36667: a2 = u64 [s1 + 0x50]\n 36670: a1 = a2 + 0x1f\n 36673: a0 = a1 <u a2\n 36676: t2 = a2\n 36678: a4 = u64 [s1 + 0x58]\n 36681: a3 = a4 + a0\n 36684: a2 = a3 <u a4\n 36687: t1 = a4\n 36689: a2 = a0 if a0 == 0\n 36692: a0 = u64 [s1 + 0x20]\n 36695: t0 = a0 + a2\n 36698: a2 = t0 << 0x3b\n 36701: a4 = a3 >> 0x5\n 36704: a2 = a2 | a4\n 36707: a3 = a3 << 0x3b\n 36710: a1 = a1 >> 0x5\n 36713: a5 = a1 | a3\n 36716: a1 = t2 <u 0x20\n 36719: a1 = 0 if t1 != 0\n 36721: a4 = u64 [s1 + 0x28]\n 36724: a3 = u64 [a4 + 0x18]\n 36727: t1 = u64 [a4 + 0x10]\n 36730: a4 = u64 [s1 + 0x48]\n 36733: a4 = a4 | a0\n 36736: a1 = 0 if a4 != 0\n 36738: ra = reverse a3\n 36740: a3 = reverse t1\n 36742: a2 = 0 if a1 != 0\n 36744: a5 = 0 if a1 != 0\n 36746: a5 = a5 + ra\n 36749: u64 [s1 + 0x58] = a5\n 36752: a0 = a5 <u ra\n 36755: a5 = a3 + a0\n 36758: a2 = a2 + a5\n 36761: u64 [s1 + 0x50] = a2\n 36764: a5 = a2 ^ a3\n 36767: a2 = a2 <u a3\n 36770: a2 = a0 if a5 == 0\n 36773: u64 [s1 + 0x10] = a2\n 36776: a0 = u64 [s1 + 0x30]\n 36779: t2 = a0 + 0x1f\n 36782: a2 = t2 <u a0\n 36785: a0 = u64 [s1 + 0x38]\n 36788: a4 = a0 + a2\n 36791: a5 = a4 <u a0\n 36794: a5 = a2 if a2 == 0\n 36797: t1 = u64 [s1 + 0x40]\n 36800: t1 = t1 + a5\n 36803: a2 = t1 << 0x3b\n 36806: a0 = a4 >> 0x5\n 36809: a0 = a0 | a2\n 36812: a4 = a4 << 0x3b\n 36815: a2 = t2 >> 0x5\n 36818: a2 = a2 | a4\n 36821: a2 = a2 + ra\n 36824: u64 [s1 + 0x38] = a2\n 36827: a2 = a2 <u ra\n 36830: a4 = a3 + a2\n 36833: a4 = a4 + a0\n 36836: a0 = a4 ^ a3\n 36839: u64 [s1 + 0x30] = a4\n 36842: a3 = a4 <u a3\n 36845: a3 = a2 if a0 == 0\n 36848: a0 = u64 [s1 + 0x20]\n 36851: a0 = t0 <u a0\n 36854: a2 = u64 [s1 + 0x48]\n 36857: a0 = a0 + a2\n 36860: a2 = t0 >> 0x5\n 36863: a4 = a0 << 0x3b\n 36866: a2 = a2 | a4\n 36869: a4 = u64 [s1 + 0x28]\n 36872: t0 = u64 [a4]\n 36874: a4 = u64 [a4 + 0x8]\n 36877: a0 = a0 >> 0x5\n 36880: a2 = 0 if a1 != 0\n 36882: a0 = 0 if a1 != 0\n 36884: a1 = reverse a4\n 36886: a4 = reverse t0\n 36888: a0 = a0 + a4\n 36891: a2 = a2 + a1\n 36894: a5 = a2 <u a1\n 36897: a0 = a0 + a5\n 36900: t2 = u64 [s1 + 0x10]\n 36903: t2 = t2 + a2\n 36906: a2 = t2 <u a2\n 36909: t0 = a0 + a2\n 36912: a0 = u64 [s1 + 0x40]\n 36915: a0 = t1 <u a0\n 36918: a2 = u64 [s1 + 0x18]\n 36921: a0 = a0 + a2\n 36924: a2 = t1 >> 0x5\n 36927: a5 = a0 << 0x3b\n 36930: a2 = a2 | a5\n 36933: a5 = u64 [s1 + 0x58]\n 36936: a0 = a0 >> 0x5\n 36939: a0 = a0 + a4\n 36942: a4 = u64 [s1 + 0x50]\n 36945: a2 = a2 + a1\n 36948: a1 = a2 <u a1\n 36951: a0 = a0 + a1\n 36954: a3 = a3 + a2\n 36957: u64 [s1 + 0x28] = a3\n 36960: a1 = a3 <u a2\n 36963: a0 = a0 + a1\n 36966: u64 [s1 + 0x20] = a0\n 36969: fallthrough\n      : @1157 (gas: 16)\n 36970: a0 = u64 [s1 + 0x38]\n 36973: a0 = a5 <u a0\n 36976: a2 = u64 [s1 + 0x30]\n 36979: a1 = a4 ^ a2\n 36982: a2 = a4 <u a2\n 36985: a2 = a0 if a1 == 0\n 36988: a0 = u64 [s1 + 0x28]\n 36991: t1 = t2 <u a0\n 36994: a3 = u64 [s1 + 0x20]\n 36997: a1 = t0 ^ a3\n 37000: a3 = t0 <u a3\n 37003: a3 = t1 if a1 == 0\n 37006: a0 = t2 ^ a0\n 37009: a0 = a0 | a1\n 37012: a3 = a2 if a0 == 0\n 37015: jump @1160 if a3 == 0\n      : @1158 (gas: 17)\n 37018: u64 [s1 + 120] = 0\n 37021: u64 [s1 + 112] = 0\n 37024: u64 [s1 + 104] = 0\n 37027: u64 [s1 + 96] = 0\n 37030: u64 [s1 + 0x80] = a5\n 37034: u64 [s1 + 0x88] = a4\n 37038: a2 = t2\n 37040: u64 [s1 + 0x90] = a2\n 37044: a0 = s1 + 0x80\n 37048: a1 = s1 + 0x60\n 37051: a3 = t0\n 37053: u64 [s1 + 0x98] = a3\n 37057: u64 [s1 + 0x58] = a5\n 37060: u64 [s1 + 0x50] = a4\n 37063: u64 [s1 + 0x48] = a3\n 37066: u64 [s1 + 0x40] = a2\n 37069: ra = 1434, jump @16\n      : @1159 [@dyn 717] (gas: 14)\n 37076: t0 = u64 [s1 + 0x48]\n 37079: a4 = u64 [s1 + 0x50]\n 37082: a5 = u64 [s1 + 0x58]\n 37085: a5 = a5 + 0x1\n 37088: a0 = a5 <u 0x1\n 37091: a4 = a4 + a0\n 37094: a0 = a5 | a4\n 37097: a0 = a0 <u 0x1\n 37100: a1 = u64 [s1 + 0x40]\n 37103: a0 = a0 + a1\n 37106: a1 = a0 <u a1\n 37109: t0 = t0 + a1\n 37112: t2 = a0\n 37114: jump @1157\n      : @1160 (gas: 6)\n 37117: sp = s0 + 0xffffffffffffff20\n 37121: ra = u64 [sp + 0xd8]\n 37125: s0 = u64 [sp + 0xd0]\n 37129: s1 = u64 [sp + 0xc8]\n 37133: sp = sp + 0xe0\n 37137: ret\n      : @1161 (gas: 16)\n 37139: sp = sp + 0xfffffffffffffee0\n 37143: u64 [sp + 0x118] = ra\n 37147: u64 [sp + 0x110] = s0\n 37151: u64 [sp + 0x108] = s1\n 37155: s0 = sp + 0x120\n 37159: sp = sp & 0xffffffffffffffe0\n 37162: s1 = sp\n 37164: a3 = u64 [a2]\n 37166: u64 [s1 + 0x48] = a3\n 37169: a3 = u64 [a2 + 0x8]\n 37172: u64 [s1 + 0x40] = a3\n 37175: a3 = u64 [a2 + 0x10]\n 37178: u64 [s1 + 0x50] = a3\n 37181: a2 = u64 [a2 + 0x18]\n 37184: u64 [s1 + 0x58] = a2\n 37187: t0 = 1436, jump @1222\n      : @1162 [@dyn 718] (gas: 1)\n 37193: ra = 1438, jump @14\n      : @1163 [@dyn 719] (gas: 20)\n 37200: a0 = u64 [s1 + 0xf8]\n 37204: t0 = u64 [s1 + 0xe0]\n 37208: a2 = u64 [s1 + 0xf0]\n 37212: a3 = u64 [s1 + 0xe8]\n 37216: a1 = u64 [s1 + 0x58]\n 37219: a4 = a0 ^ a1\n 37222: a1 = a1 <u a0\n 37225: a0 = u64 [s1 + 0x50]\n 37228: a5 = a0 <u a2\n 37231: a5 = a1 if a4 != 0\n 37234: a1 = u64 [s1 + 0x40]\n 37237: t1 = a3 ^ a1\n 37240: a3 = a1 <u a3\n 37243: a1 = u64 [s1 + 0x48]\n 37246: a1 = a1 <u t0\n 37249: a1 = a3 if t1 != 0\n 37252: a0 = a0 ^ a2\n 37255: a0 = a0 | a4\n 37258: a1 = a5 if a0 != 0\n 37261: jump @1170 if a1 == 0\n      : @1164 (gas: 1)\n 37265: t0 = 1440, jump @1246\n      : @1165 [@dyn 720] (gas: 1)\n 37271: ra = 1442, jump @12\n      : @1166 [@dyn 721] (gas: 3)\n 37278: a1 = 0x20\n 37281: a0 = 0\n 37283: ra = 1444, jump @0\n      : @1167 [@dyn 722] (gas: 4)\n 37290: a1 = sp + 0xffffffffffffffe0\n 37293: a1 = a1 & 0xffffffffffffffe0\n 37296: u64 [s1 + 0x30] = a1\n 37299: t0 = 1446, jump @1215\n      : @1168 [@dyn 723] (gas: 29)\n 37305: ecalli 6 // 'hash_keccak_256'\n 37307: a3 = u64 [s1 + 0x30]\n 37310: a0 = u64 [a3]\n 37312: a1 = u64 [a3 + 0x8]\n 37315: a2 = u64 [a3 + 0x18]\n 37318: a3 = u64 [a3 + 0x10]\n 37321: t0 = reverse a0\n 37323: a1 = reverse a1\n 37325: a2 = reverse a2\n 37327: a3 = reverse a3\n 37329: a4 = u64 [s1 + 0x40]\n 37332: a4 = a4 + a3\n 37335: a5 = u64 [s1 + 0x48]\n 37338: a5 = a5 + a2\n 37341: a2 = a5 <u a2\n 37344: a4 = a4 + a2\n 37347: a0 = a4 ^ a3\n 37350: a3 = a4 <u a3\n 37353: a3 = a2 if a0 == 0\n 37356: a0 = u64 [s1 + 0x50]\n 37359: a0 = a0 + a1\n 37362: a3 = a3 + a0\n 37365: t1 = a3 <u a0\n 37368: a2 = u64 [s1 + 0x58]\n 37371: t0 = t0 + a2\n 37374: a0 = a0 <u a1\n 37377: a0 = a0 + t0\n 37380: a0 = a0 + t1\n 37383: t0 = 1448, jump @1224\n      : @1169 [@dyn 724] (gas: 1)\n 37389: ret\n      : @1170 (gas: 1)\n 37391: t0 = 1450, jump @1228\n      : @1171 [@dyn 725] (gas: 1)\n 37397: ra = 1452, jump @12\n      : @1172 [@dyn 726] (gas: 1)\n 37404: t0 = 1454, jump @1250\n      : @1173 [@dyn 727] (gas: 1)\n 37410: ra = 1456, jump @12\n      : @1174 [@dyn 728] (gas: 3)\n 37417: a1 = 0x24\n 37420: a0 = 0\n 37422: ra = 1458, jump @0\n      : @1175 [@dyn 729] (gas: 1)\n 37429: t0 = 1460, jump @1247\n      : @1176 [@dyn 730] (gas: 3)\n 37435: ra = 0x5b6\n 37439: ecalli 8 // 'seal_return'\n 37441: fallthrough\n      : @1177 [@dyn 731] (gas: 10)\n 37442: sp = sp + 0xffffffffffffff30\n 37446: u64 [sp + 0xc8] = ra\n 37450: u64 [sp + 0xc0] = s0\n 37454: u64 [sp + 0xb8] = s1\n 37458: s0 = sp + 0xd0\n 37462: sp = sp & 0xfffffffffffffff0\n 37465: u64 [sp + 0x8] = a0\n 37468: a0 = sp + 0x90\n 37472: a1 = 0x40\n 37475: ra = 1464, jump @10\n      : @1178 [@dyn 732] (gas: 15)\n 37482: a0 = u64 [sp + 0xa8]\n 37486: u64 [sp + 0x18] = a0\n 37489: s1 = u64 [sp + 0xa0]\n 37493: a2 = u64 [sp + 0x98]\n 37497: u64 [sp + 0x28] = a2\n 37500: a1 = u64 [sp + 0x90]\n 37504: u64 [sp + 0x20] = a1\n 37507: u64 [sp + 0x88] = a0\n 37511: u64 [sp + 0x80] = s1\n 37515: u64 [sp + 0x78] = a2\n 37518: a0 = sp + 0x70\n 37521: u64 [sp + 0x70] = a1\n 37524: ra = 0x5ba\n 37528: t0 = 0x558\n 37532: jump @1237\n      : @1179 [@dyn 733] (gas: 12)\n 37535: a0 = u64 [sp + 0x18]\n 37538: a1 = u64 [sp + 0x28]\n 37541: a0 = a0 | a1\n 37544: a1 = u64 [sp + 0x20]\n 37547: a1 = a1 | s1\n 37550: a1 = a1 | a0\n 37553: a1 = a1 >> 0x20\n 37556: u64 [sp + 0x10] = s1\n 37559: a0 = a0 | s1\n 37562: a0 = a0 << 0x20\n 37565: a0 = a0 | a1\n 37568: jump @1184 if a0 != 0\n      : @1180 (gas: 8)\n 37572: u64 [sp + 104] = 0\n 37575: u64 [sp + 96] = 0\n 37578: u64 [sp + 88] = 0\n 37581: a1 = sp + 0x50\n 37584: u64 [sp + 80] = 0x60\n 37588: s1 = u64 [sp + 0x20]\n 37591: a0 = s1\n 37593: ra = 1468, jump @12\n      : @1181 [@dyn 734] (gas: 9)\n 37600: a0 = u64 [sp + 0x10]\n 37603: a1 = u64 [sp + 0x18]\n 37606: a0 = a0 | a1\n 37609: a1 = 0xffffffe0\n 37619: a1 = s1 <u a1\n 37622: a2 = u64 [sp + 0x28]\n 37625: a1 = 0 if a2 != 0\n 37627: a1 = 0 if a0 != 0\n 37629: jump @1184 if a1 == 0\n      : @1182 (gas: 8)\n 37632: s1 = u64 [sp + 0x20]\n 37635: i32 a0 = s1 + 0x20\n 37638: u64 [sp + 72] = 0\n 37641: u64 [sp + 64] = 0\n 37644: u64 [sp + 48] = 0x60\n 37648: a1 = sp + 0x30\n 37651: u64 [sp + 56] = 0\n 37654: ra = 1470, jump @12\n      : @1183 [@dyn 735] (gas: 14)\n 37661: a0 = u64 [sp + 0x8]\n 37664: a1 = u64 [sp + 0x18]\n 37667: u64 [a0 + 0x18] = a1\n 37670: a1 = u64 [sp + 0x10]\n 37673: u64 [a0 + 0x10] = a1\n 37676: a1 = u64 [sp + 0x28]\n 37679: u64 [a0 + 0x8] = a1\n 37682: u64 [a0] = s1\n 37684: sp = s0 + 0xffffffffffffff30\n 37688: ra = u64 [sp + 0xc8]\n 37692: s0 = u64 [sp + 0xc0]\n 37696: s1 = u64 [sp + 0xb8]\n 37700: sp = sp + 0xd0\n 37704: ret\n      : @1184 (gas: 1)\n 37706: trap\n      : @1185 (gas: 14)\n 37707: sp = sp + 0xffffffffffffff20\n 37711: u64 [sp + 0xd8] = ra\n 37715: u64 [sp + 0xd0] = s0\n 37719: u64 [sp + 0xc8] = s1\n 37723: s0 = sp + 0xe0\n 37727: sp = sp & 0xfffffffffffffff0\n 37730: a1 = u64 [a0 + 0x10]\n 37733: a2 = u64 [a0 + 0x18]\n 37736: a3 = u64 [a0 + 0x8]\n 37739: a0 = u64 [a0]\n 37741: a2 = a2 | a3\n 37744: a0 = a0 | a1\n 37747: a0 = a0 | a2\n 37750: jump @1187 if a0 == 0\n      : @1186 (gas: 6)\n 37753: sp = s0 + 0xffffffffffffff20\n 37757: ra = u64 [sp + 0xd8]\n 37761: s0 = u64 [sp + 0xd0]\n 37765: s1 = u64 [sp + 0xc8]\n 37769: sp = sp + 0xe0\n 37773: ret\n      : @1187 (gas: 3)\n 37775: a0 = sp + 0xa0\n 37779: a1 = 0x40\n 37782: ra = 1472, jump @10\n      : @1188 [@dyn 736] (gas: 15)\n 37789: a2 = u64 [sp + 0xb8]\n 37793: s1 = u64 [sp + 0xb0]\n 37797: a0 = u64 [sp + 0xa8]\n 37801: a1 = u64 [sp + 0xa0]\n 37805: u64 [sp + 0x10] = a0\n 37808: u64 [sp + 0x8] = a2\n 37811: a0 = a0 | a2\n 37814: u64 [sp + 0x18] = a1\n 37817: a1 = a1 | s1\n 37820: a1 = a1 | a0\n 37823: a1 = a1 >> 0x20\n 37826: a0 = a0 | s1\n 37829: a0 = a0 << 0x20\n 37832: a0 = a0 | a1\n 37835: jump @1195 if a0 != 0\n      : @1189 (gas: 8)\n 37839: u64 [sp + 144] = 0\n 37843: u64 [sp + 136] = 0\n 37847: u64 [sp + 128] = 0\n 37851: a0 = 0x8c379a000000000\n 37861: a1 = sp + 0x80\n 37865: u64 [sp + 0x98] = a0\n 37869: a0 = u64 [sp + 0x18]\n 37872: ra = 1474, jump @12\n      : @1190 [@dyn 737] (gas: 11)\n 37879: a2 = u64 [sp + 0x8]\n 37882: a2 = a2 | s1\n 37885: s1 = 0x100000000\n 37895: a0 = 0xfffffffc\n 37905: a1 = u64 [sp + 0x18]\n 37908: a0 = a1 <u a0\n 37911: a1 = u64 [sp + 0x10]\n 37914: a0 = 0 if a1 != 0\n 37916: u64 [sp + 0x8] = a2\n 37919: a0 = 0 if a2 != 0\n 37921: jump @1195 if a0 == 0\n      : @1191 (gas: 9)\n 37924: a0 = i32 [sp + 0x18]\n 37927: u64 [sp] = a0\n 37929: i32 a0 = a0 + 0x4\n 37932: u64 [sp + 120] = 0\n 37935: u64 [sp + 112] = 0\n 37938: u64 [sp + 96] = 0x20\n 37942: a1 = sp + 0x60\n 37945: u64 [sp + 104] = 0\n 37948: ra = 1476, jump @12\n      : @1192 [@dyn 738] (gas: 8)\n 37955: a0 = s1 + 0xffffffffffffffdc\n 37958: a1 = u64 [sp + 0x18]\n 37961: a0 = a1 <u a0\n 37964: a1 = u64 [sp + 0x10]\n 37967: a0 = 0 if a1 != 0\n 37969: a1 = u64 [sp + 0x8]\n 37972: a0 = 0 if a1 != 0\n 37974: jump @1195 if a0 == 0\n      : @1193 (gas: 8)\n 37977: a0 = u64 [sp]\n 37979: i32 a0 = a0 + 0x24\n 37982: u64 [sp + 88] = 0\n 37985: u64 [sp + 80] = 0\n 37988: u64 [sp + 64] = 0x9\n 37992: a1 = sp + 0x40\n 37995: u64 [sp + 72] = 0\n 37998: ra = 1478, jump @12\n      : @1194 [@dyn 739] (gas: 8)\n 38005: a0 = 0xffffffbc\n 38015: a1 = u64 [sp + 0x18]\n 38018: a0 = a1 <u a0\n 38021: a1 = u64 [sp + 0x10]\n 38024: a0 = 0 if a1 != 0\n 38026: a1 = u64 [sp + 0x8]\n 38029: a0 = 0 if a1 != 0\n 38031: jump @1196 if a0 != 0\n      : @1195 (gas: 1)\n 38034: trap\n      : @1196 (gas: 10)\n 38035: s1 = u64 [sp]\n 38037: i32 a0 = s1 + 0x44\n 38040: a1 = u64 [0x200e8]\n 38045: u64 [sp + 40] = 0\n 38048: u64 [sp + 0x38] = a1\n 38051: a1 = 0x7200000000000000\n 38061: u64 [sp + 0x30] = a1\n 38064: a1 = sp + 0x20\n 38067: u64 [sp + 32] = 0\n 38070: ra = 1480, jump @12\n      : @1197 [@dyn 740] (gas: 3)\n 38077: a1 = 0x64\n 38080: a0 = s1\n 38082: ra = 1482, jump @0\n      : @1198 [@dyn 741] (gas: 7)\n 38089: i32 a1 = a0 + 0\n 38091: a0 = 0x1\n 38094: a2 = 0x64\n 38097: ecalli 8 // 'seal_return'\n 38099: a0 = 0\n 38101: ra = 0x5cc\n 38105: jump @22\n      : @1199 [export #0: 'call'] (gas: 2)\n 38109: a0 = 0\n 38111: ra = 1484, jump @22\n      : @1200 [@dyn 742] [export #1: 'deploy'] (gas: 2)\n 38118: a0 = 0x1\n 38121: ra = 1486, jump @22\n      : @1201 [@dyn 743] (gas: 11)\n 38128: a0 = sp + 0xffffffffffffffe0\n 38131: a0 = a0 & 0xffffffffffffffe0\n 38134: u64 [s1 + 0x150] = a0\n 38138: sp = a0\n 38140: a1 = 0\n 38142: u64 [a0 + 24] = 0\n 38145: u64 [a0 + 16] = 0\n 38148: u64 [a0 + 8] = 0\n 38151: u64 [a0 + 0] = 0\n 38153: i32 a0 = a0 + 0\n 38155: jump [t0]\n      : @1202 (gas: 8)\n 38157: a1 = sp + 0xffffffffffffffe0\n 38160: a1 = a1 & 0xffffffffffffffe0\n 38163: u64 [s1 + 0x158] = a1\n 38167: sp = a1\n 38169: i32 a0 = a0 + 0\n 38171: i32 a2 = a1 + 0\n 38173: a1 = 0x40\n 38176: jump [t0]\n      : @1203 (gas: 16)\n 38178: a3 = u64 [s1 + 0x120]\n 38182: a0 = u64 [a3 + 0x18]\n 38185: a1 = u64 [a3 + 0x10]\n 38188: a2 = u64 [a3 + 0x8]\n 38191: a3 = u64 [a3]\n 38193: a0 = reverse a0\n 38195: u64 [s1 + 0x120] = a0\n 38199: a0 = reverse a1\n 38201: u64 [s1 + 0x118] = a0\n 38205: a0 = reverse a2\n 38207: u64 [s1 + 0x110] = a0\n 38211: a0 = reverse a3\n 38213: u64 [s1 + 0x108] = a0\n 38217: a0 = 0x30d8\n 38221: a2 = s1 + a0\n 38224: jump [t0]\n      : @1204 (gas: 9)\n 38226: a3 = u64 [s1 + 0x150]\n 38230: a0 = u64 [a3 + 0x10]\n 38233: a1 = u64 [a3 + 0x18]\n 38236: a2 = u64 [a3 + 0x8]\n 38239: a3 = u64 [a3]\n 38241: a1 = a1 | a2\n 38244: a0 = a0 | a3\n 38247: a0 = a0 | a1\n 38250: jump [t0]\n      : @1205 (gas: 8)\n 38252: a1 = sp + 0xffffffffffffffe0\n 38255: a1 = a1 & 0xffffffffffffffe0\n 38258: u64 [s1 + 0x120] = a1\n 38262: sp = a1\n 38264: i32 a0 = a0 + 0\n 38266: i32 a2 = a1 + 0\n 38268: a1 = 0x40\n 38271: jump [t0]\n      : @1206 (gas: 12)\n 38273: a5 = s1 + 0x100\n 38277: a2 = u64 [a5 + 0x50]\n 38280: a0 = u64 [a5 + 0x48]\n 38283: a3 = u64 [a5 + 0x40]\n 38286: a3 = a3 | a0\n 38289: a4 = 0x100000000\n 38299: a0 = 0xfffffffc\n 38309: a0 = a2 <u a0\n 38312: a1 = u64 [a5 + 0x58]\n 38315: a0 = 0 if a1 != 0\n 38317: a0 = 0 if a3 != 0\n 38319: jump [t0]\n      : @1207 (gas: 22)\n 38321: a4 = u64 [s1 + 0x158]\n 38325: a2 = a4 <u 0x80\n 38329: a3 = u64 [s1 + 0xf8]\n 38333: a1 = a3 if a2 != 0\n 38336: a5 = u64 [s1 + 0x100]\n 38340: a3 = u64 [s1 + 0x110]\n 38344: a3 = a3 | a5\n 38347: a3 = a0 if a2 == 0\n 38350: a1 = 0xffffffffffffffff if a4 == 0\n 38353: a3 = 0xffffffffffffffff if a4 == 0\n 38356: a4 = u64 [s1 + 0x108]\n 38360: a4 = 0 if a2 == 0\n 38362: a5 = 0 if a2 == 0\n 38364: a0 = u64 [s1 + 0x118]\n 38368: a2 = a0 & ~a3\n 38371: a0 = u64 [s1 + 0x120]\n 38375: a0 = a0 & ~a1\n 38378: a1 = u64 [s1 + 0x128]\n 38382: a1 = a1 & ~a5\n 38385: a3 = u64 [s1 + 0x130]\n 38389: a3 = a3 & ~a4\n 38392: jump [t0]\n      : @1208 (gas: 9)\n 38394: a0 = 0xffffffbc\n 38404: a2 = s1 + 0x100\n 38408: a1 = u64 [a2 + 0x50]\n 38411: a0 = a1 <u a0\n 38414: a1 = u64 [a2 + 0x58]\n 38417: a0 = 0 if a1 != 0\n 38419: a1 = u64 [a2 + 0x48]\n 38422: a0 = 0 if a1 != 0\n 38424: jump [t0]\n      : @1209 (gas: 19)\n 38426: a3 = u64 [s1 + 0x130]\n 38430: a3 = a3 | a1\n 38433: a2 = u64 [s1 + 0x158]\n 38437: a4 = a2 <u 0x80\n 38441: u64 [s1 + 0x130] = a4\n 38445: a1 = u64 [s1 + 0x150]\n 38449: a3 = a1 if a4 == 0\n 38452: a3 = 0xffffffffffffffff if a2 == 0\n 38455: u64 [s1 + 0x150] = a3\n 38459: a3 = u64 [s1 + 0x138]\n 38463: a3 = a3 | a0\n 38466: a0 = u64 [s1 + 0x148]\n 38470: a3 = a0 if a4 == 0\n 38473: a3 = 0xffffffffffffffff if a2 == 0\n 38476: u64 [s1 + 0x158] = a3\n 38480: a0 = 0xffffffffffffffff\n 38483: a1 = 0xffffffffffffffff\n 38486: a2 = u64 [s1 + 0x140]\n 38490: jump [t0]\n      : @1210 (gas: 11)\n 38492: a3 = u64 [s1 + 0x158]\n 38496: a0 = u64 [a3 + 0x18]\n 38499: a1 = u64 [a3 + 0x10]\n 38502: a2 = u64 [a3 + 0x8]\n 38505: a3 = u64 [a3]\n 38507: a4 = reverse a0\n 38509: a0 = reverse a1\n 38511: a1 = reverse a2\n 38513: a2 = reverse a3\n 38515: a3 = s1 + 0x20d8\n 38519: jump [t0]\n      : @1211 (gas: 21)\n 38521: a0 = reverse a0\n 38523: a3 = a0 >> 0x20\n 38526: a1 = reverse a1\n 38528: a4 = a1 << 0x20\n 38531: a3 = a3 | a4\n 38534: a0 = a0 << 0x20\n 38537: a2 = reverse a2\n 38539: a2 = a2 >> 0x20\n 38542: a0 = a0 | a2\n 38545: a1 = a1 >> 0x20\n 38548: a2 = u64 [s1 + 0x110]\n 38552: a1 = a1 ^ a2\n 38555: a2 = u64 [s1 + 0x118]\n 38559: a0 = a0 ^ a2\n 38562: a0 = a0 | a1\n 38565: a1 = u64 [s1 + 0x120]\n 38569: a1 = a1 ^ a3\n 38572: a0 = a0 | a1\n 38575: a0 = a0 <u 0x1\n 38578: a1 = s1 + 0x30d8\n 38582: jump [t0]\n      : @1212 (gas: 11)\n 38584: a2 = u64 [s1 + 0x150]\n 38588: a2 = a2 + 0x1\n 38591: a0 = a2 <u 0x1\n 38594: a1 = u64 [s1 + 0x148]\n 38598: a1 = a1 + a0\n 38601: u64 [s1 + 0x150] = a2\n 38605: u64 [s1 + 0x148] = a1\n 38609: a0 = a2 | a1\n 38612: a0 = a0 <u 0x1\n 38615: a1 = u64 [s1 + 0x138]\n 38619: jump [t0]\n      : @1213 (gas: 10)\n 38621: a0 = u64 [a3 + 0x18]\n 38624: a1 = u64 [a3 + 0x10]\n 38627: a2 = u64 [a3 + 0x8]\n 38630: a3 = u64 [a3]\n 38632: a4 = reverse a0\n 38634: a0 = reverse a1\n 38636: a1 = reverse a2\n 38638: a2 = reverse a3\n 38640: a3 = s1 + 0x30d8\n 38644: jump [t0]\n      : @1214 (gas: 10)\n 38646: a1 = s1 + 0x100\n 38650: a4 = u64 [a1 + 0x48]\n 38653: a3 = u64 [a1 + 0x50]\n 38656: a2 = u64 [a1 + 0x58]\n 38659: a0 = u64 [a1 + 0x40]\n 38662: a0 = a0 + 0xffffffffffffffdc\n 38665: a0 = a3 <u a0\n 38668: a0 = 0 if a2 != 0\n 38670: a0 = 0 if a4 != 0\n 38672: jump [t0]\n      : @1215 (gas: 5)\n 38674: sp = a1\n 38676: i32 a0 = a0 + 0\n 38678: i32 a2 = a1 + 0\n 38680: a1 = 0x20\n 38683: jump [t0]\n      : @1216 (gas: 9)\n 38685: a0 = u64 [a3 + 0x18]\n 38688: a1 = u64 [a3 + 0x10]\n 38691: a2 = u64 [a3 + 0x8]\n 38694: a3 = u64 [a3]\n 38696: a4 = reverse a0\n 38698: a0 = reverse a1\n 38700: a1 = reverse a2\n 38702: a2 = reverse a3\n 38704: jump [t0]\n      : @1217 (gas: 7)\n 38706: a1 = u64 [a2 + 0x58]\n 38709: a0 = a1 <u a0\n 38712: a1 = u64 [a2 + 0x50]\n 38715: a0 = 0 if a1 != 0\n 38717: a1 = u64 [a2 + 0x48]\n 38720: a0 = 0 if a1 != 0\n 38722: jump [t0]\n      : @1218 (gas: 15)\n 38724: a5 = a5 + a2\n 38727: a4 = a5 <u a2\n 38730: a2 = a2 <u t2\n 38733: a0 = a0 + a2\n 38736: a0 = a0 + a4\n 38739: a2 = a1 | a5\n 38742: a0 = a0 | a3\n 38745: a2 = a2 | a0\n 38748: a2 = a2 >> 0x20\n 38751: a0 = a0 | a5\n 38754: a0 = a0 << 0x20\n 38757: a0 = a0 | a2\n 38760: u64 [s1 + 0x158] = t1\n 38764: u64 [s1 + 0x100] = t2\n 38768: jump [t0]\n      : @1219 (gas: 14)\n 38770: a3 = a4 <u a3\n 38773: a5 = a0 + a3\n 38776: a0 = a5 <u a0\n 38779: a0 = a3 if a3 == 0\n 38782: a0 = a0 + a2\n 38785: a2 = a0 <u a2\n 38788: a2 = a2 + a1\n 38791: u64 [sp + 0x40] = a4\n 38794: u64 [sp + 0x48] = a5\n 38797: u64 [sp + 0x50] = a0\n 38800: a0 = 0x40\n 38803: a1 = sp + a0\n 38806: u64 [sp + 0x58] = a2\n 38809: jump [t0]\n      : @1220 (gas: 8)\n 38811: u64 [sp + 48] = 0\n 38814: u64 [sp + 40] = 0\n 38817: u64 [sp + 32] = 0\n 38820: a0 = 0x4e487b7100000000\n 38830: a1 = sp + 0x20\n 38833: u64 [sp + 0x38] = a0\n 38836: a0 = 0\n 38838: jump [t0]\n      : @1221 (gas: 10)\n 38840: a3 = a0 >u 0\n 38842: a4 = a5 <u 0x100\n 38846: a4 = a4 ^ 0x1\n 38849: a4 = a3 if a0 != 0\n 38852: a0 = a2 >u 0\n 38854: a3 = a1 >u 0\n 38856: a3 = a0 if a2 != 0\n 38859: a1 = a1 | a2\n 38862: a4 = a3 if a1 != 0\n 38865: jump [t0]\n      : @1222 (gas: 16)\n 38867: a2 = u64 [a1]\n 38869: a3 = u64 [a1 + 0x8]\n 38872: a4 = u64 [a1 + 0x10]\n 38875: a1 = u64 [a1 + 0x18]\n 38878: u64 [s1 + 0x38] = a0\n 38881: u64 [s1 + 0x30] = a1\n 38884: u64 [s1 + 0xd8] = a1\n 38888: u64 [s1 + 0x18] = a4\n 38891: u64 [s1 + 0xd0] = a4\n 38895: u64 [s1 + 0x20] = a3\n 38898: u64 [s1 + 0xc8] = a3\n 38902: a0 = s1 + 0xe0\n 38906: a1 = s1 + 0xc0\n 38910: u64 [s1 + 0x28] = a2\n 38913: u64 [s1 + 0xc0] = a2\n 38917: jump [t0]\n      : @1223 (gas: 13)\n 38919: a0 = u64 [a5 + 0xa0]\n 38923: u64 [s1 + 0x148] = a0\n 38927: a2 = u64 [a5 + 0x98]\n 38931: u64 [s1 + 0x140] = a2\n 38935: a4 = u64 [a5 + 0x90]\n 38939: u64 [s1 + 0x150] = a4\n 38943: a3 = u64 [a5 + 0x88]\n 38947: u64 [s1 + 0x158] = a3\n 38951: u64 [a5 + 0x80] = a0\n 38955: u64 [a5 + 0x78] = a2\n 38958: u64 [a5 + 0x70] = a4\n 38961: a0 = 0x2000\n 38965: jump [t0]\n      : @1224 (gas: 16)\n 38967: a1 = u64 [s1 + 0x38]\n 38970: a2 = 0\n 38972: u64 [a1 + 56] = 0\n 38975: u64 [a1 + 48] = 0\n 38978: u64 [a1 + 40] = 0\n 38981: u64 [a1 + 32] = 0\n 38984: u64 [a1] = a5\n 38986: u64 [a1 + 0x8] = a4\n 38989: u64 [a1 + 0x10] = a3\n 38992: u64 [a1 + 0x18] = a0\n 38995: sp = s0 + 0xfffffffffffffee0\n 38999: ra = u64 [sp + 0x118]\n 39003: s0 = u64 [sp + 0x110]\n 39007: s1 = u64 [sp + 0x108]\n 39011: sp = sp + 0x120\n 39015: jump [t0]\n      : @1225 (gas: 11)\n 39017: a3 = u64 [s1 + 0x158]\n 39021: a0 = u64 [a3 + 0x18]\n 39024: a1 = u64 [a3 + 0x10]\n 39027: a2 = u64 [a3 + 0x8]\n 39030: a3 = u64 [a3]\n 39032: a4 = reverse a0\n 39034: a0 = reverse a1\n 39036: a1 = reverse a2\n 39038: a2 = reverse a3\n 39040: a3 = 0x1000\n 39044: jump [t0]\n      : @1226 (gas: 13)\n 39046: a5 = a5 + a2\n 39049: a4 = a5 <u a2\n 39052: a2 = a2 <u t2\n 39055: a0 = a0 + a2\n 39058: a0 = a0 + a4\n 39061: a2 = a1 | a5\n 39064: a0 = a0 | a3\n 39067: a2 = a2 | a0\n 39070: a2 = a2 >> 0x20\n 39073: a0 = a0 | a5\n 39076: a0 = a0 << 0x20\n 39079: a0 = a0 | a2\n 39082: jump [t0]\n      : @1227 (gas: 11)\n 39084: a0 = reverse a0\n 39086: a3 = a0 << 0x20\n 39089: a1 = reverse a1\n 39091: a1 = a1 >> 0x20\n 39094: a3 = a3 | a1\n 39097: a0 = a0 >> 0x20\n 39100: a1 = reverse a2\n 39102: a2 = a1 << 0x20\n 39105: a0 = a0 | a2\n 39108: a1 = a1 >> 0x20\n 39111: jump [t0]\n      : @1228 (gas: 8)\n 39113: u64 [s1 + 176] = 0\n 39117: u64 [s1 + 168] = 0\n 39121: u64 [s1 + 160] = 0\n 39125: a0 = 0x4e487b7100000000\n 39135: a1 = s1 + 0xa0\n 39139: u64 [s1 + 0xb8] = a0\n 39143: a0 = 0\n 39145: jump [t0]\n      : @1229 (gas: 7)\n 39147: a1 = u64 [a2 + 0x50]\n 39150: a0 = a1 <u a0\n 39153: a1 = u64 [a2 + 0x48]\n 39156: a0 = 0 if a1 != 0\n 39158: a1 = u64 [a2 + 0x58]\n 39161: a0 = 0 if a1 != 0\n 39163: jump [t0]\n      : @1230 (gas: 9)\n 39165: a2 = a2 | a0\n 39168: a3 = 0x100000000\n 39178: a0 = 0xffffffe0\n 39188: a1 = u64 [a4 + 0x58]\n 39191: a0 = a1 <u a0\n 39194: a1 = u64 [a4 + 0x50]\n 39197: a0 = 0 if a1 != 0\n 39199: a0 = 0 if a2 != 0\n 39201: jump [t0]\n      : @1231 (gas: 10)\n 39203: a0 = u64 [sp + 0x10]\n 39206: a1 = u64 [sp + 0x18]\n 39209: a2 = 0x100000000\n 39219: a2 = a2 ^ a0\n 39222: a2 = a2 | a1\n 39225: a3 = a0 >> 0x20\n 39228: a3 = a3 <u 0x1\n 39231: a3 = 0 if a1 != 0\n 39233: a3 = 0 if a2 == 0\n 39235: jump [t0]\n      : @1232 (gas: 13)\n 39237: a2 = s1 + 0x100\n 39241: a1 = u64 [a2 + 0x50]\n 39244: a0 = u64 [a2 + 0x40]\n 39247: a0 = a0 | a1\n 39250: a3 = u64 [a2 + 0x48]\n 39253: a1 = u64 [a2 + 0x58]\n 39256: a1 = a1 | a3\n 39259: a1 = a1 | a0\n 39262: a1 = a1 >> 0x20\n 39265: a0 = a0 | a3\n 39268: a0 = a0 << 0x20\n 39271: a0 = a0 | a1\n 39274: jump [t0]\n      : @1233 (gas: 13)\n 39276: a3 = s1 + 0x100\n 39280: a0 = u64 [a3 + 0x48]\n 39283: a1 = u64 [a3 + 0x50]\n 39286: a0 = a0 | a1\n 39289: a2 = u64 [a3 + 0x40]\n 39292: a1 = u64 [a3 + 0x58]\n 39295: a1 = a1 | a2\n 39298: a1 = a1 | a0\n 39301: a1 = a1 >> 0x20\n 39304: a0 = a0 | a2\n 39307: a0 = a0 << 0x20\n 39310: a0 = a0 | a1\n 39313: jump [t0]\n      : @1234 (gas: 10)\n 39315: u64 [s1 + 0x100] = a0\n 39319: u64 [s1 + 0x108] = a1\n 39323: a0 = u64 [s1 + 0xf8]\n 39327: a0 = a0 | a1\n 39330: u64 [s1 + 0xf8] = a0\n 39334: a0 = u64 [s1 + 0x158]\n 39338: a2 = a0 + 0xffffffffffffff80\n 39341: a0 = 0xffffffffffffffff\n 39344: a1 = 0xffffffffffffffff\n 39347: jump [t0]\n      : @1235 (gas: 7)\n 39349: a2 = a0 | a4\n 39352: a2 = a2 | a1\n 39355: a1 = a1 | a4\n 39358: a2 = a2 >> 0x20\n 39361: a1 = a1 << 0x20\n 39364: a1 = a1 | a2\n 39367: jump [t0]\n      : @1236 (gas: 6)\n 39369: sp = s0 + 0xffffffffffffffa0\n 39372: ra = u64 [sp + 0x58]\n 39375: s0 = u64 [sp + 0x50]\n 39378: s1 = u64 [sp + 0x48]\n 39381: sp = sp + 0x60\n 39384: jump [t0]\n      : @1237 (gas: 11)\n 39386: sp = sp + 0xffffffffffffff90\n 39389: u64 [sp + 0x68] = ra\n 39392: u64 [sp + 0x60] = s0\n 39395: s0 = sp + 0x70\n 39398: sp = sp & 0xfffffffffffffff0\n 39401: a1 = u64 [a0 + 0x18]\n 39404: a2 = u64 [a0 + 0x10]\n 39407: a3 = u64 [a0]\n 39409: a0 = u64 [a0 + 0x8]\n 39412: a4 = a2 | a1\n 39415: jump [t0]\n      : @1238 (gas: 7)\n 39417: a3 = u64 [s1 + 0x158]\n 39421: a0 = u64 [a3 + 0x18]\n 39424: a1 = u64 [a3 + 0x10]\n 39427: a2 = u64 [a3 + 0x8]\n 39430: a3 = u64 [a3]\n 39432: a0 = reverse a0\n 39434: jump [t0]\n      : @1239 (gas: 7)\n 39436: u64 [s1 + 0x138] = a0\n 39440: u64 [s1 + 0x130] = a1\n 39444: a1 = u64 [s1 + 0x158]\n 39448: i32 a2 = 0x80 - a1\n 39452: a0 = 0xffffffffffffffff\n 39455: a1 = 0xffffffffffffffff\n 39458: jump [t0]\n      : @1240 (gas: 12)\n 39460: a2 = u64 [sp]\n 39462: a3 = u64 [sp + 0x8]\n 39465: u64 [s1] = a2\n 39467: u64 [s1 + 0x8] = a3\n 39470: u64 [s1 + 0x10] = a0\n 39473: u64 [s1 + 0x18] = a1\n 39476: sp = s0 + 0xffffffffffffffc0\n 39479: ra = u64 [sp + 0x38]\n 39482: s0 = u64 [sp + 0x30]\n 39485: s1 = u64 [sp + 0x28]\n 39488: sp = sp + 0x40\n 39491: jump [t0]\n      : @1241 (gas: 8)\n 39493: a0 = a0 | a2\n 39496: a2 = a4 | a1\n 39499: a2 = a2 | a0\n 39502: a2 = a2 >> 0x20\n 39505: a0 = a0 | a1\n 39508: a0 = a0 << 0x20\n 39511: a0 = a0 | a2\n 39514: jump [t0]\n      : @1242 (gas: 8)\n 39516: a4 = a4 | a2\n 39519: a2 = a0 | a1\n 39522: a2 = a2 | a4\n 39525: a2 = a2 >> 0x20\n 39528: a1 = a1 | a4\n 39531: a1 = a1 << 0x20\n 39534: a1 = a1 | a2\n 39537: jump [t0]\n      : @1243 (gas: 4)\n 39539: a2 = a3 + a1\n 39542: a3 = a2 <u a3\n 39545: a3 = a1 if a1 == 0\n 39548: jump [t0]\n      : @1244 (gas: 7)\n 39550: a0 = a0 << 0x3b\n 39553: a1 = a0 >> 0x38\n 39556: u64 [s1 + 0x158] = a1\n 39560: a2 = 0x80 - a1\n 39564: a0 = 0xffffffffffffffff\n 39567: a1 = 0xffffffffffffffff\n 39570: jump [t0]\n      : @1245 (gas: 7)\n 39572: a1 = u64 [s1 + 0x108]\n 39576: a0 = a1 <u a0\n 39579: a1 = u64 [s1 + 0xf8]\n 39583: a0 = 0 if a1 != 0\n 39585: a1 = u64 [s1 + 0x100]\n 39589: a0 = 0 if a1 != 0\n 39591: jump [t0]\n      : @1246 (gas: 11)\n 39593: a0 = u64 [s1 + 0x28]\n 39596: u64 [s1 + 0x60] = a0\n 39599: a0 = u64 [s1 + 0x20]\n 39602: u64 [s1 + 0x68] = a0\n 39605: a0 = u64 [s1 + 0x18]\n 39608: u64 [s1 + 0x70] = a0\n 39611: a1 = s1 + 0x60\n 39614: a0 = u64 [s1 + 0x30]\n 39617: u64 [s1 + 0x78] = a0\n 39620: a0 = 0\n 39622: jump [t0]\n      : @1247 (gas: 4)\n 39624: i32 a1 = a0 + 0\n 39626: a0 = 0x1\n 39629: a2 = 0x24\n 39632: jump [t0]\n      : @1248 (gas: 4)\n 39634: a0 = u64 [s1 + 0x140]\n 39638: a1 = 0x30d8\n 39642: a2 = s1 + a1\n 39645: jump [t0]\n      : @1249 (gas: 7)\n 39647: a0 = a0 + 0xffffffffffffffc0\n 39650: a1 = u64 [a3 + 0x58]\n 39653: a0 = a1 <u a0\n 39656: a1 = u64 [a3 + 0x50]\n 39659: a0 = 0 if a1 != 0\n 39661: a0 = 0 if a2 != 0\n 39663: jump [t0]\n      : @1250 (gas: 8)\n 39665: a2 = 0\n 39667: u64 [s1 + 152] = 0\n 39671: u64 [s1 + 144] = 0\n 39675: u64 [s1 + 128] = 0x32\n 39680: a0 = 0x4\n 39683: a1 = s1 + 0x80\n 39687: u64 [s1 + 136] = 0\n 39691: jump [t0]\n      : @1251 (gas: 4)\n 39693: a0 = u64 [s1 + 0x158]\n 39697: a0 = i32 [a0]\n 39699: a1 = 0x23\n 39702: jump [t0]\n      : @1252 (gas: 9)\n 39704: sp = sp + 0xffffffffffffffc0\n 39707: u64 [sp + 0x38] = ra\n 39710: u64 [sp + 0x30] = s0\n 39713: u64 [sp + 0x28] = s1\n 39716: s0 = sp + 0x40\n 39719: sp = sp & 0xffffffffffffffe0\n 39722: s1 = a0\n 39724: i32 a0 = sp + 0\n 39726: jump [t0]\n      : @1253 (gas: 4)\n 39728: a0 = 0x38d8\n 39732: a3 = s1 + a0\n 39735: a4 = a3 + 0x200\n 39739: jump [t0]\n      : @1254 (gas: 6)\n 39741: a3 = a3 + a1\n 39744: a1 = a3 <u a1\n 39747: a4 = u64 [s1 + 0x140]\n 39751: a4 = a4 + a1\n 39754: a1 = s1 + 0x18d8\n 39758: jump [t0]\n      : @1255 (gas: 2)\n 39760: a3 = a2 & 0x40\n 39763: jump @1259 if a3 != 0\n      : @1256 (gas: 1)\n 39766: jump @1258 if a2 == 0\n      : @1257 (gas: 6)\n 39769: i32 a3 = 0x40 - a2\n 39772: a3 = a1 << a3\n 39775: a1 = a1 >> a2\n 39778: a0 = a0 >> a2\n 39781: a0 = a0 | a3\n 39784: ret\n      : @1258 (gas: 1)\n 39786: ret\n      : @1259 (gas: 4)\n 39788: a0 = a2 + 0xffffffffffffffc0\n 39791: a0 = a1 >> a0\n 39794: a1 = 0\n 39796: ret\n      : @1260 (gas: 2)\n 39798: a3 = a2 & 0x40\n 39801: jump @1264 if a3 != 0\n      : @1261 (gas: 1)\n 39804: jump @1263 if a2 == 0\n      : @1262 (gas: 6)\n 39807: i32 a3 = 0x40 - a2\n 39810: a3 = a0 >> a3\n 39813: a0 = a0 << a2\n 39816: a1 = a1 << a2\n 39819: a1 = a1 | a3\n 39822: ret\n      : @1263 (gas: 1)\n 39824: ret\n      : @1264 (gas: 4)\n 39826: a1 = a2 + 0xffffffffffffffc0\n 39829: a1 = a0 << a1\n 39832: a0 = 0\n 39834: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"assignUserRole(address)":"859c62bd","canAccessContract(uint256,address)":"d17fb93e","getContractMeta(uint256)":"4f8ff2ba","getHistory(uint256,uint256)":"6906679b","getHistoryCount(uint256)":"afa8880e","getLatestHash(uint256)":"7c71654a","getUploaderHistory(address)":"4a971cf7","getUserInfo(address)":"6386c1c7","grantAccessToContract(uint256,address)":"cc826a1d","isHashExists(bytes32)":"3bd4c457","owner()":"8da5cb5b","revokeAccessFromContract(uint256,address)":"a125d423","uploadContract(uint256,bytes32,string,string)":"010f4549"}},"irOptimized":"/// @use-src 0:\"contracts/ContractVerifier.sol\", 2:\"contracts/interfaces/IContractVerifier.sol\"\nobject \"ContractVerifier_396\" {\n    code {\n        {\n            /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:645:663  \"owner = msg.sender\" */ 0x00, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ or(and(sload(/** @src 0:645:663  \"owner = msg.sender\" */ 0x00), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:653:663  \"msg.sender\" */ caller()))\n            /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n            let _2 := datasize(\"ContractVerifier_396_deployed\")\n            codecopy(_1, dataoffset(\"ContractVerifier_396_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/ContractVerifier.sol\"\n    object \"ContractVerifier_396_deployed\" {\n        code {\n            {\n                /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x010f4549 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let value_1 := calldataload(36)\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        let value2, value3 := abi_decode_string_calldata(add(4, offset), calldatasize())\n                        let offset_1 := calldataload(100)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let value4, value5 := abi_decode_string_calldata(add(4, offset_1), calldatasize())\n                        mstore(0, /** @src 0:3806:3816  \"msg.sender\" */ caller())\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        mstore(32, 1)\n                        finalize_allocation(_1, sub(abi_encode_bytes_storage_ptr(keccak256(0, 64), _1), _1))\n                        if iszero(/** @src 0:3779:3849  \"keccak256(bytes(_userInfos[msg.sender].role)) == keccak256(\\\"Uploader\\\")\" */ eq(/** @src 0:3779:3824  \"keccak256(bytes(_userInfos[msg.sender].role))\" */ keccak256(/** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ add(/** @src 0:3779:3824  \"keccak256(bytes(_userInfos[msg.sender].role))\" */ _1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 32), mload(/** @src 0:3779:3824  \"keccak256(bytes(_userInfos[msg.sender].role))\" */ _1)), /** @src 0:3828:3849  \"keccak256(\\\"Uploader\\\")\" */ 0x35381eefa9dbd87bb7976eea5b33f7df38a53bffa748fffdf317fc5a4b1b1dbf))\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 12)\n                            mstore(add(memPtr, 68), \"Not uploader\")\n                            revert(memPtr, 100)\n                        }\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_14887(memPtr_1)\n                        mstore(memPtr_1, value_1)\n                        /// @src 0:1210:1371  \"ContractVersion({...\"\n                        let _2 := add(memPtr_1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 32)\n                        mstore(_2, /** @src 0:3806:3816  \"msg.sender\" */ caller())\n                        /// @src 0:1210:1371  \"ContractVersion({...\"\n                        let _3 := add(memPtr_1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 64)\n                        mstore(_3, /** @src 0:1317:1332  \"block.timestamp\" */ timestamp())\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let size := 0\n                        if gt(value3, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        size := add(and(add(value3, 31), not(31)), 32)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, size)\n                        mstore(memPtr_2, value3)\n                        if gt(add(value2, value3), calldatasize()) { revert(0, 0) }\n                        calldatacopy(add(memPtr_2, 32), value2, value3)\n                        mstore(add(add(memPtr_2, value3), 32), 0)\n                        /// @src 0:1210:1371  \"ContractVersion({...\"\n                        let _4 := add(memPtr_1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 96)\n                        mstore(_4, memPtr_2)\n                        mstore(0, value)\n                        mstore(32, /** @src 0:1382:1398  \"_contractHistory\" */ 0x02)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let oldLen := sload(dataSlot)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(dataSlot, add(oldLen, 1))\n                        let slot, offset_2 := storage_array_index_access_struct_ContractVersion__dyn_ptr(dataSlot, oldLen)\n                        if offset_2\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, 36)\n                        }\n                        sstore(slot, mload(memPtr_1))\n                        let memberSlot := add(slot, 1)\n                        sstore(memberSlot, or(and(sload(memberSlot), shl(160, 0xffffffffffffffffffffffff)), and(mload(_2), sub(shl(160, 1), 1))))\n                        sstore(add(slot, /** @src 0:1382:1398  \"_contractHistory\" */ 0x02), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ mload(_3))\n                        let memberSlot_1 := add(slot, 3)\n                        let _5 := mload(_4)\n                        let newLen := mload(_5)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(memberSlot_1, extract_byte_array_length(sload(memberSlot_1)), newLen)\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, memberSlot_1)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, mload(add(_5, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(_5, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(memberSlot_1, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_2 := 0\n                            if newLen\n                            {\n                                value_2 := mload(add(_5, srcOffset))\n                            }\n                            sstore(memberSlot_1, extract_used_part_and_set_length_of_short_byte_array(value_2, newLen))\n                        }\n                        mstore(0, value)\n                        mstore(32, /** @src 0:1382:1398  \"_contractHistory\" */ 0x02)\n                        /// @src 0:1434:1559  \"if (_contractHistory[contractId].length == 1) {...\"\n                        if /** @src 0:1438:1478  \"_contractHistory[contractId].length == 1\" */ eq(/** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ sload(keccak256(0, 64)), 1)\n                        /// @src 0:1434:1559  \"if (_contractHistory[contractId].length == 1) {...\"\n                        {\n                            /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                            mstore(0, value)\n                            mstore(32, 3)\n                            let dataSlot_1 := keccak256(0, 64)\n                            if gt(value5, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            clean_up_bytearray_end_slots_string_storage(dataSlot_1, extract_byte_array_length(sload(dataSlot_1)), value5)\n                            let srcOffset_1 := 0\n                            switch gt(value5, 31)\n                            case 1 {\n                                let loopEnd_1 := and(value5, not(31))\n                                mstore(srcOffset_1, dataSlot_1)\n                                let dstPtr_1 := keccak256(srcOffset_1, 32)\n                                let i_1 := srcOffset_1\n                                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                                {\n                                    sstore(dstPtr_1, calldataload(add(value4, srcOffset_1)))\n                                    dstPtr_1 := add(dstPtr_1, 1)\n                                    srcOffset_1 := add(srcOffset_1, 32)\n                                }\n                                if lt(loopEnd_1, value5)\n                                {\n                                    sstore(dstPtr_1, and(calldataload(add(value4, srcOffset_1)), not(shr(and(shl(3, value5), 248), not(0)))))\n                                }\n                                sstore(dataSlot_1, add(shl(1, value5), 1))\n                            }\n                            default {\n                                let value_3 := 0\n                                if value5\n                                {\n                                    value_3 := calldataload(add(value4, srcOffset_1))\n                                }\n                                sstore(dataSlot_1, extract_used_part_and_set_length_of_short_byte_array(value_3, value5))\n                            }\n                        }\n                        mstore(0, value_1)\n                        mstore(32, 4)\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, or(and(sload(dataSlot_2), not(255)), 1))\n                        mstore(0, /** @src 0:3806:3816  \"msg.sender\" */ caller())\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        mstore(32, /** @src 0:1607:1627  \"_uploaderToContracts\" */ 0x05)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        let oldLen_1 := sload(dataSlot_3)\n                        if iszero(lt(oldLen_1, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(dataSlot_3, add(oldLen_1, 1))\n                        let slot_1, offset_3 := storage_array_index_access_uint256_dyn_ptr(dataSlot_3, oldLen_1)\n                        let _6 := sload(slot_1)\n                        let shiftBits := shl(3, offset_3)\n                        sstore(slot_1, or(and(_6, not(shl(shiftBits, not(0)))), shl(shiftBits, value)))\n                        /// @src 0:1672:1722  \"ContractUploaded(contractId, fileHash, msg.sender)\"\n                        let _7 := /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ mload(64)\n                        mstore(_7, value_1)\n                        /// @src 0:1672:1722  \"ContractUploaded(contractId, fileHash, msg.sender)\"\n                        log3(_7, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 32, /** @src 0:1672:1722  \"ContractUploaded(contractId, fileHash, msg.sender)\" */ 0xcae274b5fbde0daad458f7946840bb0bbf5c01191f2b6d4902d5c6bfe08cf40c, value, /** @src 0:3806:3816  \"msg.sender\" */ caller())\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        return(0, 0)\n                    }\n                    case 0x3bd4c457 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let value_4 := and(sload(keccak256(0, 64)), 0xff)\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(value_4)))\n                        return(memPos, 32)\n                    }\n                    case 0x4a971cf7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_14888(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:3598:3618  \"_uploaderToContracts\" */ 0x05)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        let pos := mload(64)\n                        let memPtr_3 := pos\n                        let length := sload(dataSlot_4)\n                        mstore(pos, length)\n                        pos := add(pos, 32)\n                        let updated_pos := pos\n                        mstore(0, dataSlot_4)\n                        let srcPtr := keccak256(0, 32)\n                        let i_2 := 0\n                        for { } lt(i_2, length) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, 32)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr_3, sub(pos, memPtr_3))\n                        let memPos_1 := mload(64)\n                        let tail := add(memPos_1, 32)\n                        mstore(memPos_1, 32)\n                        let pos_1 := tail\n                        let length_1 := mload(memPtr_3)\n                        mstore(tail, length_1)\n                        pos_1 := add(memPos_1, 64)\n                        let srcPtr_1 := updated_pos\n                        let i_3 := 0\n                        for { } lt(i_3, length_1) { i_3 := add(i_3, 1) }\n                        {\n                            mstore(pos_1, mload(srcPtr_1))\n                            pos_1 := add(pos_1, 32)\n                            srcPtr_1 := add(srcPtr_1, 32)\n                        }\n                        return(memPos_1, sub(pos_1, memPos_1))\n                    }\n                    case 0x4f8ff2ba {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        pop(allocate_and_zero_memory_struct_struct_ContractMeta())\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:3317:3331  \"_contractMetas\" */ 0x03)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        let memPtr_4 := mload(64)\n                        finalize_allocation_14889(memPtr_4)\n                        let memPtr_5 := mload(64)\n                        finalize_allocation(memPtr_5, sub(abi_encode_bytes_storage_ptr(dataSlot_5, memPtr_5), memPtr_5))\n                        mstore(memPtr_4, memPtr_5)\n                        let _8 := add(dataSlot_5, 1)\n                        let pos_2 := mload(64)\n                        let memPtr_6 := pos_2\n                        let length_2 := sload(_8)\n                        mstore(pos_2, length_2)\n                        pos_2 := add(pos_2, 32)\n                        mstore(0, _8)\n                        let srcPtr_2 := keccak256(0, 32)\n                        let i_4 := 0\n                        for { } lt(i_4, length_2) { i_4 := add(i_4, 1) }\n                        {\n                            mstore(pos_2, and(sload(srcPtr_2), sub(shl(160, 1), 1)))\n                            pos_2 := add(pos_2, 32)\n                            srcPtr_2 := add(srcPtr_2, 1)\n                        }\n                        finalize_allocation(memPtr_6, sub(pos_2, memPtr_6))\n                        let _9 := add(memPtr_4, 32)\n                        mstore(_9, memPtr_6)\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 32)\n                        let memberValue0 := mload(memPtr_4)\n                        mstore(add(memPos_2, 32), 64)\n                        let tail_1 := abi_encode_string(memberValue0, add(memPos_2, 96))\n                        let memberValue0_1 := mload(_9)\n                        mstore(add(memPos_2, 64), add(sub(tail_1, memPos_2), not(31)))\n                        let pos_3 := tail_1\n                        let length_3 := mload(memberValue0_1)\n                        mstore(tail_1, length_3)\n                        pos_3 := add(tail_1, 32)\n                        let srcPtr_3 := add(memberValue0_1, 32)\n                        let i_5 := 0\n                        for { } lt(i_5, length_3) { i_5 := add(i_5, 1) }\n                        {\n                            mstore(pos_3, and(mload(srcPtr_3), sub(shl(160, 1), 1)))\n                            pos_3 := add(pos_3, 32)\n                            srcPtr_3 := add(srcPtr_3, 32)\n                        }\n                        return(memPos_2, sub(pos_3, memPos_2))\n                    }\n                    case 0x6386c1c7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0 := abi_decode_address_14888()\n                        pop(allocate_and_zero_memory_struct_struct_ContractMeta())\n                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:953:963  \"_userInfos\" */ 0x01)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        let memPtr_7 := mload(64)\n                        finalize_allocation_14889(memPtr_7)\n                        let memPtr_8 := mload(64)\n                        finalize_allocation(memPtr_8, sub(abi_encode_bytes_storage_ptr(dataSlot_6, memPtr_8), memPtr_8))\n                        mstore(memPtr_7, memPtr_8)\n                        let memPtr_9 := mload(64)\n                        finalize_allocation(memPtr_9, sub(abi_encode_bytes_storage_ptr(add(dataSlot_6, /** @src 0:953:963  \"_userInfos\" */ 0x01), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ memPtr_9), memPtr_9))\n                        let _10 := add(memPtr_7, 32)\n                        mstore(_10, memPtr_9)\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, 32)\n                        let memberValue0_2 := mload(memPtr_7)\n                        mstore(add(memPos_3, 32), 64)\n                        let tail_2 := abi_encode_string(memberValue0_2, add(memPos_3, 96))\n                        let memberValue0_3 := mload(_10)\n                        mstore(add(memPos_3, 64), add(sub(tail_2, memPos_3), not(31)))\n                        return(memPos_3, sub(abi_encode_string(memberValue0_3, tail_2), memPos_3))\n                    }\n                    case 0x6906679b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        let value_6 := calldataload(36)\n                        let memPtr_10 := mload(64)\n                        finalize_allocation_14887(memPtr_10)\n                        mstore(memPtr_10, 0)\n                        mstore(add(memPtr_10, 32), 0)\n                        mstore(add(memPtr_10, 64), 0)\n                        mstore(add(memPtr_10, 96), 96)\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:3080:3096  \"_contractHistory\" */ 0x02)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        if iszero(/** @src 0:3070:3115  \"version < _contractHistory[contractId].length\" */ lt(value_6, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ sload(keccak256(0, 64))))\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 15)\n                            mstore(add(memPtr_11, 68), \"Invalid version\")\n                            revert(memPtr_11, 100)\n                        }\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:3080:3096  \"_contractHistory\" */ 0x02)\n                        /// @src 0:3152:3189  \"_contractHistory[contractId][version]\"\n                        let _11, _12 := storage_array_index_access_struct_ContractVersion__dyn_ptr(/** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ keccak256(0, 64), /** @src 0:3152:3189  \"_contractHistory[contractId][version]\" */ value_6)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let memPtr_12 := mload(64)\n                        finalize_allocation_14887(memPtr_12)\n                        mstore(memPtr_12, sload(_11))\n                        let cleaned := and(sload(add(_11, 1)), sub(shl(160, 1), 1))\n                        let _13 := add(memPtr_12, 32)\n                        mstore(_13, cleaned)\n                        let _14 := sload(add(_11, /** @src 0:3080:3096  \"_contractHistory\" */ 0x02))\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let _15 := add(memPtr_12, 64)\n                        mstore(_15, _14)\n                        let memPtr_13 := mload(64)\n                        finalize_allocation(memPtr_13, sub(abi_encode_bytes_storage_ptr(add(_11, 3), memPtr_13), memPtr_13))\n                        let _16 := add(memPtr_12, 96)\n                        mstore(_16, memPtr_13)\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, 32)\n                        mstore(add(memPos_4, 32), mload(memPtr_12))\n                        mstore(add(memPos_4, 64), and(mload(_13), sub(shl(160, 1), 1)))\n                        mstore(add(memPos_4, 96), mload(_15))\n                        let memberValue0_4 := mload(_16)\n                        mstore(add(memPos_4, 128), 128)\n                        return(memPos_4, sub(abi_encode_string(memberValue0_4, add(memPos_4, 160)), memPos_4))\n                    }\n                    case 0x7c71654a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        mstore(0, value_7)\n                        mstore(32, /** @src 0:2627:2643  \"_contractHistory\" */ 0x02)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let length_4 := sload(keccak256(0, 64))\n                        if /** @src 0:2680:2687  \"len > 0\" */ iszero(length_4)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 32)\n                            mstore(add(memPtr_14, 36), 20)\n                            mstore(add(memPtr_14, 68), \"No contract uploaded\")\n                            revert(memPtr_14, 100)\n                        }\n                        mstore(0, value_7)\n                        mstore(32, /** @src 0:2627:2643  \"_contractHistory\" */ 0x02)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        let diff := add(length_4, not(0))\n                        if gt(diff, length_4)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:2729:2766  \"_contractHistory[contractId][len - 1]\"\n                        let _17, _18 := storage_array_index_access_struct_ContractVersion__dyn_ptr(dataSlot_7, /** @src 0:2758:2765  \"len - 1\" */ diff)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let _19 := sload(/** @src 0:2729:2775  \"_contractHistory[contractId][len - 1].fileHash\" */ _17)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _19)\n                        return(memPos_5, 32)\n                    }\n                    case 0x859c62bd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_14888()\n                        /// @src 0:3672:3713  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 0:3680:3699  \"msg.sender == owner\" */ eq(/** @src 0:3680:3690  \"msg.sender\" */ caller(), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        let memPtr_15 := mload(64)\n                        finalize_allocation_14889(memPtr_15)\n                        let size_1 := 0\n                        let _20 := size_1\n                        _20 := size_1\n                        size_1 := 64\n                        let memPtr_16 := mload(size_1)\n                        finalize_allocation(memPtr_16, size_1)\n                        mstore(memPtr_16, 8)\n                        mstore(add(memPtr_16, 32), \"Uploader\")\n                        mstore(memPtr_15, memPtr_16)\n                        let size_2 := 0\n                        let _21 := 0\n                        _21 := 0\n                        size_2 := size_1\n                        let memPtr_17 := mload(size_1)\n                        finalize_allocation(memPtr_17, size_1)\n                        mstore(memPtr_17, 3)\n                        mstore(add(memPtr_17, 32), \"DPT\")\n                        /// @src 0:767:794  \"UserInfo(\\\"Uploader\\\", \\\"DPT\\\")\"\n                        let _22 := add(memPtr_15, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 32)\n                        mstore(_22, memPtr_17)\n                        let _23 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _23)\n                        mstore(32, /** @src 0:748:758  \"_userInfos\" */ 0x01)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_8 := keccak256(0, size_1)\n                        let _24 := mload(memPtr_15)\n                        let newLen_1 := mload(_24)\n                        if gt(newLen_1, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(dataSlot_8, extract_byte_array_length(sload(dataSlot_8)), newLen_1)\n                        let srcOffset_2 := 0\n                        srcOffset_2 := 32\n                        switch gt(newLen_1, 31)\n                        case 1 {\n                            let loopEnd_2 := and(newLen_1, not(31))\n                            mstore(0, dataSlot_8)\n                            let dstPtr_2 := keccak256(0, srcOffset_2)\n                            let i_6 := 0\n                            for { } lt(i_6, loopEnd_2) { i_6 := add(i_6, 32) }\n                            {\n                                sstore(dstPtr_2, mload(add(_24, srcOffset_2)))\n                                dstPtr_2 := add(dstPtr_2, /** @src 0:748:758  \"_userInfos\" */ 0x01)\n                                /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                                srcOffset_2 := add(srcOffset_2, 32)\n                            }\n                            if lt(loopEnd_2, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(_24, srcOffset_2))\n                                sstore(dstPtr_2, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(dataSlot_8, add(shl(/** @src 0:748:758  \"_userInfos\" */ 0x01, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ newLen_1), /** @src 0:748:758  \"_userInfos\" */ 0x01))\n                        }\n                        default /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        {\n                            let value_8 := 0\n                            if newLen_1\n                            {\n                                value_8 := mload(add(_24, srcOffset_2))\n                            }\n                            sstore(dataSlot_8, extract_used_part_and_set_length_of_short_byte_array(value_8, newLen_1))\n                        }\n                        let memberSlot_2 := add(dataSlot_8, /** @src 0:748:758  \"_userInfos\" */ 0x01)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let _25 := mload(_22)\n                        let newLen_2 := mload(_25)\n                        if gt(newLen_2, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(memberSlot_2, extract_byte_array_length(sload(memberSlot_2)), newLen_2)\n                        let srcOffset_3 := 0\n                        srcOffset_3 := 32\n                        switch gt(newLen_2, 31)\n                        case 1 {\n                            let loopEnd_3 := and(newLen_2, not(31))\n                            mstore(0, memberSlot_2)\n                            let dstPtr_3 := keccak256(0, srcOffset_3)\n                            let i_7 := 0\n                            for { } lt(i_7, loopEnd_3) { i_7 := add(i_7, 32) }\n                            {\n                                sstore(dstPtr_3, mload(add(_25, srcOffset_3)))\n                                dstPtr_3 := add(dstPtr_3, /** @src 0:748:758  \"_userInfos\" */ 0x01)\n                                /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                                srcOffset_3 := add(srcOffset_3, 32)\n                            }\n                            if lt(loopEnd_3, newLen_2)\n                            {\n                                let lastValue_2 := mload(add(_25, srcOffset_3))\n                                sstore(dstPtr_3, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                            }\n                            sstore(memberSlot_2, add(shl(/** @src 0:748:758  \"_userInfos\" */ 0x01, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ newLen_2), /** @src 0:748:758  \"_userInfos\" */ 0x01))\n                        }\n                        default /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        {\n                            let value_9 := 0\n                            if newLen_2\n                            {\n                                value_9 := mload(add(_25, srcOffset_3))\n                            }\n                            sstore(memberSlot_2, extract_used_part_and_set_length_of_short_byte_array(value_9, newLen_2))\n                        }\n                        /// @src 0:805:842  \"RoleAssigned(user, \\\"Uploader\\\", \\\"DPT\\\")\"\n                        let _26 := /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ mload(size_1)\n                        mstore(_26, size_1)\n                        mstore(add(_26, size_1), 8)\n                        mstore(add(_26, 96), \"Uploader\")\n                        mstore(add(_26, 32), 128)\n                        mstore(add(_26, 128), 3)\n                        mstore(add(_26, 160), \"DPT\")\n                        /// @src 0:805:842  \"RoleAssigned(user, \\\"Uploader\\\", \\\"DPT\\\")\"\n                        log2(_26, 192, 0x7d315bd33deef052e737fec65730430bf652bae987f78489e48dccc4275db4eb, _23)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_10 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_10)\n                        return(memPos_6, 32)\n                    }\n                    case 0xa125d423 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_11 := calldataload(4)\n                        let value1 := abi_decode_address()\n                        /// @src 0:3672:3713  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 0:3680:3699  \"msg.sender == owner\" */ eq(/** @src 0:3680:3690  \"msg.sender\" */ caller(), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        mstore(0, value_11)\n                        mstore(32, /** @src 0:2193:2208  \"_contractAccess\" */ 0x06)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        /// @src 0:2193:2226  \"_contractAccess[contractId][user]\"\n                        let dataSlot_10 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(/** @src 0:2193:2226  \"_contractAccess[contractId][user]\" */ value1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2193:2220  \"_contractAccess[contractId]\" */ dataSlot_9)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        dataSlot_10 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x40)\n                        if iszero(and(sload(/** @src 0:2193:2226  \"_contractAccess[contractId][user]\" */ dataSlot_10), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0xff))\n                        {\n                            let memPtr_18 := mload(64)\n                            mstore(memPtr_18, shl(229, 4594637))\n                            mstore(add(memPtr_18, 4), 32)\n                            mstore(add(memPtr_18, 36), 11)\n                            mstore(add(memPtr_18, 68), \"Not granted\")\n                            revert(memPtr_18, 100)\n                        }\n                        mstore(0, value_11)\n                        mstore(32, /** @src 0:2193:2208  \"_contractAccess\" */ 0x06)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_11 := keccak256(0, 64)\n                        /// @src 0:2252:2285  \"_contractAccess[contractId][user]\"\n                        let dataSlot_12 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(/** @src 0:2252:2285  \"_contractAccess[contractId][user]\" */ value1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2252:2279  \"_contractAccess[contractId]\" */ dataSlot_11)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        dataSlot_12 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x40)\n                        sstore(/** @src 0:2252:2285  \"_contractAccess[contractId][user]\" */ dataSlot_12, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(sload(/** @src 0:2252:2285  \"_contractAccess[contractId][user]\" */ dataSlot_12), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ not(255)))\n                        /// @src 0:2308:2347  \"ContractAccessRevoked(contractId, user)\"\n                        log3(/** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0, 0, /** @src 0:2308:2347  \"ContractAccessRevoked(contractId, user)\" */ 0xc1722b50995799c719fc885220eac644f626487f653cb8ddc1c63fcf6468dc33, value_11, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(/** @src 0:2308:2347  \"ContractAccessRevoked(contractId, user)\" */ value1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ sub(shl(160, 1), 1)))\n                        return(0, 0)\n                    }\n                    case 0xafa8880e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:2891:2907  \"_contractHistory\" */ 0x02)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let length_5 := sload(keccak256(0, 64))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, length_5)\n                        return(memPos_7, 32)\n                    }\n                    case 0xcc826a1d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_12 := calldataload(4)\n                        let value1_1 := abi_decode_address()\n                        /// @src 0:3672:3713  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 0:3680:3699  \"msg.sender == owner\" */ eq(/** @src 0:3680:3690  \"msg.sender\" */ caller(), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        mstore(0, value_12)\n                        mstore(32, /** @src 0:1847:1862  \"_contractAccess\" */ 0x06)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_13 := keccak256(0, 64)\n                        /// @src 0:1847:1880  \"_contractAccess[contractId][user]\"\n                        let dataSlot_14 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(/** @src 0:1847:1880  \"_contractAccess[contractId][user]\" */ value1_1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:1847:1874  \"_contractAccess[contractId]\" */ dataSlot_13)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        dataSlot_14 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x40)\n                        if iszero(/** @src 0:1846:1880  \"!_contractAccess[contractId][user]\" */ iszero(/** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(sload(/** @src 0:1847:1880  \"_contractAccess[contractId][user]\" */ dataSlot_14), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0xff)))\n                        {\n                            let memPtr_19 := mload(64)\n                            mstore(memPtr_19, shl(229, 4594637))\n                            mstore(add(memPtr_19, 4), 32)\n                            mstore(add(memPtr_19, 36), 15)\n                            mstore(add(memPtr_19, 68), \"Already granted\")\n                            revert(memPtr_19, 100)\n                        }\n                        mstore(0, value_12)\n                        mstore(32, /** @src 0:1847:1862  \"_contractAccess\" */ 0x06)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_15 := keccak256(0, 64)\n                        /// @src 0:1910:1943  \"_contractAccess[contractId][user]\"\n                        let dataSlot_16 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(/** @src 0:1910:1943  \"_contractAccess[contractId][user]\" */ value1_1, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:1910:1937  \"_contractAccess[contractId]\" */ dataSlot_15)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        dataSlot_16 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x40)\n                        sstore(/** @src 0:1910:1943  \"_contractAccess[contractId][user]\" */ dataSlot_16, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ or(and(sload(/** @src 0:1910:1943  \"_contractAccess[contractId][user]\" */ dataSlot_16), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ not(255)), 1))\n                        mstore(0, value_12)\n                        mstore(32, /** @src 0:1960:1974  \"_contractMetas\" */ 0x03)\n                        /// @src 0:1960:2001  \"_contractMetas[contractId].allowedViewers\"\n                        let _27 := add(/** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ keccak256(0, 64), 1)\n                        let oldLen_2 := sload(_27)\n                        if iszero(lt(oldLen_2, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        sstore(_27, add(oldLen_2, 1))\n                        let slot_2, offset_4 := storage_array_index_access_uint256_dyn_ptr(_27, oldLen_2)\n                        let _28 := and(value1_1, sub(shl(160, 1), 1))\n                        let _29 := sload(slot_2)\n                        let shiftBits_1 := shl(/** @src 0:1960:1974  \"_contractMetas\" */ 0x03, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ offset_4)\n                        sstore(slot_2, or(and(_29, not(shl(shiftBits_1, sub(shl(160, 1), 1)))), shl(shiftBits_1, _28)))\n                        /// @src 0:2027:2066  \"ContractAccessGranted(contractId, user)\"\n                        log3(/** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0, 0, /** @src 0:2027:2066  \"ContractAccessGranted(contractId, user)\" */ 0xe61b482a5b201b9edee07cc4b5fa3824816a942e7ecb77196725025efdc13f26, value_12, _28)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        return(0, 0)\n                    }\n                    case 0xd17fb93e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:2476:2491  \"_contractAccess\" */ 0x06)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        let dataSlot_17 := keccak256(0, 64)\n                        /// @src 0:2476:2509  \"_contractAccess[contractId][user]\"\n                        let dataSlot_18 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ and(value1_2, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2476:2503  \"_contractAccess[contractId]\" */ dataSlot_17)\n                        /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                        dataSlot_18 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x40)\n                        let value_13 := and(sload(/** @src 0:2476:2509  \"_contractAccess[contractId][user]\" */ dataSlot_18), /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0xff)\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, iszero(iszero(value_13)))\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_string_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_decode_address_14888() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_bytes_storage_ptr(value, pos) -> ret\n            {\n                let slotValue := sload(value)\n                let length := extract_byte_array_length(slotValue)\n                mstore(pos, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(pos, 0x20), and(slotValue, not(255)))\n                    ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ value)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(pos, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(pos, i), 0x20)\n                }\n            }\n            function finalize_allocation_14887(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_14889(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function storage_array_index_access_struct_ContractVersion__dyn_ptr(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x20)\n                slot := add(data, shl(2, index))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    let _1 := add(data, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _1) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n            }\n            /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function storage_array_index_access_uint256_dyn_ptr(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:169:3886  \"contract ContractVerifier is IContractVerifier {...\"\n            function allocate_and_zero_memory_struct_struct_ContractMeta() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_14889(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, 96)\n                mstore(add(memPtr_1, 32), 96)\n            }\n            function require_helper_stringliteral_c266(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 9)\n                    mstore(add(memPtr, 68), \"Not owner\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a747e777d57e725093b443ceab6dd42a478a3c070b945564496e3a049cd841e664736f6c634300081c0033\"\n    }\n}\n","hash":"82afbe1e66beddc873939c7f8db740c660415f5c403ac15a83fe878b788f3c04","factoryDependencies":{}}},"contracts/Lock.sol":{"Lock":{"abi":[{"inputs":[{"internalType":"uint256","name":"_unlockTime","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.13+commit.ad33153.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lock.sol\":{\"keccak256\":\"0x3c36b5a83d533c3f095ac358675e9356c1761cd7f1e955ae23200203060419a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://864fae3ab9a941599f30667d484d94a34a0779f6e606110d2acdcf51c56c47e4\",\"dweb:/ipfs/QmXYat9EQBuwXsp4EcczzGTfML2ugVaYqiviiGoiZ9cgXr\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Darwin.appleclang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 104/65664 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 1231\n// Code size = 4036 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20068]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20068] = a1\n    42: a1 = 0x20080\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20080\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 2)\n    64: a1 = i32 [0x20070]\n    69: jump @38 if a1 == 0\n      : @9 (gas: 4)\n    73: a0 = 0x30080\n    78: i32 a0 = a0 + 0\n    80: ecalli 12 // 'set_immutable_data'\n    82: jump @38\n      : @10 (gas: 7)\n    85: sp = sp + 0xfffffffffffffff0\n    88: u64 [sp + 0x8] = ra\n    91: u64 [sp] = s0\n    93: s0 = a0\n    95: i32 a0 = a1 + 0\n    97: a1 = 0x20\n   100: ra = 2, jump @0\n      : @11 [@dyn 1] (gas: 100)\n   104: a1 = u8 [a0 + 0x1]\n   107: a2 = u8 [a0]\n   109: a3 = u8 [a0 + 0x2]\n   112: a4 = u8 [a0 + 0x3]\n   115: a1 = a1 << 0x8\n   118: a1 = a1 | a2\n   121: a3 = a3 << 0x10\n   124: a4 = a4 << 0x18\n   127: a3 = a3 | a4\n   130: a1 = a1 | a3\n   133: a2 = u8 [a0 + 0x5]\n   136: a3 = u8 [a0 + 0x4]\n   139: a4 = u8 [a0 + 0x6]\n   142: a5 = u8 [a0 + 0x7]\n   145: a2 = a2 << 0x8\n   148: a2 = a2 | a3\n   151: a4 = a4 << 0x10\n   154: a5 = a5 << 0x18\n   157: a4 = a4 | a5\n   160: a2 = a2 | a4\n   163: a2 = a2 << 0x20\n   166: t0 = a2 | a1\n   169: a2 = u8 [a0 + 0x9]\n   172: a3 = u8 [a0 + 0x8]\n   175: a4 = u8 [a0 + 0xa]\n   178: a5 = u8 [a0 + 0xb]\n   181: a2 = a2 << 0x8\n   184: a2 = a2 | a3\n   187: a4 = a4 << 0x10\n   190: a5 = a5 << 0x18\n   193: a4 = a4 | a5\n   196: a2 = a2 | a4\n   199: a3 = u8 [a0 + 0xd]\n   202: a4 = u8 [a0 + 0xc]\n   205: a5 = u8 [a0 + 0xe]\n   208: a1 = u8 [a0 + 0xf]\n   211: a3 = a3 << 0x8\n   214: a3 = a3 | a4\n   217: a5 = a5 << 0x10\n   220: a1 = a1 << 0x18\n   223: a1 = a1 | a5\n   226: a1 = a1 | a3\n   229: a1 = a1 << 0x20\n   232: t1 = a1 | a2\n   235: a1 = u8 [a0 + 0x11]\n   238: a3 = u8 [a0 + 0x10]\n   241: a4 = u8 [a0 + 0x12]\n   244: a5 = u8 [a0 + 0x13]\n   247: a1 = a1 << 0x8\n   250: a1 = a1 | a3\n   253: a4 = a4 << 0x10\n   256: a5 = a5 << 0x18\n   259: a4 = a4 | a5\n   262: a1 = a1 | a4\n   265: a3 = u8 [a0 + 0x15]\n   268: a4 = u8 [a0 + 0x14]\n   271: a5 = u8 [a0 + 0x16]\n   274: a2 = u8 [a0 + 0x17]\n   277: a3 = a3 << 0x8\n   280: a3 = a3 | a4\n   283: a5 = a5 << 0x10\n   286: a2 = a2 << 0x18\n   289: a2 = a2 | a5\n   292: a2 = a2 | a3\n   295: a2 = a2 << 0x20\n   298: a3 = a2 | a1\n   301: a1 = u8 [a0 + 0x19]\n   304: a2 = u8 [a0 + 0x18]\n   307: a4 = u8 [a0 + 0x1a]\n   310: a5 = u8 [a0 + 0x1b]\n   313: a1 = a1 << 0x8\n   316: a1 = a1 | a2\n   319: a4 = a4 << 0x10\n   322: a5 = a5 << 0x18\n   325: a4 = a4 | a5\n   328: a1 = a1 | a4\n   331: a2 = u8 [a0 + 0x1d]\n   334: a4 = u8 [a0 + 0x1c]\n   337: a5 = u8 [a0 + 0x1e]\n   340: a0 = u8 [a0 + 0x1f]\n   343: a2 = a2 << 0x8\n   346: a2 = a2 | a4\n   349: a5 = a5 << 0x10\n   352: a0 = a0 << 0x18\n   355: a0 = a0 | a5\n   358: a0 = a0 | a2\n   361: a0 = a0 << 0x20\n   364: a0 = a0 | a1\n   367: a0 = reverse a0\n   369: a1 = reverse a3\n   371: a2 = reverse t1\n   373: a3 = reverse t0\n   375: u64 [s0 + 0x18] = a3\n   378: u64 [s0 + 0x10] = a2\n   381: u64 [s0 + 0x8] = a1\n   384: u64 [s0] = a0\n   386: ra = u64 [sp + 0x8]\n   389: s0 = u64 [sp]\n   391: sp = sp + 0x10\n   394: ret\n      : @12 (gas: 13)\n   396: sp = sp + 0xffffffffffffffd8\n   399: u64 [sp + 0x20] = ra\n   402: u64 [sp + 0x18] = s0\n   405: u64 [sp + 0x10] = s1\n   408: a2 = u64 [a1]\n   410: u64 [sp + 0x8] = a2\n   413: a2 = u64 [a1 + 0x8]\n   416: u64 [sp] = a2\n   418: s0 = u64 [a1 + 0x10]\n   421: s1 = u64 [a1 + 0x18]\n   424: i32 a0 = a0 + 0\n   426: a1 = 0x20\n   429: ra = 4, jump @0\n      : @13 [@dyn 2] (gas: 71)\n   434: a1 = reverse s1\n   436: a2 = reverse s0\n   438: a3 = u64 [sp]\n   440: a3 = reverse a3\n   442: a4 = u64 [sp + 0x8]\n   445: a4 = reverse a4\n   447: u8 [a0 + 0x18] = a4\n   450: u8 [a0 + 0x10] = a3\n   453: u8 [a0 + 0x8] = a2\n   456: u8 [a0] = a1\n   458: a5 = a4 >> 0x38\n   461: u8 [a0 + 0x1f] = a5\n   464: a5 = a4 >> 0x30\n   467: u8 [a0 + 0x1e] = a5\n   470: a5 = a4 >> 0x28\n   473: u8 [a0 + 0x1d] = a5\n   476: a5 = a4 >> 0x20\n   479: u8 [a0 + 0x1c] = a5\n   482: a5 = a4 >> 0x18\n   485: u8 [a0 + 0x1b] = a5\n   488: a5 = a4 >> 0x10\n   491: u8 [a0 + 0x1a] = a5\n   494: a4 = a4 >> 0x8\n   497: u8 [a0 + 0x19] = a4\n   500: a4 = a3 >> 0x38\n   503: u8 [a0 + 0x17] = a4\n   506: a4 = a3 >> 0x30\n   509: u8 [a0 + 0x16] = a4\n   512: a4 = a3 >> 0x28\n   515: u8 [a0 + 0x15] = a4\n   518: a4 = a3 >> 0x20\n   521: u8 [a0 + 0x14] = a4\n   524: a4 = a3 >> 0x18\n   527: u8 [a0 + 0x13] = a4\n   530: a4 = a3 >> 0x10\n   533: u8 [a0 + 0x12] = a4\n   536: a3 = a3 >> 0x8\n   539: u8 [a0 + 0x11] = a3\n   542: a3 = a2 >> 0x38\n   545: u8 [a0 + 0xf] = a3\n   548: a3 = a2 >> 0x30\n   551: u8 [a0 + 0xe] = a3\n   554: a3 = a2 >> 0x28\n   557: u8 [a0 + 0xd] = a3\n   560: a3 = a2 >> 0x20\n   563: u8 [a0 + 0xc] = a3\n   566: a3 = a2 >> 0x18\n   569: u8 [a0 + 0xb] = a3\n   572: a3 = a2 >> 0x10\n   575: u8 [a0 + 0xa] = a3\n   578: a2 = a2 >> 0x8\n   581: u8 [a0 + 0x9] = a2\n   584: a2 = a1 >> 0x38\n   587: u8 [a0 + 0x7] = a2\n   590: a2 = a1 >> 0x30\n   593: u8 [a0 + 0x6] = a2\n   596: a2 = a1 >> 0x28\n   599: u8 [a0 + 0x5] = a2\n   602: a2 = a1 >> 0x20\n   605: u8 [a0 + 0x4] = a2\n   608: a2 = a1 >> 0x18\n   611: u8 [a0 + 0x3] = a2\n   614: a2 = a1 >> 0x10\n   617: u8 [a0 + 0x2] = a2\n   620: a1 = a1 >> 0x8\n   623: u8 [a0 + 0x1] = a1\n   626: ra = u64 [sp + 0x20]\n   629: s0 = u64 [sp + 0x18]\n   632: s1 = u64 [sp + 0x10]\n   635: sp = sp + 0x28\n   638: ret\n      : @14 (gas: 43)\n   640: sp = sp + 0xffffffffffffffa0\n   643: u64 [sp + 0x58] = ra\n   646: u64 [sp + 0x50] = s0\n   649: u64 [sp + 0x48] = s1\n   652: s0 = sp + 0x60\n   655: sp = sp & 0xffffffffffffffe0\n   658: s1 = a0\n   660: a0 = u64 [a1 + 0x18]\n   663: a2 = u64 [a1 + 0x10]\n   666: a3 = u64 [a1 + 0x8]\n   669: a1 = u64 [a1]\n   671: a0 = reverse a0\n   673: a2 = reverse a2\n   675: a3 = reverse a3\n   677: a1 = reverse a1\n   679: u64 [sp + 0x18] = a1\n   682: u64 [sp + 0x10] = a3\n   685: u64 [sp + 0x8] = a2\n   688: u64 [sp] = a0\n   690: u64 [sp + 56] = 0\n   693: u64 [sp + 48] = 0\n   696: u64 [sp + 40] = 0\n   699: u64 [sp + 32] = 0\n   702: u32 [sp + 64] = 0x20\n   706: i32 a1 = sp + 0\n   708: i32 a3 = sp + 0x20\n   711: i32 a4 = sp + 0x40\n   714: a2 = 0xffffffffffffffff\n   717: a0 = 0\n   719: ecalli 7 // 'get_storage'\n   721: a0 = u64 [sp + 0x38]\n   724: a1 = u64 [sp + 0x30]\n   727: a2 = u64 [sp + 0x28]\n   730: a3 = u64 [sp + 0x20]\n   733: a0 = reverse a0\n   735: a1 = reverse a1\n   737: a2 = reverse a2\n   739: a3 = reverse a3\n   741: u64 [s1 + 0x18] = a3\n   744: u64 [s1 + 0x10] = a2\n   747: u64 [s1 + 0x8] = a1\n   750: u64 [s1] = a0\n   752: t0 = 6, jump @152\n      : @15 [@dyn 3] (gas: 1)\n   757: ret\n      : @16 (gas: 37)\n   759: sp = sp + 0xffffffffffffffa0\n   762: u64 [sp + 0x58] = ra\n   765: u64 [sp + 0x50] = s0\n   768: u64 [sp + 0x48] = s1\n   771: s0 = sp + 0x60\n   774: sp = sp & 0xffffffffffffffe0\n   777: t0 = u64 [a1]\n   779: t1 = u64 [a1 + 0x8]\n   782: a4 = u64 [a1 + 0x10]\n   785: a1 = u64 [a1 + 0x18]\n   788: a5 = u64 [a0 + 0x18]\n   791: a2 = u64 [a0 + 0x10]\n   794: a3 = u64 [a0 + 0x8]\n   797: a0 = u64 [a0]\n   799: s1 = reverse a5\n   801: a2 = reverse a2\n   803: a3 = reverse a3\n   805: a0 = reverse a0\n   807: t2 = reverse a1\n   809: a4 = reverse a4\n   811: a1 = reverse t1\n   813: a5 = reverse t0\n   815: u64 [sp + 0x18] = a0\n   818: u64 [sp + 0x10] = a3\n   821: u64 [sp + 0x8] = a2\n   824: u64 [sp] = s1\n   826: u64 [sp + 0x38] = a5\n   829: u64 [sp + 0x30] = a1\n   832: u64 [sp + 0x28] = a4\n   835: u64 [sp + 0x20] = t2\n   838: i32 a1 = sp + 0\n   840: i32 a3 = sp + 0x20\n   843: a2 = 0xffffffffffffffff\n   846: a4 = 0x20\n   849: a0 = 0\n   851: ecalli 13 // 'set_storage'\n   853: t0 = 8, jump @152\n      : @17 [@dyn 4] (gas: 1)\n   858: ret\n      : @18 [@dyn 5] (gas: 18)\n   860: a1 = u64 [sp]\n   862: a1 = reverse a1\n   864: a2 = u64 [sp + 0x8]\n   867: a2 = reverse a2\n   869: a3 = u64 [sp + 0x10]\n   872: a3 = reverse a3\n   874: a4 = u64 [sp + 0x18]\n   877: a4 = reverse a4\n   879: u64 [sp + 0x38] = a4\n   882: u64 [sp + 0x30] = a3\n   885: u64 [sp + 0x28] = a2\n   888: u64 [sp + 0x20] = a1\n   891: i32 a2 = a0 + 0\n   893: i32 a0 = sp + 0x20\n   896: a1 = 0x1\n   899: a3 = s1\n   901: ecalli 6 // 'deposit_event'\n   903: t0 = 12, jump @152\n      : @19 [@dyn 6] (gas: 1)\n   908: ret\n      : @20 (gas: 6)\n   910: sp = sp + 0xfffffffffffffff0\n   913: u64 [sp + 0x8] = ra\n   916: u64 [sp] = s0\n   918: s0 = a0 & 0x1\n   921: ecalli 4 // 'call_data_size'\n   923: fallthrough\n      : @21 (gas: 2)\n   924: u32 [0x2006c] = a0\n   929: jump @23 if s0 == 0\n      : @22 (gas: 1)\n   932: ra = 14, jump @24\n      : @23 [@dyn 7] (gas: 1)\n   936: ra = 16, jump @56\n      : @24 [@dyn 8] (gas: 23)\n   941: sp = sp + 0xfffffffffffffd80\n   945: a0 = sp + 0x200\n   949: u64 [a0 + 0x78] = ra\n   952: u64 [a0 + 0x70] = s0\n   955: u64 [a0 + 0x68] = s1\n   958: s0 = sp + 0x280\n   962: sp = sp & 0xffffffffffffffe0\n   965: s1 = i32 [0x2006c]\n   970: a0 = s1 << 0x20\n   973: a0 = a0 >> 0x20\n   976: a0 = a0 + 0x1f\n   979: a0 = a0 & 0xffffffffffffffe0\n   982: a1 = a0 + 0x80\n   986: a0 = a1 <u a0\n   989: a2 = sp + 0x200\n   993: u64 [a2] = a1\n   995: u64 [a2 + 0x8] = a0\n   998: a0 = 0 if a0 != 0\n  1000: u64 [a2 + 0x10] = a0\n  1003: a0 = 0x40\n  1006: a1 = sp + 0x200\n  1010: u64 [a2 + 24] = 0\n  1013: ra = 18, jump @12\n      : @25 [@dyn 9] (gas: 3)\n  1018: a0 = 0x80\n  1022: a1 = s1\n  1024: ra = 20, jump @0\n      : @26 [@dyn 10] (gas: 5)\n  1029: i32 a0 = a0 + 0\n  1031: a1 = s1\n  1033: a2 = 0\n  1035: ecalli 2 // 'call_data_copy'\n  1037: fallthrough\n      : @27 (gas: 1)\n  1038: jump @51 if s1 <=u 31\n      : @28 (gas: 3)\n  1043: a0 = sp + 0x1e0\n  1047: a1 = 0x80\n  1051: ra = 22, jump @10\n      : @29 [@dyn 11] (gas: 10)\n  1056: a0 = u64 [sp + 0x1f8]\n  1060: u64 [sp + 0x38] = a0\n  1063: s1 = u64 [sp + 0x1f0]\n  1067: a0 = u64 [sp + 0x1e8]\n  1071: u64 [sp + 0x30] = a0\n  1074: a0 = u64 [sp + 0x1e0]\n  1078: u64 [sp + 0x28] = a0\n  1081: i32 a0 = sp + 0x220\n  1085: ecalli 8 // 'now'\n  1087: fallthrough\n      : @30 (gas: 20)\n  1088: t2 = u64 [sp + 0x28]\n  1091: t1 = u64 [sp + 0x30]\n  1094: t0 = u64 [sp + 0x38]\n  1097: a4 = sp + 0x200\n  1101: a0 = u64 [a4 + 0x38]\n  1104: a1 = u64 [a4 + 0x20]\n  1107: a2 = u64 [a4 + 0x30]\n  1110: a3 = u64 [a4 + 0x28]\n  1113: a4 = a0 ^ t0\n  1116: a0 = a0 <u t0\n  1119: a5 = a2 <u s1\n  1122: a5 = a0 if a4 != 0\n  1125: a0 = a3 ^ t1\n  1128: a3 = a3 <u t1\n  1131: a1 = a1 <u t2\n  1134: a1 = a3 if a0 != 0\n  1137: a0 = a2 ^ s1\n  1140: a0 = a0 | a4\n  1143: a1 = a5 if a0 != 0\n  1146: jump @40 if a1 == 0\n      : @31 (gas: 11)\n  1150: u64 [sp + 0xe0] = t2\n  1154: u64 [sp + 280] = 0\n  1158: u64 [sp + 272] = 0\n  1162: u64 [sp + 264] = 0\n  1166: u64 [sp + 256] = 0\n  1170: u64 [sp + 0xe8] = t1\n  1174: u64 [sp + 0xf0] = s1\n  1178: a0 = sp + 0x100\n  1182: a1 = sp + 0xe0\n  1186: u64 [sp + 0xf8] = t0\n  1190: ra = 24, jump @16\n      : @32 [@dyn 12] (gas: 25)\n  1195: i32 a0 = sp + 0x240\n  1199: ecalli 5 // 'caller'\n  1201: a3 = sp + 0x200\n  1205: a0 = u64 [a3 + 0x48]\n  1208: a1 = i32 [a3 + 0x50]\n  1211: a2 = u64 [a3 + 0x40]\n  1214: a0 = reverse a0\n  1216: a3 = a0 << 0x20\n  1219: a1 = reverse a1\n  1221: a1 = a1 >> 0x20\n  1224: a1 = a1 | a3\n  1227: u64 [sp + 0x38] = a1\n  1230: a0 = a0 >> 0x20\n  1233: a1 = reverse a2\n  1235: a2 = a1 << 0x20\n  1238: a0 = a0 | a2\n  1241: u64 [sp + 0x30] = a0\n  1244: s1 = a1 >> 0x20\n  1247: u64 [sp + 184] = 0\n  1251: u64 [sp + 176] = 0\n  1255: u64 [sp + 168] = 0\n  1259: a0 = sp + 0xc0\n  1263: a1 = sp + 0xa0\n  1267: u64 [sp + 160] = 0x1\n  1272: ra = 26, jump @14\n      : @33 [@dyn 13] (gas: 17)\n  1277: a0 = u32 [sp + 0xd4]\n  1281: a1 = u64 [sp + 0xd8]\n  1285: a0 = a0 << 0x20\n  1288: s1 = s1 | a0\n  1291: u64 [sp + 0x78] = a1\n  1294: a0 = u64 [sp + 0x30]\n  1297: u64 [sp + 0x68] = a0\n  1300: a0 = u64 [sp + 0x38]\n  1303: u64 [sp + 0x60] = a0\n  1306: u64 [sp + 152] = 0\n  1310: u64 [sp + 144] = 0\n  1314: u64 [sp + 136] = 0\n  1318: u64 [sp + 128] = 0x1\n  1323: a0 = sp + 0x80\n  1327: a1 = sp + 0x60\n  1330: u64 [sp + 0x70] = s1\n  1333: ra = 28, jump @16\n      : @34 [@dyn 14] (gas: 3)\n  1338: a0 = sp + 0x40\n  1341: a1 = 0x40\n  1344: ra = 30, jump @10\n      : @35 [@dyn 15] (gas: 12)\n  1349: a0 = u64 [sp + 0x58]\n  1352: a1 = u64 [sp + 0x50]\n  1355: a2 = u64 [sp + 0x48]\n  1358: s1 = u64 [sp + 0x40]\n  1361: a0 = a0 | a2\n  1364: a2 = s1 | a1\n  1367: a2 = a2 | a0\n  1370: a2 = a2 >> 0x20\n  1373: a0 = a0 | a1\n  1376: a0 = a0 << 0x20\n  1379: a0 = a0 | a2\n  1382: jump @50 if a0 != 0\n      : @36 (gas: 4)\n  1386: i32 s1 = s1 + 0\n  1388: a0 = s1\n  1390: a1 = 0\n  1392: ra = 32, jump @0\n      : @37 [@dyn 16] (gas: 5)\n  1397: i32 a0 = a0 + 0\n  1399: a1 = 0\n  1401: a2 = 0\n  1403: ecalli 2 // 'call_data_copy'\n  1405: jump @8\n      : @38 (gas: 3)\n  1408: a0 = s1\n  1410: a1 = 0\n  1412: ra = 34, jump @0\n      : @39 [@dyn 17] (gas: 5)\n  1417: i32 a1 = a0 + 0\n  1419: a0 = 0\n  1421: a2 = 0\n  1423: ecalli 11 // 'seal_return'\n  1425: jump @53\n      : @40 (gas: 3)\n  1428: a0 = sp + 0x1c0\n  1432: a1 = 0x40\n  1435: ra = 36, jump @10\n      : @41 [@dyn 18] (gas: 12)\n  1440: a4 = u64 [sp + 0x1d8]\n  1444: s1 = u64 [sp + 0x1d0]\n  1448: a2 = u64 [sp + 0x1c8]\n  1452: a0 = u64 [sp + 0x1c0]\n  1456: a3 = a2 | a4\n  1459: a1 = a0 | s1\n  1462: a1 = a1 | a3\n  1465: a1 = a1 >> 0x20\n  1468: a3 = a3 | s1\n  1471: a3 = a3 << 0x20\n  1474: a1 = a1 | a3\n  1477: jump @50 if a1 != 0\n      : @42 (gas: 10)\n  1481: u64 [sp + 432] = 0\n  1485: u64 [sp + 424] = 0\n  1489: u64 [sp + 416] = 0\n  1493: a3 = 0x8c379a000000000\n  1503: a1 = sp + 0x1a0\n  1507: u64 [sp + 0x1b8] = a3\n  1511: u64 [sp + 0x38] = a2\n  1514: u64 [sp + 0x30] = a0\n  1517: u64 [sp + 0x28] = a4\n  1520: ra = 38, jump @12\n      : @43 [@dyn 19] (gas: 10)\n  1525: a2 = u64 [sp + 0x30]\n  1528: a3 = u64 [sp + 0x28]\n  1531: a3 = a3 | s1\n  1534: s1 = 0x100000000\n  1544: a0 = 0xfffffffc\n  1554: a0 = a2 <u a0\n  1557: a1 = u64 [sp + 0x38]\n  1560: a0 = 0 if a1 != 0\n  1562: a0 = 0 if a3 != 0\n  1564: jump @50 if a0 == 0\n      : @44 (gas: 10)\n  1568: i32 a0 = a2 + 0\n  1570: u64 [sp + 0x20] = a0\n  1573: i32 a0 = a0 + 0x4\n  1576: u64 [sp + 408] = 0\n  1580: u64 [sp + 400] = 0\n  1584: u64 [sp + 384] = 0x20\n  1589: a1 = sp + 0x180\n  1593: u64 [sp + 392] = 0\n  1597: u64 [sp + 0x28] = a3\n  1600: ra = 40, jump @12\n      : @45 [@dyn 20] (gas: 8)\n  1605: a0 = s1 + 0xffffffffffffffdc\n  1608: a1 = u64 [sp + 0x30]\n  1611: a0 = a1 <u a0\n  1614: a1 = u64 [sp + 0x38]\n  1617: a0 = 0 if a1 != 0\n  1619: a1 = u64 [sp + 0x28]\n  1622: a0 = 0 if a1 != 0\n  1624: jump @50 if a0 == 0\n      : @46 (gas: 8)\n  1628: a0 = u64 [sp + 0x20]\n  1631: i32 a0 = a0 + 0x24\n  1634: u64 [sp + 376] = 0\n  1638: u64 [sp + 368] = 0\n  1642: u64 [sp + 352] = 0x23\n  1647: a1 = sp + 0x160\n  1651: u64 [sp + 360] = 0\n  1655: ra = 42, jump @12\n      : @47 [@dyn 21] (gas: 9)\n  1660: s1 = u64 [sp + 0x28]\n  1663: a3 = u64 [sp + 0x30]\n  1666: a2 = u64 [sp + 0x38]\n  1669: a1 = 0x100000000\n  1679: a0 = 0xffffffbc\n  1689: a0 = a3 <u a0\n  1692: a0 = 0 if a2 != 0\n  1694: a0 = 0 if s1 != 0\n  1696: jump @50 if a0 == 0\n      : @48 (gas: 13)\n  1699: a0 = u64 [sp + 0x20]\n  1702: i32 a0 = a0 + 0x44\n  1705: u64 [sp + 0x18] = a1\n  1708: a1 = u64 [0x20000]\n  1713: u64 [sp + 0x158] = a1\n  1717: a1 = u64 [0x20008]\n  1722: a2 = u64 [0x20010]\n  1727: a3 = u64 [0x20018]\n  1732: u64 [sp + 0x150] = a1\n  1736: u64 [sp + 0x148] = a2\n  1740: a1 = sp + 0x140\n  1744: u64 [sp + 0x140] = a3\n  1748: ra = 44, jump @12\n      : @49 [@dyn 22] (gas: 8)\n  1753: a0 = u64 [sp + 0x18]\n  1756: a0 = a0 + 0xffffffffffffff9c\n  1759: a1 = u64 [sp + 0x30]\n  1762: a0 = a1 <u a0\n  1765: a1 = u64 [sp + 0x38]\n  1768: a0 = 0 if a1 != 0\n  1770: a0 = 0 if s1 != 0\n  1772: jump @53 if a0 != 0\n      : @50 (gas: 1)\n  1775: trap\n      : @51 (gas: 3)\n  1776: a0 = 0\n  1778: a1 = 0\n  1780: ra = 46, jump @0\n      : @52 [@dyn 23] (gas: 5)\n  1785: i32 a1 = a0 + 0\n  1787: a0 = 0x1\n  1790: a2 = 0\n  1792: ecalli 11 // 'seal_return'\n  1794: fallthrough\n      : @53 (gas: 9)\n  1795: s1 = u64 [sp + 0x20]\n  1798: i32 a0 = s1 + 0x64\n  1801: u64 [sp + 304] = 0\n  1805: u64 [sp + 296] = 0\n  1809: a1 = 0x7572650000000000\n  1819: u64 [sp + 0x138] = a1\n  1823: a1 = sp + 0x120\n  1827: u64 [sp + 288] = 0\n  1831: ra = 48, jump @12\n      : @54 [@dyn 24] (gas: 3)\n  1836: a1 = 0x84\n  1840: a0 = s1\n  1842: ra = 50, jump @0\n      : @55 [@dyn 25] (gas: 6)\n  1847: i32 a1 = a0 + 0\n  1849: a0 = 0x1\n  1852: a2 = 0x84\n  1856: ra = 0x34\n  1859: ecalli 11 // 'seal_return'\n  1861: fallthrough\n      : @56 [@dyn 26] (gas: 15)\n  1862: sp = sp + 0xfffffffffffffb20\n  1866: a0 = sp + 0x400\n  1870: u64 [a0 + 0xd8] = ra\n  1874: u64 [a0 + 0xd0] = s0\n  1878: u64 [a0 + 0xc8] = s1\n  1882: s0 = sp + 0x4e0\n  1886: sp = sp & 0xffffffffffffffe0\n  1889: s1 = sp\n  1891: u64 [s1 + 952] = 0\n  1895: u64 [s1 + 944] = 0\n  1899: u64 [s1 + 928] = 0x80\n  1905: a0 = 0x40\n  1908: a1 = s1 + 0x3a0\n  1912: u64 [s1 + 936] = 0\n  1916: ra = 54, jump @12\n      : @57 [@dyn 27] (gas: 4)\n  1921: a0 = 0x2006c\n  1926: u64 [s1 + 0x58] = a0\n  1929: a0 = i32 [0x2006c]\n  1934: jump @138 if a0 <u 4\n      : @58 (gas: 5)\n  1939: i32 a0 = s1 + 0x3c0\n  1943: a1 = 0\n  1945: ra = 0x38\n  1948: ecalli 3 // 'call_data_load'\n  1950: fallthrough\n      : @59 [@dyn 28] (gas: 2)\n  1951: a0 = i32 [s1 + 0x3dc]\n  1955: jump @69 if a0 != 2376452955\n      : @60 (gas: 1)\n  1963: t0 = 58, jump @147\n      : @61 [@dyn 29] (gas: 4)\n  1968: ra = 0x3c\n  1971: ecalli 14 // 'value_transferred'\n  1973: t0 = 0x3e\n  1976: jump @151\n      : @62 [@dyn 30] (gas: 1)\n  1979: t0 = 62, jump @151\n      : @63 [@dyn 31] (gas: 1)\n  1984: jump @138 if a0 != 0\n      : @64 (gas: 3)\n  1988: a0 = u64 [s1 + 0x58]\n  1991: a0 = i32 [a0]\n  1993: jump @138 if a0 <=u 3\n      : @65 (gas: 7)\n  1998: u64 [s1 + 888] = 0\n  2002: u64 [s1 + 880] = 0\n  2006: u64 [s1 + 864] = 0x1\n  2011: a0 = s1 + 0x380\n  2015: a1 = s1 + 0x360\n  2019: u64 [s1 + 872] = 0\n  2023: ra = 64, jump @14\n      : @66 [@dyn 32] (gas: 9)\n  2028: a0 = u64 [s1 + 0x390]\n  2032: u64 [s1 + 0x48] = a0\n  2035: a0 = u64 [s1 + 0x388]\n  2039: u64 [s1 + 0x58] = a0\n  2042: a0 = u64 [s1 + 0x380]\n  2046: u64 [s1 + 0x50] = a0\n  2049: a0 = s1 + 0x340\n  2053: a1 = 0x40\n  2056: ra = 66, jump @10\n      : @67 [@dyn 33] (gas: 13)\n  2061: a4 = s1 + 0x300\n  2065: a3 = u64 [a4 + 0x58]\n  2068: a1 = u64 [a4 + 0x50]\n  2071: a2 = u64 [a4 + 0x48]\n  2074: a0 = u64 [a4 + 0x40]\n  2077: a3 = a3 | a2\n  2080: a2 = a0 | a1\n  2083: a2 = a2 | a3\n  2086: a2 = a2 >> 0x20\n  2089: a1 = a1 | a3\n  2092: a1 = a1 << 0x20\n  2095: a1 = a1 | a2\n  2098: jump @129 if a1 == 0\n      : @68 (gas: 1)\n  2102: trap\n      : @69 (gas: 1)\n  2103: jump @132 if a0 != 1020253707\n      : @70 (gas: 1)\n  2111: t0 = 68, jump @147\n      : @71 [@dyn 34] (gas: 4)\n  2116: ra = 0x46\n  2119: ecalli 14 // 'value_transferred'\n  2121: t0 = 0x48\n  2124: jump @151\n      : @72 [@dyn 35] (gas: 1)\n  2127: t0 = 72, jump @151\n      : @73 [@dyn 36] (gas: 1)\n  2132: jump @138 if a0 != 0\n      : @74 (gas: 3)\n  2136: a0 = u64 [s1 + 0x58]\n  2139: a0 = i32 [a0]\n  2141: jump @138 if a0 <=u 3\n      : @75 (gas: 7)\n  2146: u64 [s1 + 760] = 0\n  2150: u64 [s1 + 752] = 0\n  2154: u64 [s1 + 744] = 0\n  2158: a0 = s1 + 0x300\n  2162: a1 = s1 + 0x2e0\n  2166: u64 [s1 + 736] = 0\n  2170: ra = 74, jump @14\n      : @76 [@dyn 37] (gas: 11)\n  2175: a0 = u64 [s1 + 0x300]\n  2179: u64 [s1 + 0x58] = a0\n  2182: a0 = u64 [s1 + 0x308]\n  2186: u64 [s1 + 0x50] = a0\n  2189: a0 = u64 [s1 + 0x310]\n  2193: u64 [s1 + 0x48] = a0\n  2196: a0 = u64 [s1 + 0x318]\n  2200: u64 [s1 + 0x40] = a0\n  2203: i32 a0 = s1 + 0x3e0\n  2207: ecalli 8 // 'now'\n  2209: fallthrough\n      : @77 (gas: 21)\n  2210: a1 = s1 + 0x300\n  2214: a0 = u64 [a1 + 0xf8]\n  2218: t0 = u64 [s1 + 0x3e0]\n  2222: a2 = u64 [a1 + 0xf0]\n  2226: a3 = u64 [a1 + 0xe8]\n  2230: a1 = u64 [s1 + 0x40]\n  2233: a4 = a0 ^ a1\n  2236: a1 = a0 <u a1\n  2239: a0 = u64 [s1 + 0x48]\n  2242: a5 = a2 <u a0\n  2245: a5 = a1 if a4 != 0\n  2248: a1 = u64 [s1 + 0x50]\n  2251: t1 = a3 ^ a1\n  2254: a3 = a3 <u a1\n  2257: a1 = u64 [s1 + 0x58]\n  2260: a1 = t0 <u a1\n  2263: a1 = a3 if t1 != 0\n  2266: a0 = a0 ^ a2\n  2269: a0 = a0 | a4\n  2272: a1 = a5 if a0 != 0\n  2275: jump @90 if a1 == 0\n      : @78 (gas: 3)\n  2279: a0 = s1 + 0x140\n  2283: a1 = 0x40\n  2286: ra = 76, jump @10\n      : @79 [@dyn 38] (gas: 13)\n  2291: a1 = s1 + 0x100\n  2295: a4 = u64 [a1 + 0x58]\n  2298: a5 = u64 [a1 + 0x50]\n  2301: a2 = u64 [a1 + 0x48]\n  2304: a0 = u64 [a1 + 0x40]\n  2307: a3 = a2 | a4\n  2310: a1 = a0 | a5\n  2313: a1 = a1 | a3\n  2316: a1 = a1 >> 0x20\n  2319: a3 = a3 | a5\n  2322: a3 = a3 << 0x20\n  2325: a1 = a1 | a3\n  2328: jump @68 if a1 != 0\n      : @80 (gas: 11)\n  2332: u64 [s1 + 304] = 0\n  2336: u64 [s1 + 296] = 0\n  2340: u64 [s1 + 288] = 0\n  2344: a3 = 0x8c379a000000000\n  2354: a1 = s1 + 0x120\n  2358: u64 [s1 + 0x138] = a3\n  2362: u64 [s1 + 0x58] = a2\n  2365: u64 [s1 + 0x50] = a0\n  2368: u64 [s1 + 0x48] = a4\n  2371: u64 [s1 + 0x40] = a5\n  2374: ra = 78, jump @12\n      : @81 [@dyn 39] (gas: 1)\n  2379: t0 = 80, jump @148\n      : @82 [@dyn 40] (gas: 1)\n  2384: jump @68 if a0 == 0\n      : @83 (gas: 11)\n  2388: i32 a0 = a2 + 0\n  2390: u64 [s1 + 0x38] = a0\n  2393: i32 a0 = a0 + 0x4\n  2396: u64 [s1 + 280] = 0\n  2400: u64 [s1 + 272] = 0\n  2404: u64 [s1 + 256] = 0x20\n  2409: a1 = s1 + 0x100\n  2413: u64 [s1 + 264] = 0\n  2417: u64 [s1 + 0x48] = a3\n  2420: u64 [s1 + 0x40] = a4\n  2423: ra = 82, jump @12\n      : @84 [@dyn 41] (gas: 1)\n  2428: t0 = 84, jump @150\n      : @85 [@dyn 42] (gas: 1)\n  2433: jump @68 if a0 == 0\n      : @86 (gas: 8)\n  2437: a0 = u64 [s1 + 0x38]\n  2440: i32 a0 = a0 + 0x24\n  2443: u64 [s1 + 248] = 0\n  2447: u64 [s1 + 240] = 0\n  2451: u64 [s1 + 224] = 0x16\n  2456: a1 = s1 + 0xe0\n  2460: u64 [s1 + 232] = 0\n  2464: ra = 86, jump @12\n      : @87 [@dyn 43] (gas: 1)\n  2469: t0 = 88, jump @149\n      : @88 [@dyn 44] (gas: 1)\n  2474: jump @68 if a0 == 0\n      : @89 (gas: 12)\n  2478: a0 = u64 [s1 + 0x38]\n  2481: i32 a0 = a0 + 0x44\n  2484: a1 = u64 [0x20050]\n  2489: a2 = u64 [0x20058]\n  2494: a3 = u64 [0x20060]\n  2499: u64 [s1 + 0xd8] = a1\n  2503: u64 [s1 + 0xd0] = a2\n  2507: u64 [s1 + 0xc8] = a3\n  2511: a1 = s1 + 0xc0\n  2515: u64 [s1 + 192] = 0\n  2519: ra = 0x7c\n  2522: jump @12\n      : @90 (gas: 7)\n  2525: u64 [s1 + 696] = 0\n  2529: u64 [s1 + 688] = 0\n  2533: u64 [s1 + 672] = 0x1\n  2538: a0 = s1 + 0x2c0\n  2542: a1 = s1 + 0x2a0\n  2546: u64 [s1 + 680] = 0\n  2550: ra = 90, jump @14\n      : @91 [@dyn 45] (gas: 9)\n  2555: a0 = u64 [s1 + 0x2c8]\n  2559: u64 [s1 + 0x58] = a0\n  2562: a0 = u64 [s1 + 0x2c0]\n  2566: u64 [s1 + 0x50] = a0\n  2569: a0 = u32 [s1 + 0x2d0]\n  2573: u64 [s1 + 0x48] = a0\n  2576: i32 a0 = s1 + 0x400\n  2580: ecalli 5 // 'caller'\n  2582: fallthrough\n      : @92 (gas: 22)\n  2583: t0 = u64 [s1 + 0x408]\n  2587: a4 = u64 [s1 + 0x400]\n  2591: a5 = u32 [s1 + 0x410]\n  2595: a0 = reverse t0\n  2597: a1 = a0 >> 0x20\n  2600: a2 = reverse a4\n  2602: a3 = a2 << 0x20\n  2605: a1 = a1 | a3\n  2608: a0 = a0 << 0x20\n  2611: a3 = reverse a5\n  2613: a3 = a3 >> 0x20\n  2616: a0 = a0 | a3\n  2619: a2 = a2 >> 0x20\n  2622: a3 = u64 [s1 + 0x48]\n  2625: a2 = a2 ^ a3\n  2628: a3 = u64 [s1 + 0x50]\n  2631: a0 = a0 ^ a3\n  2634: a0 = a0 | a2\n  2637: a2 = u64 [s1 + 0x58]\n  2640: a1 = a1 ^ a2\n  2643: a0 = a0 | a1\n  2646: jump @115 if a0 != 0\n      : @93 (gas: 21)\n  2650: u64 [s1 + 0x28] = a5\n  2653: u64 [s1 + 0x30] = t0\n  2656: u64 [s1 + 0x38] = a4\n  2659: a0 = sp + 0xffffffffffffffe0\n  2662: a0 = a0 & 0xffffffffffffffe0\n  2665: u64 [s1 + 0x58] = a0\n  2668: sp = a0\n  2670: i32 a0 = a0 + 0\n  2672: ecalli 0 // 'balance'\n  2673: a1 = u64 [s1 + 0x58]\n  2676: a0 = u64 [a1 + 0x18]\n  2679: u64 [s1 + 0x50] = a0\n  2682: a0 = u64 [a1 + 0x10]\n  2685: u64 [s1 + 0x48] = a0\n  2688: a0 = u64 [a1 + 0x8]\n  2691: u64 [s1 + 0x40] = a0\n  2694: a0 = u64 [a1]\n  2696: u64 [s1 + 0x58] = a0\n  2699: a0 = s1 + 0x1e0\n  2703: a1 = 0x40\n  2706: ra = 92, jump @10\n      : @94 [@dyn 46] (gas: 13)\n  2711: a1 = s1 + 0x100\n  2715: a4 = u64 [a1 + 0xf8]\n  2719: a5 = u64 [a1 + 0xf0]\n  2723: a3 = u64 [a1 + 0xe8]\n  2727: a0 = u64 [a1 + 0xe0]\n  2731: a2 = a3 | a4\n  2734: a1 = a0 | a5\n  2737: a1 = a1 | a2\n  2740: a1 = a1 >> 0x20\n  2743: a2 = a2 | a5\n  2746: a2 = a2 << 0x20\n  2749: a1 = a1 | a2\n  2752: jump @68 if a1 != 0\n      : @95 (gas: 14)\n  2756: a1 = u64 [s1 + 0x58]\n  2759: u64 [s1 + 0x1c0] = a1\n  2763: a1 = u64 [s1 + 0x40]\n  2766: u64 [s1 + 0x1c8] = a1\n  2770: a1 = u64 [s1 + 0x48]\n  2773: u64 [s1 + 0x1d0] = a1\n  2777: a1 = s1 + 0x1c0\n  2781: a2 = u64 [s1 + 0x50]\n  2784: u64 [s1 + 0x1d8] = a2\n  2788: u64 [s1 + 0x20] = a0\n  2791: u64 [s1 + 0x58] = a3\n  2794: u64 [s1 + 0x50] = a4\n  2797: u64 [s1 + 0x48] = a5\n  2800: ra = 94, jump @12\n      : @96 [@dyn 47] (gas: 3)\n  2805: i32 a0 = s1 + 0x420\n  2809: ecalli 8 // 'now'\n  2811: fallthrough\n      : @97 (gas: 10)\n  2812: a5 = u64 [s1 + 0x20]\n  2815: a0 = u64 [s1 + 0x50]\n  2818: a1 = u64 [s1 + 0x48]\n  2821: a0 = a0 | a1\n  2824: a1 = 0xffffffe0\n  2834: a1 = a5 <u a1\n  2837: a2 = u64 [s1 + 0x58]\n  2840: a1 = 0 if a2 != 0\n  2842: a1 = 0 if a0 != 0\n  2844: jump @68 if a1 == 0\n      : @98 (gas: 11)\n  2848: a2 = u64 [s1 + 0x420]\n  2852: a1 = u64 [s1 + 0x428]\n  2856: a3 = u64 [s1 + 0x430]\n  2860: a4 = u64 [s1 + 0x438]\n  2864: i32 a0 = a5 + 0x20\n  2867: u64 [s1 + 0x1b8] = a4\n  2871: u64 [s1 + 0x1b0] = a3\n  2875: u64 [s1 + 0x1a8] = a1\n  2879: a1 = s1 + 0x1a0\n  2883: u64 [s1 + 0x1a0] = a2\n  2887: ra = 96, jump @12\n      : @99 [@dyn 48] (gas: 31)\n  2892: a0 = u64 [0x20030]\n  2897: a1 = u64 [0x20038]\n  2902: a4 = s1 + 0x100\n  2906: u64 [a4 + 0x98] = a0\n  2910: a0 = u64 [0x20040]\n  2915: u64 [a4 + 0x90] = a1\n  2919: a3 = u64 [0x20048]\n  2924: u64 [a4 + 0x88] = a0\n  2928: a2 = s1 + 0x180\n  2932: u64 [a4 + 0x80] = a3\n  2936: a0 = u64 [s1 + 0x20]\n  2939: ra = 0x62\n  2942: sp = sp + 0xffffffffffffffa0\n  2945: u64 [sp + 0x58] = ra\n  2948: u64 [sp + 0x50] = s0\n  2951: u64 [sp + 0x48] = s1\n  2954: s0 = sp + 0x60\n  2957: sp = sp & 0xffffffffffffffe0\n  2960: a3 = u64 [a2]\n  2962: u64 [sp + 0x18] = a3\n  2965: a3 = u64 [a2 + 0x8]\n  2968: u64 [sp + 0x10] = a3\n  2971: a3 = u64 [a2 + 0x10]\n  2974: u64 [sp + 0x8] = a3\n  2977: a2 = u64 [a2 + 0x18]\n  2980: u64 [sp] = a2\n  2982: i32 a0 = a0 + 0\n  2984: s1 = 0x40\n  2987: a1 = s1\n  2989: ra = 0xa\n  2992: jump @0\n      : @100 [@dyn 49] (gas: 25)\n  2995: a0 = sp + 0xffffffffffffffe0\n  2998: a0 = a0 & 0xffffffffffffffe0\n  3001: u64 [s1 + 0x58] = a0\n  3004: sp = a0\n  3006: i32 a0 = a0 + 0\n  3008: ecalli 0 // 'balance'\n  3009: a3 = u64 [s1 + 0x58]\n  3012: a0 = u64 [a3]\n  3014: a1 = u64 [a3 + 0x8]\n  3017: a2 = u64 [a3 + 0x10]\n  3020: a3 = u64 [a3 + 0x18]\n  3023: a4 = u64 [s1 + 0x30]\n  3026: a5 = s1 + 0x400\n  3030: u64 [a5 + 0x48] = a4\n  3033: a4 = u64 [s1 + 0x38]\n  3036: u64 [a5 + 0x40] = a4\n  3039: a4 = u64 [s1 + 0x28]\n  3042: u32 [a5 + 0x50] = a4\n  3045: u64 [a5 + 0x78] = a3\n  3048: u64 [a5 + 0x70] = a2\n  3051: u64 [a5 + 0x68] = a1\n  3054: u64 [a5 + 0x60] = a0\n  3057: a0 = 0\n  3059: a1 = 0\n  3061: ra = 100, jump @0\n      : @101 [@dyn 50] (gas: 4)\n  3066: u64 [s1 + 0x58] = a0\n  3069: a0 = 0\n  3071: a1 = 0\n  3073: ra = 102, jump @0\n      : @102 [@dyn 51] (gas: 27)\n  3078: u32 [s1 + 1152] = 0\n  3082: u64 [s1 + 1208] = 0\n  3086: u64 [s1 + 1200] = 0\n  3090: u64 [s1 + 1192] = 0\n  3094: u64 [s1 + 1184] = 0\n  3098: a1 = s1 + 0x440\n  3102: a1 = a1 << 0x20\n  3105: t0 = a1 >> 0x20\n  3108: a1 = s1 + 0x460\n  3112: a1 = a1 << 0x20\n  3115: a1 = a1 >> 0x20\n  3118: a2 = s1 + 0x4a0\n  3122: a2 = a2 << 0x20\n  3125: a3 = a2 | a1\n  3128: a4 = u64 [s1 + 0x58]\n  3131: a4 = a4 << 0x20\n  3134: a4 = a4 >> 0x20\n  3137: a0 = a0 << 0x20\n  3140: a0 = a0 >> 0x20\n  3143: a1 = s1 + 0x480\n  3147: a1 = a1 << 0x20\n  3150: a5 = a1 | a0\n  3153: a1 = 0xffffffffffffffff\n  3156: a2 = 0xffffffffffffffff\n  3159: a0 = t0\n  3161: ecalli 1 // 'call'\n  3163: fallthrough\n      : @103 (gas: 1)\n  3164: jump @143 if a0 == 0\n      : @104 (gas: 3)\n  3168: a0 = s1 + 0x160\n  3172: a1 = 0x40\n  3175: ra = 104, jump @10\n      : @105 [@dyn 52] (gas: 11)\n  3180: a1 = s1 + 0x100\n  3184: a0 = u64 [a1 + 0x78]\n  3187: u64 [s1 + 0x58] = a0\n  3190: a0 = u64 [a1 + 0x70]\n  3193: u64 [s1 + 0x50] = a0\n  3196: a0 = u64 [a1 + 0x68]\n  3199: u64 [s1 + 0x48] = a0\n  3202: a0 = u64 [a1 + 0x60]\n  3205: u64 [s1 + 0x40] = a0\n  3208: ecalli 10 // 'return_data_size'\n  3210: fallthrough\n      : @106 (gas: 12)\n  3211: a3 = u64 [s1 + 0x40]\n  3214: a1 = u64 [s1 + 0x58]\n  3217: a2 = u64 [s1 + 0x48]\n  3220: a1 = a1 | a2\n  3223: a4 = u64 [s1 + 0x50]\n  3226: a2 = a3 | a4\n  3229: a2 = a2 | a1\n  3232: a2 = a2 >> 0x20\n  3235: a1 = a1 | a4\n  3238: a1 = a1 << 0x20\n  3241: a1 = a1 | a2\n  3244: jump @68 if a1 != 0\n      : @107 (gas: 3)\n  3248: a2 = a0\n  3250: a0 = a0 >> 0x20\n  3253: jump @68 if a0 != 0\n      : @108 (gas: 6)\n  3257: i32 a0 = a3 + 0\n  3259: i32 a1 = a2 + 0\n  3261: u64 [s1 + 0x58] = a1\n  3264: u64 [s1 + 0x48] = a0\n  3267: u64 [s1 + 0x50] = a2\n  3270: ra = 106, jump @0\n      : @109 [@dyn 53] (gas: 7)\n  3275: a1 = u64 [s1 + 0x50]\n  3278: u32 [s1 + 0x4c0] = a1\n  3282: i32 a0 = a0 + 0\n  3284: i32 a1 = s1 + 0x4c0\n  3288: a2 = 0\n  3290: ecalli 9 // 'return_data_copy'\n  3292: fallthrough\n      : @110 (gas: 3)\n  3293: a0 = i32 [s1 + 0x4c0]\n  3297: a1 = u64 [s1 + 0x58]\n  3300: jump @68 if a0 <u a1\n      : @111 (gas: 2)\n  3304: ecalli 10 // 'return_data_size'\n  3306: fallthrough\n      : @112 (gas: 2)\n  3307: a1 = a0 >> 0x20\n  3310: jump @68 if a1 != 0\n      : @113 (gas: 4)\n  3314: i32 a1 = a0 + 0\n  3316: u64 [s1 + 0x58] = a1\n  3319: a0 = u64 [s1 + 0x48]\n  3322: ra = 108, jump @0\n      : @114 [@dyn 54] (gas: 5)\n  3327: i32 a1 = a0 + 0\n  3329: a0 = 0x1\n  3332: a2 = u64 [s1 + 0x58]\n  3335: ecalli 11 // 'seal_return'\n  3337: fallthrough\n      : @115 (gas: 3)\n  3338: a0 = s1 + 0x280\n  3342: a1 = 0x40\n  3345: ra = 110, jump @10\n      : @116 [@dyn 55] (gas: 13)\n  3350: a1 = s1 + 0x200\n  3354: a4 = u64 [a1 + 0x98]\n  3358: a5 = u64 [a1 + 0x90]\n  3362: a2 = u64 [a1 + 0x88]\n  3366: a0 = u64 [a1 + 0x80]\n  3370: a3 = a2 | a4\n  3373: a1 = a0 | a5\n  3376: a1 = a1 | a3\n  3379: a1 = a1 >> 0x20\n  3382: a3 = a3 | a5\n  3385: a3 = a3 << 0x20\n  3388: a1 = a1 | a3\n  3391: jump @68 if a1 != 0\n      : @117 (gas: 11)\n  3395: u64 [s1 + 624] = 0\n  3399: u64 [s1 + 616] = 0\n  3403: u64 [s1 + 608] = 0\n  3407: a3 = 0x8c379a000000000\n  3417: a1 = s1 + 0x260\n  3421: u64 [s1 + 0x278] = a3\n  3425: u64 [s1 + 0x58] = a2\n  3428: u64 [s1 + 0x50] = a0\n  3431: u64 [s1 + 0x48] = a4\n  3434: u64 [s1 + 0x40] = a5\n  3437: ra = 112, jump @12\n      : @118 [@dyn 56] (gas: 1)\n  3442: t0 = 114, jump @148\n      : @119 [@dyn 57] (gas: 1)\n  3447: jump @68 if a0 == 0\n      : @120 (gas: 11)\n  3451: i32 a0 = a2 + 0\n  3453: u64 [s1 + 0x38] = a0\n  3456: i32 a0 = a0 + 0x4\n  3459: u64 [s1 + 600] = 0\n  3463: u64 [s1 + 592] = 0\n  3467: u64 [s1 + 576] = 0x20\n  3472: a1 = s1 + 0x240\n  3476: u64 [s1 + 584] = 0\n  3480: u64 [s1 + 0x48] = a3\n  3483: u64 [s1 + 0x40] = a4\n  3486: ra = 116, jump @12\n      : @121 [@dyn 58] (gas: 1)\n  3491: t0 = 118, jump @150\n      : @122 [@dyn 59] (gas: 1)\n  3496: jump @68 if a0 == 0\n      : @123 (gas: 8)\n  3500: a0 = u64 [s1 + 0x38]\n  3503: i32 a0 = a0 + 0x24\n  3506: u64 [s1 + 568] = 0\n  3510: u64 [s1 + 560] = 0\n  3514: u64 [s1 + 544] = 0x14\n  3519: a1 = s1 + 0x220\n  3523: u64 [s1 + 552] = 0\n  3527: ra = 120, jump @12\n      : @124 [@dyn 60] (gas: 1)\n  3532: t0 = 122, jump @149\n      : @125 [@dyn 61] (gas: 1)\n  3537: jump @68 if a0 == 0\n      : @126 (gas: 12)\n  3541: a0 = u64 [s1 + 0x38]\n  3544: i32 a0 = a0 + 0x44\n  3547: a1 = u64 [0x20020]\n  3552: a2 = u64 [0x20028]\n  3557: a3 = s1 + 0x200\n  3561: u64 [a3 + 0x18] = a1\n  3564: u64 [a3 + 0x10] = a2\n  3567: a1 = 0x776e657200000000\n  3577: u64 [a3 + 0x8] = a1\n  3580: a1 = s1 + 0x200\n  3584: u64 [s1 + 512] = 0\n  3588: ra = 124, jump @12\n      : @127 [@dyn 62] (gas: 3)\n  3593: a1 = 0x64\n  3596: a0 = u64 [s1 + 0x38]\n  3599: ra = 126, jump @0\n      : @128 [@dyn 63] (gas: 5)\n  3604: i32 a1 = a0 + 0\n  3606: a0 = 0x1\n  3609: a2 = 0x64\n  3612: ecalli 11 // 'seal_return'\n  3614: fallthrough\n      : @129 (gas: 13)\n  3615: a1 = u64 [s1 + 0x48]\n  3618: a1 = a1 << 0x20\n  3621: a2 = a1 >> 0x20\n  3624: u64 [s1 + 824] = 0\n  3628: a1 = u64 [s1 + 0x50]\n  3631: a3 = s1 + 0x300\n  3635: u64 [a3 + 0x20] = a1\n  3638: a1 = u64 [s1 + 0x58]\n  3641: u64 [a3 + 0x28] = a1\n  3644: a1 = s1 + 0x320\n  3648: u64 [a3 + 0x30] = a2\n  3651: u64 [s1 + 0x58] = a0\n  3654: ra = 128, jump @12\n      : @130 [@dyn 64] (gas: 3)\n  3660: a0 = i32 [s1 + 0x58]\n  3663: a1 = 0x20\n  3666: ra = 130, jump @0\n      : @131 [@dyn 65] (gas: 6)\n  3672: i32 a1 = a0 + 0\n  3674: a2 = 0x20\n  3677: a0 = 0\n  3679: ra = 0x84\n  3683: ecalli 11 // 'seal_return'\n  3685: fallthrough\n      : @132 [@dyn 66] (gas: 1)\n  3686: jump @138 if a0 != 622598819\n      : @133 (gas: 1)\n  3693: t0 = 134, jump @147\n      : @134 [@dyn 67] (gas: 4)\n  3699: ra = 0x88\n  3703: ecalli 14 // 'value_transferred'\n  3705: t0 = 0x8a\n  3709: jump @151\n      : @135 [@dyn 68] (gas: 1)\n  3712: t0 = 138, jump @151\n      : @136 [@dyn 69] (gas: 1)\n  3718: jump @138 if a0 != 0\n      : @137 (gas: 3)\n  3721: a0 = u64 [s1 + 0x58]\n  3724: a0 = i32 [a0]\n  3726: jump @140 if a0 >u 3\n      : @138 (gas: 3)\n  3730: a0 = 0\n  3732: a1 = 0\n  3734: ra = 140, jump @0\n      : @139 [@dyn 70] (gas: 5)\n  3740: i32 a1 = a0 + 0\n  3742: a0 = 0x1\n  3745: a2 = 0\n  3747: ecalli 11 // 'seal_return'\n  3749: fallthrough\n      : @140 (gas: 7)\n  3750: u64 [s1 + 152] = 0\n  3754: u64 [s1 + 144] = 0\n  3758: u64 [s1 + 136] = 0\n  3762: a0 = s1 + 0xa0\n  3766: a1 = s1 + 0x80\n  3770: u64 [s1 + 128] = 0\n  3774: ra = 142, jump @14\n      : @141 [@dyn 71] (gas: 11)\n  3780: a2 = u64 [s1 + 0xa0]\n  3784: a0 = u64 [s1 + 0xa8]\n  3788: a1 = u64 [s1 + 0xb0]\n  3792: a3 = u64 [s1 + 0xb8]\n  3796: u64 [s1 + 0x78] = a3\n  3799: u64 [s1 + 0x70] = a1\n  3802: u64 [s1 + 0x68] = a0\n  3805: a0 = 0x80\n  3809: a1 = s1 + 0x60\n  3812: u64 [s1 + 0x60] = a2\n  3815: ra = 144, jump @12\n      : @142 [@dyn 72] (gas: 4)\n  3821: a0 = 0x80\n  3825: a1 = 0x20\n  3828: ra = 0x82\n  3832: jump @0\n      : @143 (gas: 2)\n  3835: a1 = 0\n  3837: ra = 146, jump @0\n      : @144 [@dyn 73] (gas: 5)\n  3843: i32 a1 = a0 + 0\n  3845: a0 = 0\n  3847: a2 = 0\n  3849: ecalli 11 // 'seal_return'\n  3851: jump @140\n      : @145 [export #0: 'call'] (gas: 2)\n  3853: a0 = 0\n  3855: ra = 148, jump @20\n      : @146 [@dyn 74] [export #1: 'deploy'] (gas: 2)\n  3861: a0 = 0x1\n  3864: ra = 150, jump @20\n      : @147 [@dyn 75] (gas: 11)\n  3870: a0 = sp + 0xffffffffffffffe0\n  3873: a0 = a0 & 0xffffffffffffffe0\n  3876: u64 [s1 + 0x50] = a0\n  3879: sp = a0\n  3881: a1 = 0\n  3883: u64 [a0 + 24] = 0\n  3886: u64 [a0 + 16] = 0\n  3889: u64 [a0 + 8] = 0\n  3892: u64 [a0 + 0] = 0\n  3894: i32 a0 = a0 + 0\n  3896: jump [t0]\n      : @148 (gas: 11)\n  3898: a2 = u64 [s1 + 0x50]\n  3901: a0 = u64 [s1 + 0x48]\n  3904: a3 = u64 [s1 + 0x40]\n  3907: a3 = a3 | a0\n  3910: a4 = 0x100000000\n  3920: a0 = 0xfffffffc\n  3930: a0 = a2 <u a0\n  3933: a1 = u64 [s1 + 0x58]\n  3936: a0 = 0 if a1 != 0\n  3938: a0 = 0 if a3 != 0\n  3940: jump [t0]\n      : @149 (gas: 8)\n  3942: a0 = 0xffffffbc\n  3952: a1 = u64 [s1 + 0x50]\n  3955: a0 = a1 <u a0\n  3958: a1 = u64 [s1 + 0x58]\n  3961: a0 = 0 if a1 != 0\n  3963: a1 = u64 [s1 + 0x48]\n  3966: a0 = 0 if a1 != 0\n  3968: jump [t0]\n      : @150 (gas: 9)\n  3970: a4 = u64 [s1 + 0x48]\n  3973: a3 = u64 [s1 + 0x50]\n  3976: a2 = u64 [s1 + 0x58]\n  3979: a0 = u64 [s1 + 0x40]\n  3982: a0 = a0 + 0xffffffffffffffdc\n  3985: a0 = a3 <u a0\n  3988: a0 = 0 if a2 != 0\n  3990: a0 = 0 if a4 != 0\n  3992: jump [t0]\n      : @151 (gas: 9)\n  3994: a3 = u64 [s1 + 0x50]\n  3997: a0 = u64 [a3 + 0x10]\n  4000: a1 = u64 [a3 + 0x18]\n  4003: a2 = u64 [a3 + 0x8]\n  4006: a3 = u64 [a3]\n  4008: a1 = a1 | a2\n  4011: a0 = a0 | a3\n  4014: a0 = a0 | a1\n  4017: jump [t0]\n      : @152 (gas: 6)\n  4019: sp = s0 + 0xffffffffffffffa0\n  4022: ra = u64 [sp + 0x58]\n  4025: s0 = u64 [sp + 0x50]\n  4028: s1 = u64 [sp + 0x48]\n  4031: sp = sp + 0x60\n  4034: jump [t0]\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"owner()":"8da5cb5b","unlockTime()":"251c1aa3","withdraw()":"3ccfd60b"}},"irOptimized":"/// @use-src 1:\"contracts/Lock.sol\"\nobject \"Lock_475\" {\n    code {\n        {\n            /// @src 1:141:1007  \"contract Lock {...\"\n            let _1 := memoryguard(0x80)\n            let programSize := datasize(\"Lock_475\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:141:1007  \"contract Lock {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:141:1007  \"contract Lock {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:141:1007  \"contract Lock {...\"\n            let value := mload(_1)\n            if iszero(/** @src 1:340:369  \"block.timestamp < _unlockTime\" */ lt(/** @src 1:340:355  \"block.timestamp\" */ timestamp(), /** @src 1:340:369  \"block.timestamp < _unlockTime\" */ value))\n            /// @src 1:141:1007  \"contract Lock {...\"\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 35)\n                mstore(add(memPtr, 68), \"Unlock time should be in the fut\")\n                mstore(add(memPtr, 100), \"ure\")\n                revert(memPtr, 132)\n            }\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 1:141:1007  \"contract Lock {...\" */ value)\n            sstore(1, or(and(sload(1), not(sub(shl(160, 1), 1))), /** @src 1:491:501  \"msg.sender\" */ caller()))\n            /// @src 1:141:1007  \"contract Lock {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"Lock_475_deployed\")\n            codecopy(_2, dataoffset(\"Lock_475_deployed\"), _3)\n            return(_2, _3)\n        }\n    }\n    /// @use-src 1:\"contracts/Lock.sol\"\n    object \"Lock_475_deployed\" {\n        code {\n            {\n                /// @src 1:141:1007  \"contract Lock {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x251c1aa3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, sload(0))\n                        return(_1, 32)\n                    }\n                    case 0x3ccfd60b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        if /** @src 1:766:795  \"block.timestamp >= unlockTime\" */ lt(/** @src 1:766:781  \"block.timestamp\" */ timestamp(), /** @src 1:141:1007  \"contract Lock {...\" */ sload(0))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 22)\n                            mstore(add(memPtr, 68), \"You can't withdraw yet\")\n                            revert(memPtr, 100)\n                        }\n                        let value := and(sload(/** @src 1:854:859  \"owner\" */ 0x01), /** @src 1:141:1007  \"contract Lock {...\" */ sub(shl(160, 1), 1))\n                        if iszero(/** @src 1:840:859  \"msg.sender == owner\" */ eq(/** @src 1:840:850  \"msg.sender\" */ caller(), /** @src 1:840:859  \"msg.sender == owner\" */ value))\n                        /// @src 1:141:1007  \"contract Lock {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 20)\n                            mstore(add(memPtr_1, 68), \"You aren't the owner\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 1:911:932  \"address(this).balance\"\n                        let expr := selfbalance()\n                        /// @src 1:900:950  \"Withdrawal(address(this).balance, block.timestamp)\"\n                        let _2 := /** @src 1:141:1007  \"contract Lock {...\" */ mload(64)\n                        mstore(_2, expr)\n                        mstore(add(_2, 32), /** @src 1:766:781  \"block.timestamp\" */ timestamp())\n                        /// @src 1:900:950  \"Withdrawal(address(this).balance, block.timestamp)\"\n                        log1(_2, /** @src 1:141:1007  \"contract Lock {...\" */ 64, /** @src 1:900:950  \"Withdrawal(address(this).balance, block.timestamp)\" */ 0xbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93)\n                        /// @src 1:976:997  \"address(this).balance\"\n                        let expr_1 := selfbalance()\n                        /// @src 1:961:998  \"owner.transfer(address(this).balance)\"\n                        let _3 := /** @src 1:141:1007  \"contract Lock {...\" */ 0\n                        /// @src 1:961:998  \"owner.transfer(address(this).balance)\"\n                        if iszero(expr_1) { _3 := 2300 }\n                        if iszero(call(_3, value, expr_1, /** @src 1:141:1007  \"contract Lock {...\" */ 0, 0, 0, 0))\n                        /// @src 1:961:998  \"owner.transfer(address(this).balance)\"\n                        {\n                            /// @src 1:141:1007  \"contract Lock {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_1 := and(sload(/** @src 1:189:217  \"address payable public owner\" */ 1), /** @src 1:141:1007  \"contract Lock {...\" */ sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, value_1)\n                        return(memPos, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220aa7ad803224568721e64e66e2df8f97d54a6ef09e702e6e0657b9d4bf18cb3ef64736f6c634300081c0033\"\n    }\n}\n","hash":"9a79a709a8f14494254702bf814a23a4abf1171aeb65ec592bd76a04639fa6d2","factoryDependencies":{}}},"contracts/interfaces/IContractVerifier.sol":{"IContractVerifier":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contractId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ContractAccessGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contractId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ContractAccessRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contractId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"uploader","type":"address"}],"name":"ContractUploaded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"role","type":"string"},{"indexed":false,"internalType":"string","name":"departmentId","type":"string"}],"name":"RoleAssigned","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"assignUserRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"canAccessContract","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"getContractMeta","outputs":[{"components":[{"internalType":"string","name":"contractType","type":"string"},{"internalType":"address[]","name":"allowedViewers","type":"address[]"}],"internalType":"struct IContractVerifier.ContractMeta","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"uint256","name":"version","type":"uint256"}],"name":"getHistory","outputs":[{"components":[{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"address","name":"uploader","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"remark","type":"string"}],"internalType":"struct IContractVerifier.ContractVersion","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"getHistoryCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"getLatestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"uploader","type":"address"}],"name":"getUploaderHistory","outputs":[{"internalType":"uint256[]","name":"contractIds","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserInfo","outputs":[{"components":[{"internalType":"string","name":"role","type":"string"},{"internalType":"string","name":"departmentId","type":"string"}],"internalType":"struct IContractVerifier.UserInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"grantAccessToContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"fileHash","type":"bytes32"}],"name":"isHashExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"revokeAccessFromContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"bytes32","name":"fileHash","type":"bytes32"},{"internalType":"string","name":"remark","type":"string"},{"internalType":"string","name":"contractType","type":"string"}],"name":"uploadContract","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractAccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractAccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"}],\"name\":\"ContractUploaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"departmentId\",\"type\":\"string\"}],\"name\":\"RoleAssigned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"assignUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canAccessContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"getContractMeta\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"allowedViewers\",\"type\":\"address[]\"}],\"internalType\":\"struct IContractVerifier.ContractMeta\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"}],\"internalType\":\"struct IContractVerifier.ContractVersion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"getHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"getLatestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"}],\"name\":\"getUploaderHistory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"contractIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"departmentId\",\"type\":\"string\"}],\"internalType\":\"struct IContractVerifier.UserInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"grantAccessToContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"isHashExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"revokeAccessFromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractType\",\"type\":\"string\"}],\"name\":\"uploadContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IContractVerifier.sol\":\"IContractVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IContractVerifier.sol\":{\"keccak256\":\"0x5f6a2ecfb8159b0df8466e82cb13ae049cf395afd65bb6ef61b58cfb3fb1d05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff052c1217a35c74e53a0e3a9832e489d962b085378625fc49c070fe17061c4f\",\"dweb:/ipfs/QmZNYwu8F8d3B2btkM9kHrBYdYpzWn1dx9dvA5bbcSbGDK\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"assignUserRole(address)":"859c62bd","canAccessContract(uint256,address)":"d17fb93e","getContractMeta(uint256)":"4f8ff2ba","getHistory(uint256,uint256)":"6906679b","getHistoryCount(uint256)":"afa8880e","getLatestHash(uint256)":"7c71654a","getUploaderHistory(address)":"4a971cf7","getUserInfo(address)":"6386c1c7","grantAccessToContract(uint256,address)":"cc826a1d","isHashExists(bytes32)":"3bd4c457","revokeAccessFromContract(uint256,address)":"a125d423","uploadContract(uint256,bytes32,string,string)":"010f4549"}},"irOptimized":""}}}}}